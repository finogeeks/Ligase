// Copyright (C) 2020 Finogeeks Co., Ltd
//
// This program is free software: you can redistribute it and/or  modify
// it under the terms of the GNU Affero General Public License, version 3,
// as published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// Code generated by capnpc-go. DO NOT EDIT.

package external

import (
	math "math"
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type DelDevicesByIDRequestCapn struct{ capnp.Struct }

// DelDevicesByIDRequestCapn_TypeID is the unique identifier for the type DelDevicesByIDRequestCapn.
const DelDevicesByIDRequestCapn_TypeID = 0xaf2c8e1482733e39

func NewDelDevicesByIDRequestCapn(s *capnp.Segment) (DelDevicesByIDRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return DelDevicesByIDRequestCapn{st}, err
}

func NewRootDelDevicesByIDRequestCapn(s *capnp.Segment) (DelDevicesByIDRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return DelDevicesByIDRequestCapn{st}, err
}

func ReadRootDelDevicesByIDRequestCapn(msg *capnp.Message) (DelDevicesByIDRequestCapn, error) {
	root, err := msg.RootPtr()
	return DelDevicesByIDRequestCapn{root.Struct()}, err
}

func (s DelDevicesByIDRequestCapn) String() string {
	str, _ := text.Marshal(0xaf2c8e1482733e39, s.Struct)
	return str
}

func (s DelDevicesByIDRequestCapn) DeviceId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s DelDevicesByIDRequestCapn) HasDeviceId() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s DelDevicesByIDRequestCapn) DeviceIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s DelDevicesByIDRequestCapn) SetDeviceId(v string) error {
	return s.Struct.SetText(0, v)
}

func (s DelDevicesByIDRequestCapn) Auth() (AuthDataCapn, error) {
	p, err := s.Struct.Ptr(1)
	return AuthDataCapn{Struct: p.Struct()}, err
}

func (s DelDevicesByIDRequestCapn) HasAuth() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s DelDevicesByIDRequestCapn) SetAuth(v AuthDataCapn) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewAuth sets the auth field to a newly
// allocated AuthDataCapn struct, preferring placement in s's segment.
func (s DelDevicesByIDRequestCapn) NewAuth() (AuthDataCapn, error) {
	ss, err := NewAuthDataCapn(s.Struct.Segment())
	if err != nil {
		return AuthDataCapn{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// DelDevicesByIDRequestCapn_List is a list of DelDevicesByIDRequestCapn.
type DelDevicesByIDRequestCapn_List struct{ capnp.List }

// NewDelDevicesByIDRequestCapn creates a new list of DelDevicesByIDRequestCapn.
func NewDelDevicesByIDRequestCapn_List(s *capnp.Segment, sz int32) (DelDevicesByIDRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return DelDevicesByIDRequestCapn_List{l}, err
}

func (s DelDevicesByIDRequestCapn_List) At(i int) DelDevicesByIDRequestCapn {
	return DelDevicesByIDRequestCapn{s.List.Struct(i)}
}

func (s DelDevicesByIDRequestCapn_List) Set(i int, v DelDevicesByIDRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s DelDevicesByIDRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xaf2c8e1482733e39, s.List)
	return str
}

// DelDevicesByIDRequestCapn_Promise is a wrapper for a DelDevicesByIDRequestCapn promised by a client call.
type DelDevicesByIDRequestCapn_Promise struct{ *capnp.Pipeline }

func (p DelDevicesByIDRequestCapn_Promise) Struct() (DelDevicesByIDRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return DelDevicesByIDRequestCapn{s}, err
}

func (p DelDevicesByIDRequestCapn_Promise) Auth() AuthDataCapn_Promise {
	return AuthDataCapn_Promise{Pipeline: p.Pipeline.GetPipeline(1)}
}

type DelPushrulesByIDRequestCapn struct{ capnp.Struct }

// DelPushrulesByIDRequestCapn_TypeID is the unique identifier for the type DelPushrulesByIDRequestCapn.
const DelPushrulesByIDRequestCapn_TypeID = 0xfcd7f6cdba6022fa

func NewDelPushrulesByIDRequestCapn(s *capnp.Segment) (DelPushrulesByIDRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return DelPushrulesByIDRequestCapn{st}, err
}

func NewRootDelPushrulesByIDRequestCapn(s *capnp.Segment) (DelPushrulesByIDRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return DelPushrulesByIDRequestCapn{st}, err
}

func ReadRootDelPushrulesByIDRequestCapn(msg *capnp.Message) (DelPushrulesByIDRequestCapn, error) {
	root, err := msg.RootPtr()
	return DelPushrulesByIDRequestCapn{root.Struct()}, err
}

func (s DelPushrulesByIDRequestCapn) String() string {
	str, _ := text.Marshal(0xfcd7f6cdba6022fa, s.Struct)
	return str
}

func (s DelPushrulesByIDRequestCapn) Scope() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s DelPushrulesByIDRequestCapn) HasScope() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s DelPushrulesByIDRequestCapn) ScopeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s DelPushrulesByIDRequestCapn) SetScope(v string) error {
	return s.Struct.SetText(0, v)
}

func (s DelPushrulesByIDRequestCapn) Kind() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s DelPushrulesByIDRequestCapn) HasKind() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s DelPushrulesByIDRequestCapn) KindBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s DelPushrulesByIDRequestCapn) SetKind(v string) error {
	return s.Struct.SetText(1, v)
}

func (s DelPushrulesByIDRequestCapn) RuleID() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s DelPushrulesByIDRequestCapn) HasRuleID() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s DelPushrulesByIDRequestCapn) RuleIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s DelPushrulesByIDRequestCapn) SetRuleID(v string) error {
	return s.Struct.SetText(2, v)
}

// DelPushrulesByIDRequestCapn_List is a list of DelPushrulesByIDRequestCapn.
type DelPushrulesByIDRequestCapn_List struct{ capnp.List }

// NewDelPushrulesByIDRequestCapn creates a new list of DelPushrulesByIDRequestCapn.
func NewDelPushrulesByIDRequestCapn_List(s *capnp.Segment, sz int32) (DelPushrulesByIDRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return DelPushrulesByIDRequestCapn_List{l}, err
}

func (s DelPushrulesByIDRequestCapn_List) At(i int) DelPushrulesByIDRequestCapn {
	return DelPushrulesByIDRequestCapn{s.List.Struct(i)}
}

func (s DelPushrulesByIDRequestCapn_List) Set(i int, v DelPushrulesByIDRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s DelPushrulesByIDRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xfcd7f6cdba6022fa, s.List)
	return str
}

// DelPushrulesByIDRequestCapn_Promise is a wrapper for a DelPushrulesByIDRequestCapn promised by a client call.
type DelPushrulesByIDRequestCapn_Promise struct{ *capnp.Pipeline }

func (p DelPushrulesByIDRequestCapn_Promise) Struct() (DelPushrulesByIDRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return DelPushrulesByIDRequestCapn{s}, err
}

type DelRoomsTagsByIDRequestCapn struct{ capnp.Struct }

// DelRoomsTagsByIDRequestCapn_TypeID is the unique identifier for the type DelRoomsTagsByIDRequestCapn.
const DelRoomsTagsByIDRequestCapn_TypeID = 0xfd765c10c8315840

func NewDelRoomsTagsByIDRequestCapn(s *capnp.Segment) (DelRoomsTagsByIDRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return DelRoomsTagsByIDRequestCapn{st}, err
}

func NewRootDelRoomsTagsByIDRequestCapn(s *capnp.Segment) (DelRoomsTagsByIDRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return DelRoomsTagsByIDRequestCapn{st}, err
}

func ReadRootDelRoomsTagsByIDRequestCapn(msg *capnp.Message) (DelRoomsTagsByIDRequestCapn, error) {
	root, err := msg.RootPtr()
	return DelRoomsTagsByIDRequestCapn{root.Struct()}, err
}

func (s DelRoomsTagsByIDRequestCapn) String() string {
	str, _ := text.Marshal(0xfd765c10c8315840, s.Struct)
	return str
}

func (s DelRoomsTagsByIDRequestCapn) UserId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s DelRoomsTagsByIDRequestCapn) HasUserId() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s DelRoomsTagsByIDRequestCapn) UserIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s DelRoomsTagsByIDRequestCapn) SetUserId(v string) error {
	return s.Struct.SetText(0, v)
}

func (s DelRoomsTagsByIDRequestCapn) RoomId() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s DelRoomsTagsByIDRequestCapn) HasRoomId() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s DelRoomsTagsByIDRequestCapn) RoomIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s DelRoomsTagsByIDRequestCapn) SetRoomId(v string) error {
	return s.Struct.SetText(1, v)
}

func (s DelRoomsTagsByIDRequestCapn) Tag() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s DelRoomsTagsByIDRequestCapn) HasTag() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s DelRoomsTagsByIDRequestCapn) TagBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s DelRoomsTagsByIDRequestCapn) SetTag(v string) error {
	return s.Struct.SetText(2, v)
}

// DelRoomsTagsByIDRequestCapn_List is a list of DelRoomsTagsByIDRequestCapn.
type DelRoomsTagsByIDRequestCapn_List struct{ capnp.List }

// NewDelRoomsTagsByIDRequestCapn creates a new list of DelRoomsTagsByIDRequestCapn.
func NewDelRoomsTagsByIDRequestCapn_List(s *capnp.Segment, sz int32) (DelRoomsTagsByIDRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return DelRoomsTagsByIDRequestCapn_List{l}, err
}

func (s DelRoomsTagsByIDRequestCapn_List) At(i int) DelRoomsTagsByIDRequestCapn {
	return DelRoomsTagsByIDRequestCapn{s.List.Struct(i)}
}

func (s DelRoomsTagsByIDRequestCapn_List) Set(i int, v DelRoomsTagsByIDRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s DelRoomsTagsByIDRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xfd765c10c8315840, s.List)
	return str
}

// DelRoomsTagsByIDRequestCapn_Promise is a wrapper for a DelRoomsTagsByIDRequestCapn promised by a client call.
type DelRoomsTagsByIDRequestCapn_Promise struct{ *capnp.Pipeline }

func (p DelRoomsTagsByIDRequestCapn_Promise) Struct() (DelRoomsTagsByIDRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return DelRoomsTagsByIDRequestCapn{s}, err
}

type GetDevicesByIDRequestCapn struct{ capnp.Struct }

// GetDevicesByIDRequestCapn_TypeID is the unique identifier for the type GetDevicesByIDRequestCapn.
const GetDevicesByIDRequestCapn_TypeID = 0x9368ba1f37b34503

func NewGetDevicesByIDRequestCapn(s *capnp.Segment) (GetDevicesByIDRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetDevicesByIDRequestCapn{st}, err
}

func NewRootGetDevicesByIDRequestCapn(s *capnp.Segment) (GetDevicesByIDRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetDevicesByIDRequestCapn{st}, err
}

func ReadRootGetDevicesByIDRequestCapn(msg *capnp.Message) (GetDevicesByIDRequestCapn, error) {
	root, err := msg.RootPtr()
	return GetDevicesByIDRequestCapn{root.Struct()}, err
}

func (s GetDevicesByIDRequestCapn) String() string {
	str, _ := text.Marshal(0x9368ba1f37b34503, s.Struct)
	return str
}

func (s GetDevicesByIDRequestCapn) DeviceId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GetDevicesByIDRequestCapn) HasDeviceId() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetDevicesByIDRequestCapn) DeviceIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GetDevicesByIDRequestCapn) SetDeviceId(v string) error {
	return s.Struct.SetText(0, v)
}

// GetDevicesByIDRequestCapn_List is a list of GetDevicesByIDRequestCapn.
type GetDevicesByIDRequestCapn_List struct{ capnp.List }

// NewGetDevicesByIDRequestCapn creates a new list of GetDevicesByIDRequestCapn.
func NewGetDevicesByIDRequestCapn_List(s *capnp.Segment, sz int32) (GetDevicesByIDRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return GetDevicesByIDRequestCapn_List{l}, err
}

func (s GetDevicesByIDRequestCapn_List) At(i int) GetDevicesByIDRequestCapn {
	return GetDevicesByIDRequestCapn{s.List.Struct(i)}
}

func (s GetDevicesByIDRequestCapn_List) Set(i int, v GetDevicesByIDRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetDevicesByIDRequestCapn_List) String() string {
	str, _ := text.MarshalList(0x9368ba1f37b34503, s.List)
	return str
}

// GetDevicesByIDRequestCapn_Promise is a wrapper for a GetDevicesByIDRequestCapn promised by a client call.
type GetDevicesByIDRequestCapn_Promise struct{ *capnp.Pipeline }

func (p GetDevicesByIDRequestCapn_Promise) Struct() (GetDevicesByIDRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetDevicesByIDRequestCapn{s}, err
}

type GetDevicesResponseCapn struct{ capnp.Struct }

// GetDevicesResponseCapn_TypeID is the unique identifier for the type GetDevicesResponseCapn.
const GetDevicesResponseCapn_TypeID = 0xd3d9a3cbe851ea30

func NewGetDevicesResponseCapn(s *capnp.Segment) (GetDevicesResponseCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetDevicesResponseCapn{st}, err
}

func NewRootGetDevicesResponseCapn(s *capnp.Segment) (GetDevicesResponseCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetDevicesResponseCapn{st}, err
}

func ReadRootGetDevicesResponseCapn(msg *capnp.Message) (GetDevicesResponseCapn, error) {
	root, err := msg.RootPtr()
	return GetDevicesResponseCapn{root.Struct()}, err
}

func (s GetDevicesResponseCapn) String() string {
	str, _ := text.Marshal(0xd3d9a3cbe851ea30, s.Struct)
	return str
}

func (s GetDevicesResponseCapn) Devices() (DeviceCapn_List, error) {
	p, err := s.Struct.Ptr(0)
	return DeviceCapn_List{List: p.List()}, err
}

func (s GetDevicesResponseCapn) HasDevices() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetDevicesResponseCapn) SetDevices(v DeviceCapn_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewDevices sets the devices field to a newly
// allocated DeviceCapn_List, preferring placement in s's segment.
func (s GetDevicesResponseCapn) NewDevices(n int32) (DeviceCapn_List, error) {
	l, err := NewDeviceCapn_List(s.Struct.Segment(), n)
	if err != nil {
		return DeviceCapn_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// GetDevicesResponseCapn_List is a list of GetDevicesResponseCapn.
type GetDevicesResponseCapn_List struct{ capnp.List }

// NewGetDevicesResponseCapn creates a new list of GetDevicesResponseCapn.
func NewGetDevicesResponseCapn_List(s *capnp.Segment, sz int32) (GetDevicesResponseCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return GetDevicesResponseCapn_List{l}, err
}

func (s GetDevicesResponseCapn_List) At(i int) GetDevicesResponseCapn {
	return GetDevicesResponseCapn{s.List.Struct(i)}
}

func (s GetDevicesResponseCapn_List) Set(i int, v GetDevicesResponseCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetDevicesResponseCapn_List) String() string {
	str, _ := text.MarshalList(0xd3d9a3cbe851ea30, s.List)
	return str
}

// GetDevicesResponseCapn_Promise is a wrapper for a GetDevicesResponseCapn promised by a client call.
type GetDevicesResponseCapn_Promise struct{ *capnp.Pipeline }

func (p GetDevicesResponseCapn_Promise) Struct() (GetDevicesResponseCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetDevicesResponseCapn{s}, err
}

type GetKeysChangesRequestCapn struct{ capnp.Struct }

// GetKeysChangesRequestCapn_TypeID is the unique identifier for the type GetKeysChangesRequestCapn.
const GetKeysChangesRequestCapn_TypeID = 0xd93ba80c73591bb5

func NewGetKeysChangesRequestCapn(s *capnp.Segment) (GetKeysChangesRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return GetKeysChangesRequestCapn{st}, err
}

func NewRootGetKeysChangesRequestCapn(s *capnp.Segment) (GetKeysChangesRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return GetKeysChangesRequestCapn{st}, err
}

func ReadRootGetKeysChangesRequestCapn(msg *capnp.Message) (GetKeysChangesRequestCapn, error) {
	root, err := msg.RootPtr()
	return GetKeysChangesRequestCapn{root.Struct()}, err
}

func (s GetKeysChangesRequestCapn) String() string {
	str, _ := text.Marshal(0xd93ba80c73591bb5, s.Struct)
	return str
}

func (s GetKeysChangesRequestCapn) From() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GetKeysChangesRequestCapn) HasFrom() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetKeysChangesRequestCapn) FromBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GetKeysChangesRequestCapn) SetFrom(v string) error {
	return s.Struct.SetText(0, v)
}

func (s GetKeysChangesRequestCapn) To() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s GetKeysChangesRequestCapn) HasTo() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s GetKeysChangesRequestCapn) ToBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s GetKeysChangesRequestCapn) SetTo(v string) error {
	return s.Struct.SetText(1, v)
}

// GetKeysChangesRequestCapn_List is a list of GetKeysChangesRequestCapn.
type GetKeysChangesRequestCapn_List struct{ capnp.List }

// NewGetKeysChangesRequestCapn creates a new list of GetKeysChangesRequestCapn.
func NewGetKeysChangesRequestCapn_List(s *capnp.Segment, sz int32) (GetKeysChangesRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return GetKeysChangesRequestCapn_List{l}, err
}

func (s GetKeysChangesRequestCapn_List) At(i int) GetKeysChangesRequestCapn {
	return GetKeysChangesRequestCapn{s.List.Struct(i)}
}

func (s GetKeysChangesRequestCapn_List) Set(i int, v GetKeysChangesRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetKeysChangesRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xd93ba80c73591bb5, s.List)
	return str
}

// GetKeysChangesRequestCapn_Promise is a wrapper for a GetKeysChangesRequestCapn promised by a client call.
type GetKeysChangesRequestCapn_Promise struct{ *capnp.Pipeline }

func (p GetKeysChangesRequestCapn_Promise) Struct() (GetKeysChangesRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetKeysChangesRequestCapn{s}, err
}

type GetKeysChangesResponseCapn struct{ capnp.Struct }

// GetKeysChangesResponseCapn_TypeID is the unique identifier for the type GetKeysChangesResponseCapn.
const GetKeysChangesResponseCapn_TypeID = 0xc3ff4ffb72f00f5a

func NewGetKeysChangesResponseCapn(s *capnp.Segment) (GetKeysChangesResponseCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return GetKeysChangesResponseCapn{st}, err
}

func NewRootGetKeysChangesResponseCapn(s *capnp.Segment) (GetKeysChangesResponseCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return GetKeysChangesResponseCapn{st}, err
}

func ReadRootGetKeysChangesResponseCapn(msg *capnp.Message) (GetKeysChangesResponseCapn, error) {
	root, err := msg.RootPtr()
	return GetKeysChangesResponseCapn{root.Struct()}, err
}

func (s GetKeysChangesResponseCapn) String() string {
	str, _ := text.Marshal(0xc3ff4ffb72f00f5a, s.Struct)
	return str
}

func (s GetKeysChangesResponseCapn) Changed() (capnp.TextList, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.TextList{List: p.List()}, err
}

func (s GetKeysChangesResponseCapn) HasChanged() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetKeysChangesResponseCapn) SetChanged(v capnp.TextList) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewChanged sets the changed field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s GetKeysChangesResponseCapn) NewChanged(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

func (s GetKeysChangesResponseCapn) Left() (capnp.TextList, error) {
	p, err := s.Struct.Ptr(1)
	return capnp.TextList{List: p.List()}, err
}

func (s GetKeysChangesResponseCapn) HasLeft() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s GetKeysChangesResponseCapn) SetLeft(v capnp.TextList) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewLeft sets the left field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s GetKeysChangesResponseCapn) NewLeft(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

// GetKeysChangesResponseCapn_List is a list of GetKeysChangesResponseCapn.
type GetKeysChangesResponseCapn_List struct{ capnp.List }

// NewGetKeysChangesResponseCapn creates a new list of GetKeysChangesResponseCapn.
func NewGetKeysChangesResponseCapn_List(s *capnp.Segment, sz int32) (GetKeysChangesResponseCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return GetKeysChangesResponseCapn_List{l}, err
}

func (s GetKeysChangesResponseCapn_List) At(i int) GetKeysChangesResponseCapn {
	return GetKeysChangesResponseCapn{s.List.Struct(i)}
}

func (s GetKeysChangesResponseCapn_List) Set(i int, v GetKeysChangesResponseCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetKeysChangesResponseCapn_List) String() string {
	str, _ := text.MarshalList(0xc3ff4ffb72f00f5a, s.List)
	return str
}

// GetKeysChangesResponseCapn_Promise is a wrapper for a GetKeysChangesResponseCapn promised by a client call.
type GetKeysChangesResponseCapn_Promise struct{ *capnp.Pipeline }

func (p GetKeysChangesResponseCapn_Promise) Struct() (GetKeysChangesResponseCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetKeysChangesResponseCapn{s}, err
}

type GetMediaDownloadByFileNameRequestCapn struct{ capnp.Struct }

// GetMediaDownloadByFileNameRequestCapn_TypeID is the unique identifier for the type GetMediaDownloadByFileNameRequestCapn.
const GetMediaDownloadByFileNameRequestCapn_TypeID = 0xf436c006ff483bce

func NewGetMediaDownloadByFileNameRequestCapn(s *capnp.Segment) (GetMediaDownloadByFileNameRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return GetMediaDownloadByFileNameRequestCapn{st}, err
}

func NewRootGetMediaDownloadByFileNameRequestCapn(s *capnp.Segment) (GetMediaDownloadByFileNameRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return GetMediaDownloadByFileNameRequestCapn{st}, err
}

func ReadRootGetMediaDownloadByFileNameRequestCapn(msg *capnp.Message) (GetMediaDownloadByFileNameRequestCapn, error) {
	root, err := msg.RootPtr()
	return GetMediaDownloadByFileNameRequestCapn{root.Struct()}, err
}

func (s GetMediaDownloadByFileNameRequestCapn) String() string {
	str, _ := text.Marshal(0xf436c006ff483bce, s.Struct)
	return str
}

func (s GetMediaDownloadByFileNameRequestCapn) ServerName() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GetMediaDownloadByFileNameRequestCapn) HasServerName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetMediaDownloadByFileNameRequestCapn) ServerNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GetMediaDownloadByFileNameRequestCapn) SetServerName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s GetMediaDownloadByFileNameRequestCapn) MediaID() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s GetMediaDownloadByFileNameRequestCapn) HasMediaID() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s GetMediaDownloadByFileNameRequestCapn) MediaIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s GetMediaDownloadByFileNameRequestCapn) SetMediaID(v string) error {
	return s.Struct.SetText(1, v)
}

func (s GetMediaDownloadByFileNameRequestCapn) FileName() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s GetMediaDownloadByFileNameRequestCapn) HasFileName() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s GetMediaDownloadByFileNameRequestCapn) FileNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s GetMediaDownloadByFileNameRequestCapn) SetFileName(v string) error {
	return s.Struct.SetText(2, v)
}

func (s GetMediaDownloadByFileNameRequestCapn) AllowRemote() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s GetMediaDownloadByFileNameRequestCapn) HasAllowRemote() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s GetMediaDownloadByFileNameRequestCapn) AllowRemoteBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s GetMediaDownloadByFileNameRequestCapn) SetAllowRemote(v string) error {
	return s.Struct.SetText(3, v)
}

// GetMediaDownloadByFileNameRequestCapn_List is a list of GetMediaDownloadByFileNameRequestCapn.
type GetMediaDownloadByFileNameRequestCapn_List struct{ capnp.List }

// NewGetMediaDownloadByFileNameRequestCapn creates a new list of GetMediaDownloadByFileNameRequestCapn.
func NewGetMediaDownloadByFileNameRequestCapn_List(s *capnp.Segment, sz int32) (GetMediaDownloadByFileNameRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return GetMediaDownloadByFileNameRequestCapn_List{l}, err
}

func (s GetMediaDownloadByFileNameRequestCapn_List) At(i int) GetMediaDownloadByFileNameRequestCapn {
	return GetMediaDownloadByFileNameRequestCapn{s.List.Struct(i)}
}

func (s GetMediaDownloadByFileNameRequestCapn_List) Set(i int, v GetMediaDownloadByFileNameRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetMediaDownloadByFileNameRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xf436c006ff483bce, s.List)
	return str
}

// GetMediaDownloadByFileNameRequestCapn_Promise is a wrapper for a GetMediaDownloadByFileNameRequestCapn promised by a client call.
type GetMediaDownloadByFileNameRequestCapn_Promise struct{ *capnp.Pipeline }

func (p GetMediaDownloadByFileNameRequestCapn_Promise) Struct() (GetMediaDownloadByFileNameRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetMediaDownloadByFileNameRequestCapn{s}, err
}

type GetMediaDownloadRequestCapn struct{ capnp.Struct }

// GetMediaDownloadRequestCapn_TypeID is the unique identifier for the type GetMediaDownloadRequestCapn.
const GetMediaDownloadRequestCapn_TypeID = 0x9b419f9b5478dbf2

func NewGetMediaDownloadRequestCapn(s *capnp.Segment) (GetMediaDownloadRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return GetMediaDownloadRequestCapn{st}, err
}

func NewRootGetMediaDownloadRequestCapn(s *capnp.Segment) (GetMediaDownloadRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return GetMediaDownloadRequestCapn{st}, err
}

func ReadRootGetMediaDownloadRequestCapn(msg *capnp.Message) (GetMediaDownloadRequestCapn, error) {
	root, err := msg.RootPtr()
	return GetMediaDownloadRequestCapn{root.Struct()}, err
}

func (s GetMediaDownloadRequestCapn) String() string {
	str, _ := text.Marshal(0x9b419f9b5478dbf2, s.Struct)
	return str
}

func (s GetMediaDownloadRequestCapn) ServerName() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GetMediaDownloadRequestCapn) HasServerName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetMediaDownloadRequestCapn) ServerNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GetMediaDownloadRequestCapn) SetServerName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s GetMediaDownloadRequestCapn) MediaID() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s GetMediaDownloadRequestCapn) HasMediaID() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s GetMediaDownloadRequestCapn) MediaIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s GetMediaDownloadRequestCapn) SetMediaID(v string) error {
	return s.Struct.SetText(1, v)
}

func (s GetMediaDownloadRequestCapn) AllowRemote() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s GetMediaDownloadRequestCapn) HasAllowRemote() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s GetMediaDownloadRequestCapn) AllowRemoteBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s GetMediaDownloadRequestCapn) SetAllowRemote(v string) error {
	return s.Struct.SetText(2, v)
}

// GetMediaDownloadRequestCapn_List is a list of GetMediaDownloadRequestCapn.
type GetMediaDownloadRequestCapn_List struct{ capnp.List }

// NewGetMediaDownloadRequestCapn creates a new list of GetMediaDownloadRequestCapn.
func NewGetMediaDownloadRequestCapn_List(s *capnp.Segment, sz int32) (GetMediaDownloadRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return GetMediaDownloadRequestCapn_List{l}, err
}

func (s GetMediaDownloadRequestCapn_List) At(i int) GetMediaDownloadRequestCapn {
	return GetMediaDownloadRequestCapn{s.List.Struct(i)}
}

func (s GetMediaDownloadRequestCapn_List) Set(i int, v GetMediaDownloadRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetMediaDownloadRequestCapn_List) String() string {
	str, _ := text.MarshalList(0x9b419f9b5478dbf2, s.List)
	return str
}

// GetMediaDownloadRequestCapn_Promise is a wrapper for a GetMediaDownloadRequestCapn promised by a client call.
type GetMediaDownloadRequestCapn_Promise struct{ *capnp.Pipeline }

func (p GetMediaDownloadRequestCapn_Promise) Struct() (GetMediaDownloadRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetMediaDownloadRequestCapn{s}, err
}

type GetMediaPreviewURLRequestCapn struct{ capnp.Struct }

// GetMediaPreviewURLRequestCapn_TypeID is the unique identifier for the type GetMediaPreviewURLRequestCapn.
const GetMediaPreviewURLRequestCapn_TypeID = 0xd0a84875fef820a3

func NewGetMediaPreviewURLRequestCapn(s *capnp.Segment) (GetMediaPreviewURLRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return GetMediaPreviewURLRequestCapn{st}, err
}

func NewRootGetMediaPreviewURLRequestCapn(s *capnp.Segment) (GetMediaPreviewURLRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return GetMediaPreviewURLRequestCapn{st}, err
}

func ReadRootGetMediaPreviewURLRequestCapn(msg *capnp.Message) (GetMediaPreviewURLRequestCapn, error) {
	root, err := msg.RootPtr()
	return GetMediaPreviewURLRequestCapn{root.Struct()}, err
}

func (s GetMediaPreviewURLRequestCapn) String() string {
	str, _ := text.Marshal(0xd0a84875fef820a3, s.Struct)
	return str
}

func (s GetMediaPreviewURLRequestCapn) URL() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GetMediaPreviewURLRequestCapn) HasURL() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetMediaPreviewURLRequestCapn) URLBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GetMediaPreviewURLRequestCapn) SetURL(v string) error {
	return s.Struct.SetText(0, v)
}

func (s GetMediaPreviewURLRequestCapn) Ts() int64 {
	return int64(s.Struct.Uint64(0))
}

func (s GetMediaPreviewURLRequestCapn) SetTs(v int64) {
	s.Struct.SetUint64(0, uint64(v))
}

// GetMediaPreviewURLRequestCapn_List is a list of GetMediaPreviewURLRequestCapn.
type GetMediaPreviewURLRequestCapn_List struct{ capnp.List }

// NewGetMediaPreviewURLRequestCapn creates a new list of GetMediaPreviewURLRequestCapn.
func NewGetMediaPreviewURLRequestCapn_List(s *capnp.Segment, sz int32) (GetMediaPreviewURLRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return GetMediaPreviewURLRequestCapn_List{l}, err
}

func (s GetMediaPreviewURLRequestCapn_List) At(i int) GetMediaPreviewURLRequestCapn {
	return GetMediaPreviewURLRequestCapn{s.List.Struct(i)}
}

func (s GetMediaPreviewURLRequestCapn_List) Set(i int, v GetMediaPreviewURLRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetMediaPreviewURLRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xd0a84875fef820a3, s.List)
	return str
}

// GetMediaPreviewURLRequestCapn_Promise is a wrapper for a GetMediaPreviewURLRequestCapn promised by a client call.
type GetMediaPreviewURLRequestCapn_Promise struct{ *capnp.Pipeline }

func (p GetMediaPreviewURLRequestCapn_Promise) Struct() (GetMediaPreviewURLRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetMediaPreviewURLRequestCapn{s}, err
}

type GetMediaThumbnailRequestCapn struct{ capnp.Struct }

// GetMediaThumbnailRequestCapn_TypeID is the unique identifier for the type GetMediaThumbnailRequestCapn.
const GetMediaThumbnailRequestCapn_TypeID = 0x997bda7db590d5c6

func NewGetMediaThumbnailRequestCapn(s *capnp.Segment) (GetMediaThumbnailRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 3})
	return GetMediaThumbnailRequestCapn{st}, err
}

func NewRootGetMediaThumbnailRequestCapn(s *capnp.Segment) (GetMediaThumbnailRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 3})
	return GetMediaThumbnailRequestCapn{st}, err
}

func ReadRootGetMediaThumbnailRequestCapn(msg *capnp.Message) (GetMediaThumbnailRequestCapn, error) {
	root, err := msg.RootPtr()
	return GetMediaThumbnailRequestCapn{root.Struct()}, err
}

func (s GetMediaThumbnailRequestCapn) String() string {
	str, _ := text.Marshal(0x997bda7db590d5c6, s.Struct)
	return str
}

func (s GetMediaThumbnailRequestCapn) ServerName() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GetMediaThumbnailRequestCapn) HasServerName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetMediaThumbnailRequestCapn) ServerNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GetMediaThumbnailRequestCapn) SetServerName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s GetMediaThumbnailRequestCapn) MediaID() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s GetMediaThumbnailRequestCapn) HasMediaID() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s GetMediaThumbnailRequestCapn) MediaIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s GetMediaThumbnailRequestCapn) SetMediaID(v string) error {
	return s.Struct.SetText(1, v)
}

func (s GetMediaThumbnailRequestCapn) Width() int64 {
	return int64(s.Struct.Uint64(0))
}

func (s GetMediaThumbnailRequestCapn) SetWidth(v int64) {
	s.Struct.SetUint64(0, uint64(v))
}

func (s GetMediaThumbnailRequestCapn) Height() int64 {
	return int64(s.Struct.Uint64(8))
}

func (s GetMediaThumbnailRequestCapn) SetHeight(v int64) {
	s.Struct.SetUint64(8, uint64(v))
}

func (s GetMediaThumbnailRequestCapn) Method() int64 {
	return int64(s.Struct.Uint64(16))
}

func (s GetMediaThumbnailRequestCapn) SetMethod(v int64) {
	s.Struct.SetUint64(16, uint64(v))
}

func (s GetMediaThumbnailRequestCapn) AllowRemote() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s GetMediaThumbnailRequestCapn) HasAllowRemote() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s GetMediaThumbnailRequestCapn) AllowRemoteBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s GetMediaThumbnailRequestCapn) SetAllowRemote(v string) error {
	return s.Struct.SetText(2, v)
}

// GetMediaThumbnailRequestCapn_List is a list of GetMediaThumbnailRequestCapn.
type GetMediaThumbnailRequestCapn_List struct{ capnp.List }

// NewGetMediaThumbnailRequestCapn creates a new list of GetMediaThumbnailRequestCapn.
func NewGetMediaThumbnailRequestCapn_List(s *capnp.Segment, sz int32) (GetMediaThumbnailRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 24, PointerCount: 3}, sz)
	return GetMediaThumbnailRequestCapn_List{l}, err
}

func (s GetMediaThumbnailRequestCapn_List) At(i int) GetMediaThumbnailRequestCapn {
	return GetMediaThumbnailRequestCapn{s.List.Struct(i)}
}

func (s GetMediaThumbnailRequestCapn_List) Set(i int, v GetMediaThumbnailRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetMediaThumbnailRequestCapn_List) String() string {
	str, _ := text.MarshalList(0x997bda7db590d5c6, s.List)
	return str
}

// GetMediaThumbnailRequestCapn_Promise is a wrapper for a GetMediaThumbnailRequestCapn promised by a client call.
type GetMediaThumbnailRequestCapn_Promise struct{ *capnp.Pipeline }

func (p GetMediaThumbnailRequestCapn_Promise) Struct() (GetMediaThumbnailRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetMediaThumbnailRequestCapn{s}, err
}

type GetNotificationsRequestCapn struct{ capnp.Struct }

// GetNotificationsRequestCapn_TypeID is the unique identifier for the type GetNotificationsRequestCapn.
const GetNotificationsRequestCapn_TypeID = 0xf77c358ea390ed11

func NewGetNotificationsRequestCapn(s *capnp.Segment) (GetNotificationsRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return GetNotificationsRequestCapn{st}, err
}

func NewRootGetNotificationsRequestCapn(s *capnp.Segment) (GetNotificationsRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return GetNotificationsRequestCapn{st}, err
}

func ReadRootGetNotificationsRequestCapn(msg *capnp.Message) (GetNotificationsRequestCapn, error) {
	root, err := msg.RootPtr()
	return GetNotificationsRequestCapn{root.Struct()}, err
}

func (s GetNotificationsRequestCapn) String() string {
	str, _ := text.Marshal(0xf77c358ea390ed11, s.Struct)
	return str
}

func (s GetNotificationsRequestCapn) From() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GetNotificationsRequestCapn) HasFrom() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetNotificationsRequestCapn) FromBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GetNotificationsRequestCapn) SetFrom(v string) error {
	return s.Struct.SetText(0, v)
}

func (s GetNotificationsRequestCapn) Limit() int64 {
	return int64(s.Struct.Uint64(0))
}

func (s GetNotificationsRequestCapn) SetLimit(v int64) {
	s.Struct.SetUint64(0, uint64(v))
}

func (s GetNotificationsRequestCapn) Only() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s GetNotificationsRequestCapn) HasOnly() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s GetNotificationsRequestCapn) OnlyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s GetNotificationsRequestCapn) SetOnly(v string) error {
	return s.Struct.SetText(1, v)
}

// GetNotificationsRequestCapn_List is a list of GetNotificationsRequestCapn.
type GetNotificationsRequestCapn_List struct{ capnp.List }

// NewGetNotificationsRequestCapn creates a new list of GetNotificationsRequestCapn.
func NewGetNotificationsRequestCapn_List(s *capnp.Segment, sz int32) (GetNotificationsRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return GetNotificationsRequestCapn_List{l}, err
}

func (s GetNotificationsRequestCapn_List) At(i int) GetNotificationsRequestCapn {
	return GetNotificationsRequestCapn{s.List.Struct(i)}
}

func (s GetNotificationsRequestCapn_List) Set(i int, v GetNotificationsRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetNotificationsRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xf77c358ea390ed11, s.List)
	return str
}

// GetNotificationsRequestCapn_Promise is a wrapper for a GetNotificationsRequestCapn promised by a client call.
type GetNotificationsRequestCapn_Promise struct{ *capnp.Pipeline }

func (p GetNotificationsRequestCapn_Promise) Struct() (GetNotificationsRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetNotificationsRequestCapn{s}, err
}

type GetPushersResponseCapn struct{ capnp.Struct }

// GetPushersResponseCapn_TypeID is the unique identifier for the type GetPushersResponseCapn.
const GetPushersResponseCapn_TypeID = 0xd9f727ecee5ee43c

func NewGetPushersResponseCapn(s *capnp.Segment) (GetPushersResponseCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetPushersResponseCapn{st}, err
}

func NewRootGetPushersResponseCapn(s *capnp.Segment) (GetPushersResponseCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetPushersResponseCapn{st}, err
}

func ReadRootGetPushersResponseCapn(msg *capnp.Message) (GetPushersResponseCapn, error) {
	root, err := msg.RootPtr()
	return GetPushersResponseCapn{root.Struct()}, err
}

func (s GetPushersResponseCapn) String() string {
	str, _ := text.Marshal(0xd9f727ecee5ee43c, s.Struct)
	return str
}

func (s GetPushersResponseCapn) Pusher() (PusherCapn_List, error) {
	p, err := s.Struct.Ptr(0)
	return PusherCapn_List{List: p.List()}, err
}

func (s GetPushersResponseCapn) HasPusher() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetPushersResponseCapn) SetPusher(v PusherCapn_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewPusher sets the pusher field to a newly
// allocated PusherCapn_List, preferring placement in s's segment.
func (s GetPushersResponseCapn) NewPusher(n int32) (PusherCapn_List, error) {
	l, err := NewPusherCapn_List(s.Struct.Segment(), n)
	if err != nil {
		return PusherCapn_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// GetPushersResponseCapn_List is a list of GetPushersResponseCapn.
type GetPushersResponseCapn_List struct{ capnp.List }

// NewGetPushersResponseCapn creates a new list of GetPushersResponseCapn.
func NewGetPushersResponseCapn_List(s *capnp.Segment, sz int32) (GetPushersResponseCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return GetPushersResponseCapn_List{l}, err
}

func (s GetPushersResponseCapn_List) At(i int) GetPushersResponseCapn {
	return GetPushersResponseCapn{s.List.Struct(i)}
}

func (s GetPushersResponseCapn_List) Set(i int, v GetPushersResponseCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetPushersResponseCapn_List) String() string {
	str, _ := text.MarshalList(0xd9f727ecee5ee43c, s.List)
	return str
}

// GetPushersResponseCapn_Promise is a wrapper for a GetPushersResponseCapn promised by a client call.
type GetPushersResponseCapn_Promise struct{ *capnp.Pipeline }

func (p GetPushersResponseCapn_Promise) Struct() (GetPushersResponseCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetPushersResponseCapn{s}, err
}

type GetPushrulesActionsByIDRequestCapn struct{ capnp.Struct }

// GetPushrulesActionsByIDRequestCapn_TypeID is the unique identifier for the type GetPushrulesActionsByIDRequestCapn.
const GetPushrulesActionsByIDRequestCapn_TypeID = 0xa995fd3d9ddd6004

func NewGetPushrulesActionsByIDRequestCapn(s *capnp.Segment) (GetPushrulesActionsByIDRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return GetPushrulesActionsByIDRequestCapn{st}, err
}

func NewRootGetPushrulesActionsByIDRequestCapn(s *capnp.Segment) (GetPushrulesActionsByIDRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return GetPushrulesActionsByIDRequestCapn{st}, err
}

func ReadRootGetPushrulesActionsByIDRequestCapn(msg *capnp.Message) (GetPushrulesActionsByIDRequestCapn, error) {
	root, err := msg.RootPtr()
	return GetPushrulesActionsByIDRequestCapn{root.Struct()}, err
}

func (s GetPushrulesActionsByIDRequestCapn) String() string {
	str, _ := text.Marshal(0xa995fd3d9ddd6004, s.Struct)
	return str
}

func (s GetPushrulesActionsByIDRequestCapn) Scope() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GetPushrulesActionsByIDRequestCapn) HasScope() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetPushrulesActionsByIDRequestCapn) ScopeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GetPushrulesActionsByIDRequestCapn) SetScope(v string) error {
	return s.Struct.SetText(0, v)
}

func (s GetPushrulesActionsByIDRequestCapn) Kind() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s GetPushrulesActionsByIDRequestCapn) HasKind() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s GetPushrulesActionsByIDRequestCapn) KindBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s GetPushrulesActionsByIDRequestCapn) SetKind(v string) error {
	return s.Struct.SetText(1, v)
}

func (s GetPushrulesActionsByIDRequestCapn) RuleID() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s GetPushrulesActionsByIDRequestCapn) HasRuleID() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s GetPushrulesActionsByIDRequestCapn) RuleIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s GetPushrulesActionsByIDRequestCapn) SetRuleID(v string) error {
	return s.Struct.SetText(2, v)
}

// GetPushrulesActionsByIDRequestCapn_List is a list of GetPushrulesActionsByIDRequestCapn.
type GetPushrulesActionsByIDRequestCapn_List struct{ capnp.List }

// NewGetPushrulesActionsByIDRequestCapn creates a new list of GetPushrulesActionsByIDRequestCapn.
func NewGetPushrulesActionsByIDRequestCapn_List(s *capnp.Segment, sz int32) (GetPushrulesActionsByIDRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return GetPushrulesActionsByIDRequestCapn_List{l}, err
}

func (s GetPushrulesActionsByIDRequestCapn_List) At(i int) GetPushrulesActionsByIDRequestCapn {
	return GetPushrulesActionsByIDRequestCapn{s.List.Struct(i)}
}

func (s GetPushrulesActionsByIDRequestCapn_List) Set(i int, v GetPushrulesActionsByIDRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetPushrulesActionsByIDRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xa995fd3d9ddd6004, s.List)
	return str
}

// GetPushrulesActionsByIDRequestCapn_Promise is a wrapper for a GetPushrulesActionsByIDRequestCapn promised by a client call.
type GetPushrulesActionsByIDRequestCapn_Promise struct{ *capnp.Pipeline }

func (p GetPushrulesActionsByIDRequestCapn_Promise) Struct() (GetPushrulesActionsByIDRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetPushrulesActionsByIDRequestCapn{s}, err
}

type GetPushrulesActionsByIDResponseCapn struct{ capnp.Struct }

// GetPushrulesActionsByIDResponseCapn_TypeID is the unique identifier for the type GetPushrulesActionsByIDResponseCapn.
const GetPushrulesActionsByIDResponseCapn_TypeID = 0x908f5faf45cee64a

func NewGetPushrulesActionsByIDResponseCapn(s *capnp.Segment) (GetPushrulesActionsByIDResponseCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetPushrulesActionsByIDResponseCapn{st}, err
}

func NewRootGetPushrulesActionsByIDResponseCapn(s *capnp.Segment) (GetPushrulesActionsByIDResponseCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetPushrulesActionsByIDResponseCapn{st}, err
}

func ReadRootGetPushrulesActionsByIDResponseCapn(msg *capnp.Message) (GetPushrulesActionsByIDResponseCapn, error) {
	root, err := msg.RootPtr()
	return GetPushrulesActionsByIDResponseCapn{root.Struct()}, err
}

func (s GetPushrulesActionsByIDResponseCapn) String() string {
	str, _ := text.Marshal(0x908f5faf45cee64a, s.Struct)
	return str
}

func (s GetPushrulesActionsByIDResponseCapn) Actions() (capnp.TextList, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.TextList{List: p.List()}, err
}

func (s GetPushrulesActionsByIDResponseCapn) HasActions() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetPushrulesActionsByIDResponseCapn) SetActions(v capnp.TextList) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewActions sets the actions field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s GetPushrulesActionsByIDResponseCapn) NewActions(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// GetPushrulesActionsByIDResponseCapn_List is a list of GetPushrulesActionsByIDResponseCapn.
type GetPushrulesActionsByIDResponseCapn_List struct{ capnp.List }

// NewGetPushrulesActionsByIDResponseCapn creates a new list of GetPushrulesActionsByIDResponseCapn.
func NewGetPushrulesActionsByIDResponseCapn_List(s *capnp.Segment, sz int32) (GetPushrulesActionsByIDResponseCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return GetPushrulesActionsByIDResponseCapn_List{l}, err
}

func (s GetPushrulesActionsByIDResponseCapn_List) At(i int) GetPushrulesActionsByIDResponseCapn {
	return GetPushrulesActionsByIDResponseCapn{s.List.Struct(i)}
}

func (s GetPushrulesActionsByIDResponseCapn_List) Set(i int, v GetPushrulesActionsByIDResponseCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetPushrulesActionsByIDResponseCapn_List) String() string {
	str, _ := text.MarshalList(0x908f5faf45cee64a, s.List)
	return str
}

// GetPushrulesActionsByIDResponseCapn_Promise is a wrapper for a GetPushrulesActionsByIDResponseCapn promised by a client call.
type GetPushrulesActionsByIDResponseCapn_Promise struct{ *capnp.Pipeline }

func (p GetPushrulesActionsByIDResponseCapn_Promise) Struct() (GetPushrulesActionsByIDResponseCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetPushrulesActionsByIDResponseCapn{s}, err
}

type GetPushrulesByIDRequestCapn struct{ capnp.Struct }

// GetPushrulesByIDRequestCapn_TypeID is the unique identifier for the type GetPushrulesByIDRequestCapn.
const GetPushrulesByIDRequestCapn_TypeID = 0xf265eb9956096e1a

func NewGetPushrulesByIDRequestCapn(s *capnp.Segment) (GetPushrulesByIDRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return GetPushrulesByIDRequestCapn{st}, err
}

func NewRootGetPushrulesByIDRequestCapn(s *capnp.Segment) (GetPushrulesByIDRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return GetPushrulesByIDRequestCapn{st}, err
}

func ReadRootGetPushrulesByIDRequestCapn(msg *capnp.Message) (GetPushrulesByIDRequestCapn, error) {
	root, err := msg.RootPtr()
	return GetPushrulesByIDRequestCapn{root.Struct()}, err
}

func (s GetPushrulesByIDRequestCapn) String() string {
	str, _ := text.Marshal(0xf265eb9956096e1a, s.Struct)
	return str
}

func (s GetPushrulesByIDRequestCapn) Scope() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GetPushrulesByIDRequestCapn) HasScope() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetPushrulesByIDRequestCapn) ScopeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GetPushrulesByIDRequestCapn) SetScope(v string) error {
	return s.Struct.SetText(0, v)
}

func (s GetPushrulesByIDRequestCapn) Kind() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s GetPushrulesByIDRequestCapn) HasKind() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s GetPushrulesByIDRequestCapn) KindBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s GetPushrulesByIDRequestCapn) SetKind(v string) error {
	return s.Struct.SetText(1, v)
}

func (s GetPushrulesByIDRequestCapn) RuleID() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s GetPushrulesByIDRequestCapn) HasRuleID() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s GetPushrulesByIDRequestCapn) RuleIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s GetPushrulesByIDRequestCapn) SetRuleID(v string) error {
	return s.Struct.SetText(2, v)
}

// GetPushrulesByIDRequestCapn_List is a list of GetPushrulesByIDRequestCapn.
type GetPushrulesByIDRequestCapn_List struct{ capnp.List }

// NewGetPushrulesByIDRequestCapn creates a new list of GetPushrulesByIDRequestCapn.
func NewGetPushrulesByIDRequestCapn_List(s *capnp.Segment, sz int32) (GetPushrulesByIDRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return GetPushrulesByIDRequestCapn_List{l}, err
}

func (s GetPushrulesByIDRequestCapn_List) At(i int) GetPushrulesByIDRequestCapn {
	return GetPushrulesByIDRequestCapn{s.List.Struct(i)}
}

func (s GetPushrulesByIDRequestCapn_List) Set(i int, v GetPushrulesByIDRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetPushrulesByIDRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xf265eb9956096e1a, s.List)
	return str
}

// GetPushrulesByIDRequestCapn_Promise is a wrapper for a GetPushrulesByIDRequestCapn promised by a client call.
type GetPushrulesByIDRequestCapn_Promise struct{ *capnp.Pipeline }

func (p GetPushrulesByIDRequestCapn_Promise) Struct() (GetPushrulesByIDRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetPushrulesByIDRequestCapn{s}, err
}

type GetPushrulesEnabledByIDRequestCapn struct{ capnp.Struct }

// GetPushrulesEnabledByIDRequestCapn_TypeID is the unique identifier for the type GetPushrulesEnabledByIDRequestCapn.
const GetPushrulesEnabledByIDRequestCapn_TypeID = 0xe0ded00e8fbdb14e

func NewGetPushrulesEnabledByIDRequestCapn(s *capnp.Segment) (GetPushrulesEnabledByIDRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return GetPushrulesEnabledByIDRequestCapn{st}, err
}

func NewRootGetPushrulesEnabledByIDRequestCapn(s *capnp.Segment) (GetPushrulesEnabledByIDRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return GetPushrulesEnabledByIDRequestCapn{st}, err
}

func ReadRootGetPushrulesEnabledByIDRequestCapn(msg *capnp.Message) (GetPushrulesEnabledByIDRequestCapn, error) {
	root, err := msg.RootPtr()
	return GetPushrulesEnabledByIDRequestCapn{root.Struct()}, err
}

func (s GetPushrulesEnabledByIDRequestCapn) String() string {
	str, _ := text.Marshal(0xe0ded00e8fbdb14e, s.Struct)
	return str
}

func (s GetPushrulesEnabledByIDRequestCapn) Scope() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GetPushrulesEnabledByIDRequestCapn) HasScope() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetPushrulesEnabledByIDRequestCapn) ScopeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GetPushrulesEnabledByIDRequestCapn) SetScope(v string) error {
	return s.Struct.SetText(0, v)
}

func (s GetPushrulesEnabledByIDRequestCapn) Kind() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s GetPushrulesEnabledByIDRequestCapn) HasKind() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s GetPushrulesEnabledByIDRequestCapn) KindBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s GetPushrulesEnabledByIDRequestCapn) SetKind(v string) error {
	return s.Struct.SetText(1, v)
}

func (s GetPushrulesEnabledByIDRequestCapn) RuleID() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s GetPushrulesEnabledByIDRequestCapn) HasRuleID() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s GetPushrulesEnabledByIDRequestCapn) RuleIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s GetPushrulesEnabledByIDRequestCapn) SetRuleID(v string) error {
	return s.Struct.SetText(2, v)
}

// GetPushrulesEnabledByIDRequestCapn_List is a list of GetPushrulesEnabledByIDRequestCapn.
type GetPushrulesEnabledByIDRequestCapn_List struct{ capnp.List }

// NewGetPushrulesEnabledByIDRequestCapn creates a new list of GetPushrulesEnabledByIDRequestCapn.
func NewGetPushrulesEnabledByIDRequestCapn_List(s *capnp.Segment, sz int32) (GetPushrulesEnabledByIDRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return GetPushrulesEnabledByIDRequestCapn_List{l}, err
}

func (s GetPushrulesEnabledByIDRequestCapn_List) At(i int) GetPushrulesEnabledByIDRequestCapn {
	return GetPushrulesEnabledByIDRequestCapn{s.List.Struct(i)}
}

func (s GetPushrulesEnabledByIDRequestCapn_List) Set(i int, v GetPushrulesEnabledByIDRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetPushrulesEnabledByIDRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xe0ded00e8fbdb14e, s.List)
	return str
}

// GetPushrulesEnabledByIDRequestCapn_Promise is a wrapper for a GetPushrulesEnabledByIDRequestCapn promised by a client call.
type GetPushrulesEnabledByIDRequestCapn_Promise struct{ *capnp.Pipeline }

func (p GetPushrulesEnabledByIDRequestCapn_Promise) Struct() (GetPushrulesEnabledByIDRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetPushrulesEnabledByIDRequestCapn{s}, err
}

type GetPushrulesEnabledByIDResponseCapn struct{ capnp.Struct }

// GetPushrulesEnabledByIDResponseCapn_TypeID is the unique identifier for the type GetPushrulesEnabledByIDResponseCapn.
const GetPushrulesEnabledByIDResponseCapn_TypeID = 0xf4649c850b964682

func NewGetPushrulesEnabledByIDResponseCapn(s *capnp.Segment) (GetPushrulesEnabledByIDResponseCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return GetPushrulesEnabledByIDResponseCapn{st}, err
}

func NewRootGetPushrulesEnabledByIDResponseCapn(s *capnp.Segment) (GetPushrulesEnabledByIDResponseCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return GetPushrulesEnabledByIDResponseCapn{st}, err
}

func ReadRootGetPushrulesEnabledByIDResponseCapn(msg *capnp.Message) (GetPushrulesEnabledByIDResponseCapn, error) {
	root, err := msg.RootPtr()
	return GetPushrulesEnabledByIDResponseCapn{root.Struct()}, err
}

func (s GetPushrulesEnabledByIDResponseCapn) String() string {
	str, _ := text.Marshal(0xf4649c850b964682, s.Struct)
	return str
}

func (s GetPushrulesEnabledByIDResponseCapn) Enabled() bool {
	return s.Struct.Bit(0)
}

func (s GetPushrulesEnabledByIDResponseCapn) SetEnabled(v bool) {
	s.Struct.SetBit(0, v)
}

// GetPushrulesEnabledByIDResponseCapn_List is a list of GetPushrulesEnabledByIDResponseCapn.
type GetPushrulesEnabledByIDResponseCapn_List struct{ capnp.List }

// NewGetPushrulesEnabledByIDResponseCapn creates a new list of GetPushrulesEnabledByIDResponseCapn.
func NewGetPushrulesEnabledByIDResponseCapn_List(s *capnp.Segment, sz int32) (GetPushrulesEnabledByIDResponseCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return GetPushrulesEnabledByIDResponseCapn_List{l}, err
}

func (s GetPushrulesEnabledByIDResponseCapn_List) At(i int) GetPushrulesEnabledByIDResponseCapn {
	return GetPushrulesEnabledByIDResponseCapn{s.List.Struct(i)}
}

func (s GetPushrulesEnabledByIDResponseCapn_List) Set(i int, v GetPushrulesEnabledByIDResponseCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetPushrulesEnabledByIDResponseCapn_List) String() string {
	str, _ := text.MarshalList(0xf4649c850b964682, s.List)
	return str
}

// GetPushrulesEnabledByIDResponseCapn_Promise is a wrapper for a GetPushrulesEnabledByIDResponseCapn promised by a client call.
type GetPushrulesEnabledByIDResponseCapn_Promise struct{ *capnp.Pipeline }

func (p GetPushrulesEnabledByIDResponseCapn_Promise) Struct() (GetPushrulesEnabledByIDResponseCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetPushrulesEnabledByIDResponseCapn{s}, err
}

type GetRoomEventContextRequestCapn struct{ capnp.Struct }

// GetRoomEventContextRequestCapn_TypeID is the unique identifier for the type GetRoomEventContextRequestCapn.
const GetRoomEventContextRequestCapn_TypeID = 0x88862da4a1ad5ec6

func NewGetRoomEventContextRequestCapn(s *capnp.Segment) (GetRoomEventContextRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return GetRoomEventContextRequestCapn{st}, err
}

func NewRootGetRoomEventContextRequestCapn(s *capnp.Segment) (GetRoomEventContextRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return GetRoomEventContextRequestCapn{st}, err
}

func ReadRootGetRoomEventContextRequestCapn(msg *capnp.Message) (GetRoomEventContextRequestCapn, error) {
	root, err := msg.RootPtr()
	return GetRoomEventContextRequestCapn{root.Struct()}, err
}

func (s GetRoomEventContextRequestCapn) String() string {
	str, _ := text.Marshal(0x88862da4a1ad5ec6, s.Struct)
	return str
}

func (s GetRoomEventContextRequestCapn) RoomID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GetRoomEventContextRequestCapn) HasRoomID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetRoomEventContextRequestCapn) RoomIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GetRoomEventContextRequestCapn) SetRoomID(v string) error {
	return s.Struct.SetText(0, v)
}

func (s GetRoomEventContextRequestCapn) EventID() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s GetRoomEventContextRequestCapn) HasEventID() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s GetRoomEventContextRequestCapn) EventIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s GetRoomEventContextRequestCapn) SetEventID(v string) error {
	return s.Struct.SetText(1, v)
}

func (s GetRoomEventContextRequestCapn) Limit() int64 {
	return int64(s.Struct.Uint64(0))
}

func (s GetRoomEventContextRequestCapn) SetLimit(v int64) {
	s.Struct.SetUint64(0, uint64(v))
}

// GetRoomEventContextRequestCapn_List is a list of GetRoomEventContextRequestCapn.
type GetRoomEventContextRequestCapn_List struct{ capnp.List }

// NewGetRoomEventContextRequestCapn creates a new list of GetRoomEventContextRequestCapn.
func NewGetRoomEventContextRequestCapn_List(s *capnp.Segment, sz int32) (GetRoomEventContextRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return GetRoomEventContextRequestCapn_List{l}, err
}

func (s GetRoomEventContextRequestCapn_List) At(i int) GetRoomEventContextRequestCapn {
	return GetRoomEventContextRequestCapn{s.List.Struct(i)}
}

func (s GetRoomEventContextRequestCapn_List) Set(i int, v GetRoomEventContextRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetRoomEventContextRequestCapn_List) String() string {
	str, _ := text.MarshalList(0x88862da4a1ad5ec6, s.List)
	return str
}

// GetRoomEventContextRequestCapn_Promise is a wrapper for a GetRoomEventContextRequestCapn promised by a client call.
type GetRoomEventContextRequestCapn_Promise struct{ *capnp.Pipeline }

func (p GetRoomEventContextRequestCapn_Promise) Struct() (GetRoomEventContextRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetRoomEventContextRequestCapn{s}, err
}

type GetRoomsTagsByIDRequestCapn struct{ capnp.Struct }

// GetRoomsTagsByIDRequestCapn_TypeID is the unique identifier for the type GetRoomsTagsByIDRequestCapn.
const GetRoomsTagsByIDRequestCapn_TypeID = 0xa5f80cf922cc6108

func NewGetRoomsTagsByIDRequestCapn(s *capnp.Segment) (GetRoomsTagsByIDRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return GetRoomsTagsByIDRequestCapn{st}, err
}

func NewRootGetRoomsTagsByIDRequestCapn(s *capnp.Segment) (GetRoomsTagsByIDRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return GetRoomsTagsByIDRequestCapn{st}, err
}

func ReadRootGetRoomsTagsByIDRequestCapn(msg *capnp.Message) (GetRoomsTagsByIDRequestCapn, error) {
	root, err := msg.RootPtr()
	return GetRoomsTagsByIDRequestCapn{root.Struct()}, err
}

func (s GetRoomsTagsByIDRequestCapn) String() string {
	str, _ := text.Marshal(0xa5f80cf922cc6108, s.Struct)
	return str
}

func (s GetRoomsTagsByIDRequestCapn) UserId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GetRoomsTagsByIDRequestCapn) HasUserId() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetRoomsTagsByIDRequestCapn) UserIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GetRoomsTagsByIDRequestCapn) SetUserId(v string) error {
	return s.Struct.SetText(0, v)
}

func (s GetRoomsTagsByIDRequestCapn) RoomId() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s GetRoomsTagsByIDRequestCapn) HasRoomId() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s GetRoomsTagsByIDRequestCapn) RoomIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s GetRoomsTagsByIDRequestCapn) SetRoomId(v string) error {
	return s.Struct.SetText(1, v)
}

// GetRoomsTagsByIDRequestCapn_List is a list of GetRoomsTagsByIDRequestCapn.
type GetRoomsTagsByIDRequestCapn_List struct{ capnp.List }

// NewGetRoomsTagsByIDRequestCapn creates a new list of GetRoomsTagsByIDRequestCapn.
func NewGetRoomsTagsByIDRequestCapn_List(s *capnp.Segment, sz int32) (GetRoomsTagsByIDRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return GetRoomsTagsByIDRequestCapn_List{l}, err
}

func (s GetRoomsTagsByIDRequestCapn_List) At(i int) GetRoomsTagsByIDRequestCapn {
	return GetRoomsTagsByIDRequestCapn{s.List.Struct(i)}
}

func (s GetRoomsTagsByIDRequestCapn_List) Set(i int, v GetRoomsTagsByIDRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetRoomsTagsByIDRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xa5f80cf922cc6108, s.List)
	return str
}

// GetRoomsTagsByIDRequestCapn_Promise is a wrapper for a GetRoomsTagsByIDRequestCapn promised by a client call.
type GetRoomsTagsByIDRequestCapn_Promise struct{ *capnp.Pipeline }

func (p GetRoomsTagsByIDRequestCapn_Promise) Struct() (GetRoomsTagsByIDRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetRoomsTagsByIDRequestCapn{s}, err
}

type GetTurnServerResponseCapn struct{ capnp.Struct }

// GetTurnServerResponseCapn_TypeID is the unique identifier for the type GetTurnServerResponseCapn.
const GetTurnServerResponseCapn_TypeID = 0x9937e45d6fe307c9

func NewGetTurnServerResponseCapn(s *capnp.Segment) (GetTurnServerResponseCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return GetTurnServerResponseCapn{st}, err
}

func NewRootGetTurnServerResponseCapn(s *capnp.Segment) (GetTurnServerResponseCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return GetTurnServerResponseCapn{st}, err
}

func ReadRootGetTurnServerResponseCapn(msg *capnp.Message) (GetTurnServerResponseCapn, error) {
	root, err := msg.RootPtr()
	return GetTurnServerResponseCapn{root.Struct()}, err
}

func (s GetTurnServerResponseCapn) String() string {
	str, _ := text.Marshal(0x9937e45d6fe307c9, s.Struct)
	return str
}

func (s GetTurnServerResponseCapn) UserName() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GetTurnServerResponseCapn) HasUserName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetTurnServerResponseCapn) UserNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GetTurnServerResponseCapn) SetUserName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s GetTurnServerResponseCapn) Password() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s GetTurnServerResponseCapn) HasPassword() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s GetTurnServerResponseCapn) PasswordBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s GetTurnServerResponseCapn) SetPassword(v string) error {
	return s.Struct.SetText(1, v)
}

func (s GetTurnServerResponseCapn) Uris() (capnp.TextList, error) {
	p, err := s.Struct.Ptr(2)
	return capnp.TextList{List: p.List()}, err
}

func (s GetTurnServerResponseCapn) HasUris() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s GetTurnServerResponseCapn) SetUris(v capnp.TextList) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewUris sets the uris field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s GetTurnServerResponseCapn) NewUris(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

func (s GetTurnServerResponseCapn) TTL() int64 {
	return int64(s.Struct.Uint64(0))
}

func (s GetTurnServerResponseCapn) SetTTL(v int64) {
	s.Struct.SetUint64(0, uint64(v))
}

// GetTurnServerResponseCapn_List is a list of GetTurnServerResponseCapn.
type GetTurnServerResponseCapn_List struct{ capnp.List }

// NewGetTurnServerResponseCapn creates a new list of GetTurnServerResponseCapn.
func NewGetTurnServerResponseCapn_List(s *capnp.Segment, sz int32) (GetTurnServerResponseCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3}, sz)
	return GetTurnServerResponseCapn_List{l}, err
}

func (s GetTurnServerResponseCapn_List) At(i int) GetTurnServerResponseCapn {
	return GetTurnServerResponseCapn{s.List.Struct(i)}
}

func (s GetTurnServerResponseCapn_List) Set(i int, v GetTurnServerResponseCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetTurnServerResponseCapn_List) String() string {
	str, _ := text.MarshalList(0x9937e45d6fe307c9, s.List)
	return str
}

// GetTurnServerResponseCapn_Promise is a wrapper for a GetTurnServerResponseCapn promised by a client call.
type GetTurnServerResponseCapn_Promise struct{ *capnp.Pipeline }

func (p GetTurnServerResponseCapn_Promise) Struct() (GetTurnServerResponseCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetTurnServerResponseCapn{s}, err
}

type GetUserPresenceListRequestCapn struct{ capnp.Struct }

// GetUserPresenceListRequestCapn_TypeID is the unique identifier for the type GetUserPresenceListRequestCapn.
const GetUserPresenceListRequestCapn_TypeID = 0xc6bdc797e7c265c2

func NewGetUserPresenceListRequestCapn(s *capnp.Segment) (GetUserPresenceListRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetUserPresenceListRequestCapn{st}, err
}

func NewRootGetUserPresenceListRequestCapn(s *capnp.Segment) (GetUserPresenceListRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetUserPresenceListRequestCapn{st}, err
}

func ReadRootGetUserPresenceListRequestCapn(msg *capnp.Message) (GetUserPresenceListRequestCapn, error) {
	root, err := msg.RootPtr()
	return GetUserPresenceListRequestCapn{root.Struct()}, err
}

func (s GetUserPresenceListRequestCapn) String() string {
	str, _ := text.Marshal(0xc6bdc797e7c265c2, s.Struct)
	return str
}

func (s GetUserPresenceListRequestCapn) UserID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GetUserPresenceListRequestCapn) HasUserID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetUserPresenceListRequestCapn) UserIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GetUserPresenceListRequestCapn) SetUserID(v string) error {
	return s.Struct.SetText(0, v)
}

// GetUserPresenceListRequestCapn_List is a list of GetUserPresenceListRequestCapn.
type GetUserPresenceListRequestCapn_List struct{ capnp.List }

// NewGetUserPresenceListRequestCapn creates a new list of GetUserPresenceListRequestCapn.
func NewGetUserPresenceListRequestCapn_List(s *capnp.Segment, sz int32) (GetUserPresenceListRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return GetUserPresenceListRequestCapn_List{l}, err
}

func (s GetUserPresenceListRequestCapn_List) At(i int) GetUserPresenceListRequestCapn {
	return GetUserPresenceListRequestCapn{s.List.Struct(i)}
}

func (s GetUserPresenceListRequestCapn_List) Set(i int, v GetUserPresenceListRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetUserPresenceListRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xc6bdc797e7c265c2, s.List)
	return str
}

// GetUserPresenceListRequestCapn_Promise is a wrapper for a GetUserPresenceListRequestCapn promised by a client call.
type GetUserPresenceListRequestCapn_Promise struct{ *capnp.Pipeline }

func (p GetUserPresenceListRequestCapn_Promise) Struct() (GetUserPresenceListRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetUserPresenceListRequestCapn{s}, err
}

type GetUserPresenceRequestCapn struct{ capnp.Struct }

// GetUserPresenceRequestCapn_TypeID is the unique identifier for the type GetUserPresenceRequestCapn.
const GetUserPresenceRequestCapn_TypeID = 0xbecbbb45b11284db

func NewGetUserPresenceRequestCapn(s *capnp.Segment) (GetUserPresenceRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetUserPresenceRequestCapn{st}, err
}

func NewRootGetUserPresenceRequestCapn(s *capnp.Segment) (GetUserPresenceRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetUserPresenceRequestCapn{st}, err
}

func ReadRootGetUserPresenceRequestCapn(msg *capnp.Message) (GetUserPresenceRequestCapn, error) {
	root, err := msg.RootPtr()
	return GetUserPresenceRequestCapn{root.Struct()}, err
}

func (s GetUserPresenceRequestCapn) String() string {
	str, _ := text.Marshal(0xbecbbb45b11284db, s.Struct)
	return str
}

func (s GetUserPresenceRequestCapn) UserID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GetUserPresenceRequestCapn) HasUserID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetUserPresenceRequestCapn) UserIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GetUserPresenceRequestCapn) SetUserID(v string) error {
	return s.Struct.SetText(0, v)
}

// GetUserPresenceRequestCapn_List is a list of GetUserPresenceRequestCapn.
type GetUserPresenceRequestCapn_List struct{ capnp.List }

// NewGetUserPresenceRequestCapn creates a new list of GetUserPresenceRequestCapn.
func NewGetUserPresenceRequestCapn_List(s *capnp.Segment, sz int32) (GetUserPresenceRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return GetUserPresenceRequestCapn_List{l}, err
}

func (s GetUserPresenceRequestCapn_List) At(i int) GetUserPresenceRequestCapn {
	return GetUserPresenceRequestCapn{s.List.Struct(i)}
}

func (s GetUserPresenceRequestCapn_List) Set(i int, v GetUserPresenceRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetUserPresenceRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xbecbbb45b11284db, s.List)
	return str
}

// GetUserPresenceRequestCapn_Promise is a wrapper for a GetUserPresenceRequestCapn promised by a client call.
type GetUserPresenceRequestCapn_Promise struct{ *capnp.Pipeline }

func (p GetUserPresenceRequestCapn_Promise) Struct() (GetUserPresenceRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetUserPresenceRequestCapn{s}, err
}

type GetUserPresenceResponseCapn struct{ capnp.Struct }

// GetUserPresenceResponseCapn_TypeID is the unique identifier for the type GetUserPresenceResponseCapn.
const GetUserPresenceResponseCapn_TypeID = 0xb582089c13a1a1be

func NewGetUserPresenceResponseCapn(s *capnp.Segment) (GetUserPresenceResponseCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2})
	return GetUserPresenceResponseCapn{st}, err
}

func NewRootGetUserPresenceResponseCapn(s *capnp.Segment) (GetUserPresenceResponseCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2})
	return GetUserPresenceResponseCapn{st}, err
}

func ReadRootGetUserPresenceResponseCapn(msg *capnp.Message) (GetUserPresenceResponseCapn, error) {
	root, err := msg.RootPtr()
	return GetUserPresenceResponseCapn{root.Struct()}, err
}

func (s GetUserPresenceResponseCapn) String() string {
	str, _ := text.Marshal(0xb582089c13a1a1be, s.Struct)
	return str
}

func (s GetUserPresenceResponseCapn) Presence() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GetUserPresenceResponseCapn) HasPresence() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetUserPresenceResponseCapn) PresenceBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GetUserPresenceResponseCapn) SetPresence(v string) error {
	return s.Struct.SetText(0, v)
}

func (s GetUserPresenceResponseCapn) LastActiveAgo() int64 {
	return int64(s.Struct.Uint64(0))
}

func (s GetUserPresenceResponseCapn) SetLastActiveAgo(v int64) {
	s.Struct.SetUint64(0, uint64(v))
}

func (s GetUserPresenceResponseCapn) Status() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s GetUserPresenceResponseCapn) HasStatus() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s GetUserPresenceResponseCapn) StatusBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s GetUserPresenceResponseCapn) SetStatus(v string) error {
	return s.Struct.SetText(1, v)
}

func (s GetUserPresenceResponseCapn) CurrentlyActive() bool {
	return s.Struct.Bit(64)
}

func (s GetUserPresenceResponseCapn) SetCurrentlyActive(v bool) {
	s.Struct.SetBit(64, v)
}

// GetUserPresenceResponseCapn_List is a list of GetUserPresenceResponseCapn.
type GetUserPresenceResponseCapn_List struct{ capnp.List }

// NewGetUserPresenceResponseCapn creates a new list of GetUserPresenceResponseCapn.
func NewGetUserPresenceResponseCapn_List(s *capnp.Segment, sz int32) (GetUserPresenceResponseCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2}, sz)
	return GetUserPresenceResponseCapn_List{l}, err
}

func (s GetUserPresenceResponseCapn_List) At(i int) GetUserPresenceResponseCapn {
	return GetUserPresenceResponseCapn{s.List.Struct(i)}
}

func (s GetUserPresenceResponseCapn_List) Set(i int, v GetUserPresenceResponseCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetUserPresenceResponseCapn_List) String() string {
	str, _ := text.MarshalList(0xb582089c13a1a1be, s.List)
	return str
}

// GetUserPresenceResponseCapn_Promise is a wrapper for a GetUserPresenceResponseCapn promised by a client call.
type GetUserPresenceResponseCapn_Promise struct{ *capnp.Pipeline }

func (p GetUserPresenceResponseCapn_Promise) Struct() (GetUserPresenceResponseCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetUserPresenceResponseCapn{s}, err
}

type PostDevicesDelRequestCapn struct{ capnp.Struct }

// PostDevicesDelRequestCapn_TypeID is the unique identifier for the type PostDevicesDelRequestCapn.
const PostDevicesDelRequestCapn_TypeID = 0xa239fcb8475d850e

func NewPostDevicesDelRequestCapn(s *capnp.Segment) (PostDevicesDelRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return PostDevicesDelRequestCapn{st}, err
}

func NewRootPostDevicesDelRequestCapn(s *capnp.Segment) (PostDevicesDelRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return PostDevicesDelRequestCapn{st}, err
}

func ReadRootPostDevicesDelRequestCapn(msg *capnp.Message) (PostDevicesDelRequestCapn, error) {
	root, err := msg.RootPtr()
	return PostDevicesDelRequestCapn{root.Struct()}, err
}

func (s PostDevicesDelRequestCapn) String() string {
	str, _ := text.Marshal(0xa239fcb8475d850e, s.Struct)
	return str
}

func (s PostDevicesDelRequestCapn) Devices() (capnp.TextList, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.TextList{List: p.List()}, err
}

func (s PostDevicesDelRequestCapn) HasDevices() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PostDevicesDelRequestCapn) SetDevices(v capnp.TextList) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewDevices sets the devices field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s PostDevicesDelRequestCapn) NewDevices(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

func (s PostDevicesDelRequestCapn) Auth() (AuthDataCapn, error) {
	p, err := s.Struct.Ptr(1)
	return AuthDataCapn{Struct: p.Struct()}, err
}

func (s PostDevicesDelRequestCapn) HasAuth() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s PostDevicesDelRequestCapn) SetAuth(v AuthDataCapn) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewAuth sets the auth field to a newly
// allocated AuthDataCapn struct, preferring placement in s's segment.
func (s PostDevicesDelRequestCapn) NewAuth() (AuthDataCapn, error) {
	ss, err := NewAuthDataCapn(s.Struct.Segment())
	if err != nil {
		return AuthDataCapn{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// PostDevicesDelRequestCapn_List is a list of PostDevicesDelRequestCapn.
type PostDevicesDelRequestCapn_List struct{ capnp.List }

// NewPostDevicesDelRequestCapn creates a new list of PostDevicesDelRequestCapn.
func NewPostDevicesDelRequestCapn_List(s *capnp.Segment, sz int32) (PostDevicesDelRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return PostDevicesDelRequestCapn_List{l}, err
}

func (s PostDevicesDelRequestCapn_List) At(i int) PostDevicesDelRequestCapn {
	return PostDevicesDelRequestCapn{s.List.Struct(i)}
}

func (s PostDevicesDelRequestCapn_List) Set(i int, v PostDevicesDelRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PostDevicesDelRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xa239fcb8475d850e, s.List)
	return str
}

// PostDevicesDelRequestCapn_Promise is a wrapper for a PostDevicesDelRequestCapn promised by a client call.
type PostDevicesDelRequestCapn_Promise struct{ *capnp.Pipeline }

func (p PostDevicesDelRequestCapn_Promise) Struct() (PostDevicesDelRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return PostDevicesDelRequestCapn{s}, err
}

func (p PostDevicesDelRequestCapn_Promise) Auth() AuthDataCapn_Promise {
	return AuthDataCapn_Promise{Pipeline: p.Pipeline.GetPipeline(1)}
}

type PostMediaUploadRequestCapn struct{ capnp.Struct }

// PostMediaUploadRequestCapn_TypeID is the unique identifier for the type PostMediaUploadRequestCapn.
const PostMediaUploadRequestCapn_TypeID = 0x90b1759d5878cb69

func NewPostMediaUploadRequestCapn(s *capnp.Segment) (PostMediaUploadRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return PostMediaUploadRequestCapn{st}, err
}

func NewRootPostMediaUploadRequestCapn(s *capnp.Segment) (PostMediaUploadRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return PostMediaUploadRequestCapn{st}, err
}

func ReadRootPostMediaUploadRequestCapn(msg *capnp.Message) (PostMediaUploadRequestCapn, error) {
	root, err := msg.RootPtr()
	return PostMediaUploadRequestCapn{root.Struct()}, err
}

func (s PostMediaUploadRequestCapn) String() string {
	str, _ := text.Marshal(0x90b1759d5878cb69, s.Struct)
	return str
}

func (s PostMediaUploadRequestCapn) FileName() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PostMediaUploadRequestCapn) HasFileName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PostMediaUploadRequestCapn) FileNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PostMediaUploadRequestCapn) SetFileName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s PostMediaUploadRequestCapn) ContentType() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s PostMediaUploadRequestCapn) HasContentType() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s PostMediaUploadRequestCapn) ContentTypeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s PostMediaUploadRequestCapn) SetContentType(v string) error {
	return s.Struct.SetText(1, v)
}

// PostMediaUploadRequestCapn_List is a list of PostMediaUploadRequestCapn.
type PostMediaUploadRequestCapn_List struct{ capnp.List }

// NewPostMediaUploadRequestCapn creates a new list of PostMediaUploadRequestCapn.
func NewPostMediaUploadRequestCapn_List(s *capnp.Segment, sz int32) (PostMediaUploadRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return PostMediaUploadRequestCapn_List{l}, err
}

func (s PostMediaUploadRequestCapn_List) At(i int) PostMediaUploadRequestCapn {
	return PostMediaUploadRequestCapn{s.List.Struct(i)}
}

func (s PostMediaUploadRequestCapn_List) Set(i int, v PostMediaUploadRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PostMediaUploadRequestCapn_List) String() string {
	str, _ := text.MarshalList(0x90b1759d5878cb69, s.List)
	return str
}

// PostMediaUploadRequestCapn_Promise is a wrapper for a PostMediaUploadRequestCapn promised by a client call.
type PostMediaUploadRequestCapn_Promise struct{ *capnp.Pipeline }

func (p PostMediaUploadRequestCapn_Promise) Struct() (PostMediaUploadRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return PostMediaUploadRequestCapn{s}, err
}

type PostMediaUploadResponseCapn struct{ capnp.Struct }

// PostMediaUploadResponseCapn_TypeID is the unique identifier for the type PostMediaUploadResponseCapn.
const PostMediaUploadResponseCapn_TypeID = 0xeee2b14b3603048e

func NewPostMediaUploadResponseCapn(s *capnp.Segment) (PostMediaUploadResponseCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PostMediaUploadResponseCapn{st}, err
}

func NewRootPostMediaUploadResponseCapn(s *capnp.Segment) (PostMediaUploadResponseCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PostMediaUploadResponseCapn{st}, err
}

func ReadRootPostMediaUploadResponseCapn(msg *capnp.Message) (PostMediaUploadResponseCapn, error) {
	root, err := msg.RootPtr()
	return PostMediaUploadResponseCapn{root.Struct()}, err
}

func (s PostMediaUploadResponseCapn) String() string {
	str, _ := text.Marshal(0xeee2b14b3603048e, s.Struct)
	return str
}

func (s PostMediaUploadResponseCapn) ContentURI() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PostMediaUploadResponseCapn) HasContentURI() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PostMediaUploadResponseCapn) ContentURIBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PostMediaUploadResponseCapn) SetContentURI(v string) error {
	return s.Struct.SetText(0, v)
}

// PostMediaUploadResponseCapn_List is a list of PostMediaUploadResponseCapn.
type PostMediaUploadResponseCapn_List struct{ capnp.List }

// NewPostMediaUploadResponseCapn creates a new list of PostMediaUploadResponseCapn.
func NewPostMediaUploadResponseCapn_List(s *capnp.Segment, sz int32) (PostMediaUploadResponseCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return PostMediaUploadResponseCapn_List{l}, err
}

func (s PostMediaUploadResponseCapn_List) At(i int) PostMediaUploadResponseCapn {
	return PostMediaUploadResponseCapn{s.List.Struct(i)}
}

func (s PostMediaUploadResponseCapn_List) Set(i int, v PostMediaUploadResponseCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PostMediaUploadResponseCapn_List) String() string {
	str, _ := text.MarshalList(0xeee2b14b3603048e, s.List)
	return str
}

// PostMediaUploadResponseCapn_Promise is a wrapper for a PostMediaUploadResponseCapn promised by a client call.
type PostMediaUploadResponseCapn_Promise struct{ *capnp.Pipeline }

func (p PostMediaUploadResponseCapn_Promise) Struct() (PostMediaUploadResponseCapn, error) {
	s, err := p.Pipeline.Struct()
	return PostMediaUploadResponseCapn{s}, err
}

type PostRoomReadMarkersRequestCapn struct{ capnp.Struct }

// PostRoomReadMarkersRequestCapn_TypeID is the unique identifier for the type PostRoomReadMarkersRequestCapn.
const PostRoomReadMarkersRequestCapn_TypeID = 0xea3bee07164ac635

func NewPostRoomReadMarkersRequestCapn(s *capnp.Segment) (PostRoomReadMarkersRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return PostRoomReadMarkersRequestCapn{st}, err
}

func NewRootPostRoomReadMarkersRequestCapn(s *capnp.Segment) (PostRoomReadMarkersRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return PostRoomReadMarkersRequestCapn{st}, err
}

func ReadRootPostRoomReadMarkersRequestCapn(msg *capnp.Message) (PostRoomReadMarkersRequestCapn, error) {
	root, err := msg.RootPtr()
	return PostRoomReadMarkersRequestCapn{root.Struct()}, err
}

func (s PostRoomReadMarkersRequestCapn) String() string {
	str, _ := text.Marshal(0xea3bee07164ac635, s.Struct)
	return str
}

func (s PostRoomReadMarkersRequestCapn) RoomID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PostRoomReadMarkersRequestCapn) HasRoomID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PostRoomReadMarkersRequestCapn) RoomIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PostRoomReadMarkersRequestCapn) SetRoomID(v string) error {
	return s.Struct.SetText(0, v)
}

func (s PostRoomReadMarkersRequestCapn) ReceiptType() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s PostRoomReadMarkersRequestCapn) HasReceiptType() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s PostRoomReadMarkersRequestCapn) ReceiptTypeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s PostRoomReadMarkersRequestCapn) SetReceiptType(v string) error {
	return s.Struct.SetText(1, v)
}

func (s PostRoomReadMarkersRequestCapn) FullyRead() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s PostRoomReadMarkersRequestCapn) HasFullyRead() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s PostRoomReadMarkersRequestCapn) FullyReadBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s PostRoomReadMarkersRequestCapn) SetFullyRead(v string) error {
	return s.Struct.SetText(2, v)
}

func (s PostRoomReadMarkersRequestCapn) Read() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s PostRoomReadMarkersRequestCapn) HasRead() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s PostRoomReadMarkersRequestCapn) ReadBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s PostRoomReadMarkersRequestCapn) SetRead(v string) error {
	return s.Struct.SetText(3, v)
}

// PostRoomReadMarkersRequestCapn_List is a list of PostRoomReadMarkersRequestCapn.
type PostRoomReadMarkersRequestCapn_List struct{ capnp.List }

// NewPostRoomReadMarkersRequestCapn creates a new list of PostRoomReadMarkersRequestCapn.
func NewPostRoomReadMarkersRequestCapn_List(s *capnp.Segment, sz int32) (PostRoomReadMarkersRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return PostRoomReadMarkersRequestCapn_List{l}, err
}

func (s PostRoomReadMarkersRequestCapn_List) At(i int) PostRoomReadMarkersRequestCapn {
	return PostRoomReadMarkersRequestCapn{s.List.Struct(i)}
}

func (s PostRoomReadMarkersRequestCapn_List) Set(i int, v PostRoomReadMarkersRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PostRoomReadMarkersRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xea3bee07164ac635, s.List)
	return str
}

// PostRoomReadMarkersRequestCapn_Promise is a wrapper for a PostRoomReadMarkersRequestCapn promised by a client call.
type PostRoomReadMarkersRequestCapn_Promise struct{ *capnp.Pipeline }

func (p PostRoomReadMarkersRequestCapn_Promise) Struct() (PostRoomReadMarkersRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return PostRoomReadMarkersRequestCapn{s}, err
}

type PostRoomReceiptRequestCapn struct{ capnp.Struct }

// PostRoomReceiptRequestCapn_TypeID is the unique identifier for the type PostRoomReceiptRequestCapn.
const PostRoomReceiptRequestCapn_TypeID = 0xcfd91ead8f7b5072

func NewPostRoomReceiptRequestCapn(s *capnp.Segment) (PostRoomReceiptRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return PostRoomReceiptRequestCapn{st}, err
}

func NewRootPostRoomReceiptRequestCapn(s *capnp.Segment) (PostRoomReceiptRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return PostRoomReceiptRequestCapn{st}, err
}

func ReadRootPostRoomReceiptRequestCapn(msg *capnp.Message) (PostRoomReceiptRequestCapn, error) {
	root, err := msg.RootPtr()
	return PostRoomReceiptRequestCapn{root.Struct()}, err
}

func (s PostRoomReceiptRequestCapn) String() string {
	str, _ := text.Marshal(0xcfd91ead8f7b5072, s.Struct)
	return str
}

func (s PostRoomReceiptRequestCapn) RoomID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PostRoomReceiptRequestCapn) HasRoomID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PostRoomReceiptRequestCapn) RoomIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PostRoomReceiptRequestCapn) SetRoomID(v string) error {
	return s.Struct.SetText(0, v)
}

func (s PostRoomReceiptRequestCapn) ReceiptType() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s PostRoomReceiptRequestCapn) HasReceiptType() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s PostRoomReceiptRequestCapn) ReceiptTypeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s PostRoomReceiptRequestCapn) SetReceiptType(v string) error {
	return s.Struct.SetText(1, v)
}

func (s PostRoomReceiptRequestCapn) EventID() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s PostRoomReceiptRequestCapn) HasEventID() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s PostRoomReceiptRequestCapn) EventIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s PostRoomReceiptRequestCapn) SetEventID(v string) error {
	return s.Struct.SetText(2, v)
}

// PostRoomReceiptRequestCapn_List is a list of PostRoomReceiptRequestCapn.
type PostRoomReceiptRequestCapn_List struct{ capnp.List }

// NewPostRoomReceiptRequestCapn creates a new list of PostRoomReceiptRequestCapn.
func NewPostRoomReceiptRequestCapn_List(s *capnp.Segment, sz int32) (PostRoomReceiptRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return PostRoomReceiptRequestCapn_List{l}, err
}

func (s PostRoomReceiptRequestCapn_List) At(i int) PostRoomReceiptRequestCapn {
	return PostRoomReceiptRequestCapn{s.List.Struct(i)}
}

func (s PostRoomReceiptRequestCapn_List) Set(i int, v PostRoomReceiptRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PostRoomReceiptRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xcfd91ead8f7b5072, s.List)
	return str
}

// PostRoomReceiptRequestCapn_Promise is a wrapper for a PostRoomReceiptRequestCapn promised by a client call.
type PostRoomReceiptRequestCapn_Promise struct{ *capnp.Pipeline }

func (p PostRoomReceiptRequestCapn_Promise) Struct() (PostRoomReceiptRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return PostRoomReceiptRequestCapn{s}, err
}

type PostSetPushersRequestCapn struct{ capnp.Struct }

// PostSetPushersRequestCapn_TypeID is the unique identifier for the type PostSetPushersRequestCapn.
const PostSetPushersRequestCapn_TypeID = 0xa14867b80f309cef

func NewPostSetPushersRequestCapn(s *capnp.Segment) (PostSetPushersRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 8})
	return PostSetPushersRequestCapn{st}, err
}

func NewRootPostSetPushersRequestCapn(s *capnp.Segment) (PostSetPushersRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 8})
	return PostSetPushersRequestCapn{st}, err
}

func ReadRootPostSetPushersRequestCapn(msg *capnp.Message) (PostSetPushersRequestCapn, error) {
	root, err := msg.RootPtr()
	return PostSetPushersRequestCapn{root.Struct()}, err
}

func (s PostSetPushersRequestCapn) String() string {
	str, _ := text.Marshal(0xa14867b80f309cef, s.Struct)
	return str
}

func (s PostSetPushersRequestCapn) Pushkey() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PostSetPushersRequestCapn) HasPushkey() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PostSetPushersRequestCapn) PushkeyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PostSetPushersRequestCapn) SetPushkey(v string) error {
	return s.Struct.SetText(0, v)
}

func (s PostSetPushersRequestCapn) Kind() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s PostSetPushersRequestCapn) HasKind() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s PostSetPushersRequestCapn) KindBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s PostSetPushersRequestCapn) SetKind(v string) error {
	return s.Struct.SetText(1, v)
}

func (s PostSetPushersRequestCapn) AppID() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s PostSetPushersRequestCapn) HasAppID() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s PostSetPushersRequestCapn) AppIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s PostSetPushersRequestCapn) SetAppID(v string) error {
	return s.Struct.SetText(2, v)
}

func (s PostSetPushersRequestCapn) AppDisplayName() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s PostSetPushersRequestCapn) HasAppDisplayName() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s PostSetPushersRequestCapn) AppDisplayNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s PostSetPushersRequestCapn) SetAppDisplayName(v string) error {
	return s.Struct.SetText(3, v)
}

func (s PostSetPushersRequestCapn) DeviceDisplayName() (string, error) {
	p, err := s.Struct.Ptr(4)
	return p.Text(), err
}

func (s PostSetPushersRequestCapn) HasDeviceDisplayName() bool {
	p, err := s.Struct.Ptr(4)
	return p.IsValid() || err != nil
}

func (s PostSetPushersRequestCapn) DeviceDisplayNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(4)
	return p.TextBytes(), err
}

func (s PostSetPushersRequestCapn) SetDeviceDisplayName(v string) error {
	return s.Struct.SetText(4, v)
}

func (s PostSetPushersRequestCapn) ProfileTag() (string, error) {
	p, err := s.Struct.Ptr(5)
	return p.Text(), err
}

func (s PostSetPushersRequestCapn) HasProfileTag() bool {
	p, err := s.Struct.Ptr(5)
	return p.IsValid() || err != nil
}

func (s PostSetPushersRequestCapn) ProfileTagBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(5)
	return p.TextBytes(), err
}

func (s PostSetPushersRequestCapn) SetProfileTag(v string) error {
	return s.Struct.SetText(5, v)
}

func (s PostSetPushersRequestCapn) Lang() (string, error) {
	p, err := s.Struct.Ptr(6)
	return p.Text(), err
}

func (s PostSetPushersRequestCapn) HasLang() bool {
	p, err := s.Struct.Ptr(6)
	return p.IsValid() || err != nil
}

func (s PostSetPushersRequestCapn) LangBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(6)
	return p.TextBytes(), err
}

func (s PostSetPushersRequestCapn) SetLang(v string) error {
	return s.Struct.SetText(6, v)
}

func (s PostSetPushersRequestCapn) Data() (PusherDataCapn, error) {
	p, err := s.Struct.Ptr(7)
	return PusherDataCapn{Struct: p.Struct()}, err
}

func (s PostSetPushersRequestCapn) HasData() bool {
	p, err := s.Struct.Ptr(7)
	return p.IsValid() || err != nil
}

func (s PostSetPushersRequestCapn) SetData(v PusherDataCapn) error {
	return s.Struct.SetPtr(7, v.Struct.ToPtr())
}

// NewData sets the data field to a newly
// allocated PusherDataCapn struct, preferring placement in s's segment.
func (s PostSetPushersRequestCapn) NewData() (PusherDataCapn, error) {
	ss, err := NewPusherDataCapn(s.Struct.Segment())
	if err != nil {
		return PusherDataCapn{}, err
	}
	err = s.Struct.SetPtr(7, ss.Struct.ToPtr())
	return ss, err
}

func (s PostSetPushersRequestCapn) Append() bool {
	return s.Struct.Bit(0)
}

func (s PostSetPushersRequestCapn) SetAppend(v bool) {
	s.Struct.SetBit(0, v)
}

// PostSetPushersRequestCapn_List is a list of PostSetPushersRequestCapn.
type PostSetPushersRequestCapn_List struct{ capnp.List }

// NewPostSetPushersRequestCapn creates a new list of PostSetPushersRequestCapn.
func NewPostSetPushersRequestCapn_List(s *capnp.Segment, sz int32) (PostSetPushersRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 8}, sz)
	return PostSetPushersRequestCapn_List{l}, err
}

func (s PostSetPushersRequestCapn_List) At(i int) PostSetPushersRequestCapn {
	return PostSetPushersRequestCapn{s.List.Struct(i)}
}

func (s PostSetPushersRequestCapn_List) Set(i int, v PostSetPushersRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PostSetPushersRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xa14867b80f309cef, s.List)
	return str
}

// PostSetPushersRequestCapn_Promise is a wrapper for a PostSetPushersRequestCapn promised by a client call.
type PostSetPushersRequestCapn_Promise struct{ *capnp.Pipeline }

func (p PostSetPushersRequestCapn_Promise) Struct() (PostSetPushersRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return PostSetPushersRequestCapn{s}, err
}

func (p PostSetPushersRequestCapn_Promise) Data() PusherDataCapn_Promise {
	return PusherDataCapn_Promise{Pipeline: p.Pipeline.GetPipeline(7)}
}

type PostUserPresenceListRequestCapn struct{ capnp.Struct }

// PostUserPresenceListRequestCapn_TypeID is the unique identifier for the type PostUserPresenceListRequestCapn.
const PostUserPresenceListRequestCapn_TypeID = 0xa6f3c02597d54668

func NewPostUserPresenceListRequestCapn(s *capnp.Segment) (PostUserPresenceListRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return PostUserPresenceListRequestCapn{st}, err
}

func NewRootPostUserPresenceListRequestCapn(s *capnp.Segment) (PostUserPresenceListRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return PostUserPresenceListRequestCapn{st}, err
}

func ReadRootPostUserPresenceListRequestCapn(msg *capnp.Message) (PostUserPresenceListRequestCapn, error) {
	root, err := msg.RootPtr()
	return PostUserPresenceListRequestCapn{root.Struct()}, err
}

func (s PostUserPresenceListRequestCapn) String() string {
	str, _ := text.Marshal(0xa6f3c02597d54668, s.Struct)
	return str
}

func (s PostUserPresenceListRequestCapn) UserID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PostUserPresenceListRequestCapn) HasUserID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PostUserPresenceListRequestCapn) UserIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PostUserPresenceListRequestCapn) SetUserID(v string) error {
	return s.Struct.SetText(0, v)
}

func (s PostUserPresenceListRequestCapn) Invite() (capnp.TextList, error) {
	p, err := s.Struct.Ptr(1)
	return capnp.TextList{List: p.List()}, err
}

func (s PostUserPresenceListRequestCapn) HasInvite() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s PostUserPresenceListRequestCapn) SetInvite(v capnp.TextList) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewInvite sets the invite field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s PostUserPresenceListRequestCapn) NewInvite(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

func (s PostUserPresenceListRequestCapn) Drop() (capnp.TextList, error) {
	p, err := s.Struct.Ptr(2)
	return capnp.TextList{List: p.List()}, err
}

func (s PostUserPresenceListRequestCapn) HasDrop() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s PostUserPresenceListRequestCapn) SetDrop(v capnp.TextList) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewDrop sets the drop field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s PostUserPresenceListRequestCapn) NewDrop(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

// PostUserPresenceListRequestCapn_List is a list of PostUserPresenceListRequestCapn.
type PostUserPresenceListRequestCapn_List struct{ capnp.List }

// NewPostUserPresenceListRequestCapn creates a new list of PostUserPresenceListRequestCapn.
func NewPostUserPresenceListRequestCapn_List(s *capnp.Segment, sz int32) (PostUserPresenceListRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return PostUserPresenceListRequestCapn_List{l}, err
}

func (s PostUserPresenceListRequestCapn_List) At(i int) PostUserPresenceListRequestCapn {
	return PostUserPresenceListRequestCapn{s.List.Struct(i)}
}

func (s PostUserPresenceListRequestCapn_List) Set(i int, v PostUserPresenceListRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PostUserPresenceListRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xa6f3c02597d54668, s.List)
	return str
}

// PostUserPresenceListRequestCapn_Promise is a wrapper for a PostUserPresenceListRequestCapn promised by a client call.
type PostUserPresenceListRequestCapn_Promise struct{ *capnp.Pipeline }

func (p PostUserPresenceListRequestCapn_Promise) Struct() (PostUserPresenceListRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return PostUserPresenceListRequestCapn{s}, err
}

type PushConditionCapn struct{ capnp.Struct }

// PushConditionCapn_TypeID is the unique identifier for the type PushConditionCapn.
const PushConditionCapn_TypeID = 0xa880dd00c26faed7

func NewPushConditionCapn(s *capnp.Segment) (PushConditionCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return PushConditionCapn{st}, err
}

func NewRootPushConditionCapn(s *capnp.Segment) (PushConditionCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return PushConditionCapn{st}, err
}

func ReadRootPushConditionCapn(msg *capnp.Message) (PushConditionCapn, error) {
	root, err := msg.RootPtr()
	return PushConditionCapn{root.Struct()}, err
}

func (s PushConditionCapn) String() string {
	str, _ := text.Marshal(0xa880dd00c26faed7, s.Struct)
	return str
}

func (s PushConditionCapn) Kind() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PushConditionCapn) HasKind() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PushConditionCapn) KindBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PushConditionCapn) SetKind(v string) error {
	return s.Struct.SetText(0, v)
}

func (s PushConditionCapn) Key() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s PushConditionCapn) HasKey() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s PushConditionCapn) KeyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s PushConditionCapn) SetKey(v string) error {
	return s.Struct.SetText(1, v)
}

func (s PushConditionCapn) Pattern() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s PushConditionCapn) HasPattern() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s PushConditionCapn) PatternBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s PushConditionCapn) SetPattern(v string) error {
	return s.Struct.SetText(2, v)
}

func (s PushConditionCapn) Is() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s PushConditionCapn) HasIs() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s PushConditionCapn) IsBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s PushConditionCapn) SetIs(v string) error {
	return s.Struct.SetText(3, v)
}

// PushConditionCapn_List is a list of PushConditionCapn.
type PushConditionCapn_List struct{ capnp.List }

// NewPushConditionCapn creates a new list of PushConditionCapn.
func NewPushConditionCapn_List(s *capnp.Segment, sz int32) (PushConditionCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return PushConditionCapn_List{l}, err
}

func (s PushConditionCapn_List) At(i int) PushConditionCapn {
	return PushConditionCapn{s.List.Struct(i)}
}

func (s PushConditionCapn_List) Set(i int, v PushConditionCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PushConditionCapn_List) String() string {
	str, _ := text.MarshalList(0xa880dd00c26faed7, s.List)
	return str
}

// PushConditionCapn_Promise is a wrapper for a PushConditionCapn promised by a client call.
type PushConditionCapn_Promise struct{ *capnp.Pipeline }

func (p PushConditionCapn_Promise) Struct() (PushConditionCapn, error) {
	s, err := p.Pipeline.Struct()
	return PushConditionCapn{s}, err
}

type PusherCapn struct{ capnp.Struct }

// PusherCapn_TypeID is the unique identifier for the type PusherCapn.
const PusherCapn_TypeID = 0xcc42e08dd7871e92

func NewPusherCapn(s *capnp.Segment) (PusherCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 8})
	return PusherCapn{st}, err
}

func NewRootPusherCapn(s *capnp.Segment) (PusherCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 8})
	return PusherCapn{st}, err
}

func ReadRootPusherCapn(msg *capnp.Message) (PusherCapn, error) {
	root, err := msg.RootPtr()
	return PusherCapn{root.Struct()}, err
}

func (s PusherCapn) String() string {
	str, _ := text.Marshal(0xcc42e08dd7871e92, s.Struct)
	return str
}

func (s PusherCapn) Pushkey() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PusherCapn) HasPushkey() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PusherCapn) PushkeyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PusherCapn) SetPushkey(v string) error {
	return s.Struct.SetText(0, v)
}

func (s PusherCapn) Kind() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s PusherCapn) HasKind() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s PusherCapn) KindBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s PusherCapn) SetKind(v string) error {
	return s.Struct.SetText(1, v)
}

func (s PusherCapn) AppID() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s PusherCapn) HasAppID() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s PusherCapn) AppIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s PusherCapn) SetAppID(v string) error {
	return s.Struct.SetText(2, v)
}

func (s PusherCapn) AppDisplayName() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s PusherCapn) HasAppDisplayName() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s PusherCapn) AppDisplayNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s PusherCapn) SetAppDisplayName(v string) error {
	return s.Struct.SetText(3, v)
}

func (s PusherCapn) DeviceDisplayName() (string, error) {
	p, err := s.Struct.Ptr(4)
	return p.Text(), err
}

func (s PusherCapn) HasDeviceDisplayName() bool {
	p, err := s.Struct.Ptr(4)
	return p.IsValid() || err != nil
}

func (s PusherCapn) DeviceDisplayNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(4)
	return p.TextBytes(), err
}

func (s PusherCapn) SetDeviceDisplayName(v string) error {
	return s.Struct.SetText(4, v)
}

func (s PusherCapn) ProfileTag() (string, error) {
	p, err := s.Struct.Ptr(5)
	return p.Text(), err
}

func (s PusherCapn) HasProfileTag() bool {
	p, err := s.Struct.Ptr(5)
	return p.IsValid() || err != nil
}

func (s PusherCapn) ProfileTagBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(5)
	return p.TextBytes(), err
}

func (s PusherCapn) SetProfileTag(v string) error {
	return s.Struct.SetText(5, v)
}

func (s PusherCapn) Lang() (string, error) {
	p, err := s.Struct.Ptr(6)
	return p.Text(), err
}

func (s PusherCapn) HasLang() bool {
	p, err := s.Struct.Ptr(6)
	return p.IsValid() || err != nil
}

func (s PusherCapn) LangBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(6)
	return p.TextBytes(), err
}

func (s PusherCapn) SetLang(v string) error {
	return s.Struct.SetText(6, v)
}

func (s PusherCapn) Data() (PusherDataCapn, error) {
	p, err := s.Struct.Ptr(7)
	return PusherDataCapn{Struct: p.Struct()}, err
}

func (s PusherCapn) HasData() bool {
	p, err := s.Struct.Ptr(7)
	return p.IsValid() || err != nil
}

func (s PusherCapn) SetData(v PusherDataCapn) error {
	return s.Struct.SetPtr(7, v.Struct.ToPtr())
}

// NewData sets the data field to a newly
// allocated PusherDataCapn struct, preferring placement in s's segment.
func (s PusherCapn) NewData() (PusherDataCapn, error) {
	ss, err := NewPusherDataCapn(s.Struct.Segment())
	if err != nil {
		return PusherDataCapn{}, err
	}
	err = s.Struct.SetPtr(7, ss.Struct.ToPtr())
	return ss, err
}

// PusherCapn_List is a list of PusherCapn.
type PusherCapn_List struct{ capnp.List }

// NewPusherCapn creates a new list of PusherCapn.
func NewPusherCapn_List(s *capnp.Segment, sz int32) (PusherCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 8}, sz)
	return PusherCapn_List{l}, err
}

func (s PusherCapn_List) At(i int) PusherCapn { return PusherCapn{s.List.Struct(i)} }

func (s PusherCapn_List) Set(i int, v PusherCapn) error { return s.List.SetStruct(i, v.Struct) }

func (s PusherCapn_List) String() string {
	str, _ := text.MarshalList(0xcc42e08dd7871e92, s.List)
	return str
}

// PusherCapn_Promise is a wrapper for a PusherCapn promised by a client call.
type PusherCapn_Promise struct{ *capnp.Pipeline }

func (p PusherCapn_Promise) Struct() (PusherCapn, error) {
	s, err := p.Pipeline.Struct()
	return PusherCapn{s}, err
}

func (p PusherCapn_Promise) Data() PusherDataCapn_Promise {
	return PusherDataCapn_Promise{Pipeline: p.Pipeline.GetPipeline(7)}
}

type PusherDataCapn struct{ capnp.Struct }

// PusherDataCapn_TypeID is the unique identifier for the type PusherDataCapn.
const PusherDataCapn_TypeID = 0x91d24b11533004f1

func NewPusherDataCapn(s *capnp.Segment) (PusherDataCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return PusherDataCapn{st}, err
}

func NewRootPusherDataCapn(s *capnp.Segment) (PusherDataCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return PusherDataCapn{st}, err
}

func ReadRootPusherDataCapn(msg *capnp.Message) (PusherDataCapn, error) {
	root, err := msg.RootPtr()
	return PusherDataCapn{root.Struct()}, err
}

func (s PusherDataCapn) String() string {
	str, _ := text.Marshal(0x91d24b11533004f1, s.Struct)
	return str
}

func (s PusherDataCapn) URL() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PusherDataCapn) HasURL() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PusherDataCapn) URLBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PusherDataCapn) SetURL(v string) error {
	return s.Struct.SetText(0, v)
}

func (s PusherDataCapn) Format() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s PusherDataCapn) HasFormat() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s PusherDataCapn) FormatBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s PusherDataCapn) SetFormat(v string) error {
	return s.Struct.SetText(1, v)
}

func (s PusherDataCapn) PushType() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s PusherDataCapn) HasPushType() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s PusherDataCapn) PushTypeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s PusherDataCapn) SetPushType(v string) error {
	return s.Struct.SetText(2, v)
}

func (s PusherDataCapn) PushChannel() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s PusherDataCapn) HasPushChannel() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s PusherDataCapn) PushChannelBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s PusherDataCapn) SetPushChannel(v string) error {
	return s.Struct.SetText(3, v)
}

// PusherDataCapn_List is a list of PusherDataCapn.
type PusherDataCapn_List struct{ capnp.List }

// NewPusherDataCapn creates a new list of PusherDataCapn.
func NewPusherDataCapn_List(s *capnp.Segment, sz int32) (PusherDataCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return PusherDataCapn_List{l}, err
}

func (s PusherDataCapn_List) At(i int) PusherDataCapn { return PusherDataCapn{s.List.Struct(i)} }

func (s PusherDataCapn_List) Set(i int, v PusherDataCapn) error { return s.List.SetStruct(i, v.Struct) }

func (s PusherDataCapn_List) String() string {
	str, _ := text.MarshalList(0x91d24b11533004f1, s.List)
	return str
}

// PusherDataCapn_Promise is a wrapper for a PusherDataCapn promised by a client call.
type PusherDataCapn_Promise struct{ *capnp.Pipeline }

func (p PusherDataCapn_Promise) Struct() (PusherDataCapn, error) {
	s, err := p.Pipeline.Struct()
	return PusherDataCapn{s}, err
}

type PutDevicesByIDRequestCapn struct{ capnp.Struct }

// PutDevicesByIDRequestCapn_TypeID is the unique identifier for the type PutDevicesByIDRequestCapn.
const PutDevicesByIDRequestCapn_TypeID = 0xed35f846661c4ab1

func NewPutDevicesByIDRequestCapn(s *capnp.Segment) (PutDevicesByIDRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return PutDevicesByIDRequestCapn{st}, err
}

func NewRootPutDevicesByIDRequestCapn(s *capnp.Segment) (PutDevicesByIDRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return PutDevicesByIDRequestCapn{st}, err
}

func ReadRootPutDevicesByIDRequestCapn(msg *capnp.Message) (PutDevicesByIDRequestCapn, error) {
	root, err := msg.RootPtr()
	return PutDevicesByIDRequestCapn{root.Struct()}, err
}

func (s PutDevicesByIDRequestCapn) String() string {
	str, _ := text.Marshal(0xed35f846661c4ab1, s.Struct)
	return str
}

func (s PutDevicesByIDRequestCapn) DeviceId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PutDevicesByIDRequestCapn) HasDeviceId() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PutDevicesByIDRequestCapn) DeviceIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PutDevicesByIDRequestCapn) SetDeviceId(v string) error {
	return s.Struct.SetText(0, v)
}

func (s PutDevicesByIDRequestCapn) DisplayName() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s PutDevicesByIDRequestCapn) HasDisplayName() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s PutDevicesByIDRequestCapn) DisplayNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s PutDevicesByIDRequestCapn) SetDisplayName(v string) error {
	return s.Struct.SetText(1, v)
}

// PutDevicesByIDRequestCapn_List is a list of PutDevicesByIDRequestCapn.
type PutDevicesByIDRequestCapn_List struct{ capnp.List }

// NewPutDevicesByIDRequestCapn creates a new list of PutDevicesByIDRequestCapn.
func NewPutDevicesByIDRequestCapn_List(s *capnp.Segment, sz int32) (PutDevicesByIDRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return PutDevicesByIDRequestCapn_List{l}, err
}

func (s PutDevicesByIDRequestCapn_List) At(i int) PutDevicesByIDRequestCapn {
	return PutDevicesByIDRequestCapn{s.List.Struct(i)}
}

func (s PutDevicesByIDRequestCapn_List) Set(i int, v PutDevicesByIDRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PutDevicesByIDRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xed35f846661c4ab1, s.List)
	return str
}

// PutDevicesByIDRequestCapn_Promise is a wrapper for a PutDevicesByIDRequestCapn promised by a client call.
type PutDevicesByIDRequestCapn_Promise struct{ *capnp.Pipeline }

func (p PutDevicesByIDRequestCapn_Promise) Struct() (PutDevicesByIDRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return PutDevicesByIDRequestCapn{s}, err
}

type PutPushrulesActionsByIDRequestCapn struct{ capnp.Struct }

// PutPushrulesActionsByIDRequestCapn_TypeID is the unique identifier for the type PutPushrulesActionsByIDRequestCapn.
const PutPushrulesActionsByIDRequestCapn_TypeID = 0xd7072ed77da85079

func NewPutPushrulesActionsByIDRequestCapn(s *capnp.Segment) (PutPushrulesActionsByIDRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return PutPushrulesActionsByIDRequestCapn{st}, err
}

func NewRootPutPushrulesActionsByIDRequestCapn(s *capnp.Segment) (PutPushrulesActionsByIDRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return PutPushrulesActionsByIDRequestCapn{st}, err
}

func ReadRootPutPushrulesActionsByIDRequestCapn(msg *capnp.Message) (PutPushrulesActionsByIDRequestCapn, error) {
	root, err := msg.RootPtr()
	return PutPushrulesActionsByIDRequestCapn{root.Struct()}, err
}

func (s PutPushrulesActionsByIDRequestCapn) String() string {
	str, _ := text.Marshal(0xd7072ed77da85079, s.Struct)
	return str
}

func (s PutPushrulesActionsByIDRequestCapn) Scope() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PutPushrulesActionsByIDRequestCapn) HasScope() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PutPushrulesActionsByIDRequestCapn) ScopeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PutPushrulesActionsByIDRequestCapn) SetScope(v string) error {
	return s.Struct.SetText(0, v)
}

func (s PutPushrulesActionsByIDRequestCapn) Kind() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s PutPushrulesActionsByIDRequestCapn) HasKind() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s PutPushrulesActionsByIDRequestCapn) KindBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s PutPushrulesActionsByIDRequestCapn) SetKind(v string) error {
	return s.Struct.SetText(1, v)
}

func (s PutPushrulesActionsByIDRequestCapn) RuleID() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s PutPushrulesActionsByIDRequestCapn) HasRuleID() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s PutPushrulesActionsByIDRequestCapn) RuleIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s PutPushrulesActionsByIDRequestCapn) SetRuleID(v string) error {
	return s.Struct.SetText(2, v)
}

func (s PutPushrulesActionsByIDRequestCapn) Actions() (capnp.TextList, error) {
	p, err := s.Struct.Ptr(3)
	return capnp.TextList{List: p.List()}, err
}

func (s PutPushrulesActionsByIDRequestCapn) HasActions() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s PutPushrulesActionsByIDRequestCapn) SetActions(v capnp.TextList) error {
	return s.Struct.SetPtr(3, v.List.ToPtr())
}

// NewActions sets the actions field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s PutPushrulesActionsByIDRequestCapn) NewActions(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = s.Struct.SetPtr(3, l.List.ToPtr())
	return l, err
}

// PutPushrulesActionsByIDRequestCapn_List is a list of PutPushrulesActionsByIDRequestCapn.
type PutPushrulesActionsByIDRequestCapn_List struct{ capnp.List }

// NewPutPushrulesActionsByIDRequestCapn creates a new list of PutPushrulesActionsByIDRequestCapn.
func NewPutPushrulesActionsByIDRequestCapn_List(s *capnp.Segment, sz int32) (PutPushrulesActionsByIDRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return PutPushrulesActionsByIDRequestCapn_List{l}, err
}

func (s PutPushrulesActionsByIDRequestCapn_List) At(i int) PutPushrulesActionsByIDRequestCapn {
	return PutPushrulesActionsByIDRequestCapn{s.List.Struct(i)}
}

func (s PutPushrulesActionsByIDRequestCapn_List) Set(i int, v PutPushrulesActionsByIDRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PutPushrulesActionsByIDRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xd7072ed77da85079, s.List)
	return str
}

// PutPushrulesActionsByIDRequestCapn_Promise is a wrapper for a PutPushrulesActionsByIDRequestCapn promised by a client call.
type PutPushrulesActionsByIDRequestCapn_Promise struct{ *capnp.Pipeline }

func (p PutPushrulesActionsByIDRequestCapn_Promise) Struct() (PutPushrulesActionsByIDRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return PutPushrulesActionsByIDRequestCapn{s}, err
}

type PutPushrulesByIDRequestCapn struct{ capnp.Struct }

// PutPushrulesByIDRequestCapn_TypeID is the unique identifier for the type PutPushrulesByIDRequestCapn.
const PutPushrulesByIDRequestCapn_TypeID = 0x9dc2714f425b716f

func NewPutPushrulesByIDRequestCapn(s *capnp.Segment) (PutPushrulesByIDRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 8})
	return PutPushrulesByIDRequestCapn{st}, err
}

func NewRootPutPushrulesByIDRequestCapn(s *capnp.Segment) (PutPushrulesByIDRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 8})
	return PutPushrulesByIDRequestCapn{st}, err
}

func ReadRootPutPushrulesByIDRequestCapn(msg *capnp.Message) (PutPushrulesByIDRequestCapn, error) {
	root, err := msg.RootPtr()
	return PutPushrulesByIDRequestCapn{root.Struct()}, err
}

func (s PutPushrulesByIDRequestCapn) String() string {
	str, _ := text.Marshal(0x9dc2714f425b716f, s.Struct)
	return str
}

func (s PutPushrulesByIDRequestCapn) Actions() (capnp.TextList, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.TextList{List: p.List()}, err
}

func (s PutPushrulesByIDRequestCapn) HasActions() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PutPushrulesByIDRequestCapn) SetActions(v capnp.TextList) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewActions sets the actions field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s PutPushrulesByIDRequestCapn) NewActions(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

func (s PutPushrulesByIDRequestCapn) Conditions() (PushConditionCapn_List, error) {
	p, err := s.Struct.Ptr(1)
	return PushConditionCapn_List{List: p.List()}, err
}

func (s PutPushrulesByIDRequestCapn) HasConditions() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s PutPushrulesByIDRequestCapn) SetConditions(v PushConditionCapn_List) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewConditions sets the conditions field to a newly
// allocated PushConditionCapn_List, preferring placement in s's segment.
func (s PutPushrulesByIDRequestCapn) NewConditions(n int32) (PushConditionCapn_List, error) {
	l, err := NewPushConditionCapn_List(s.Struct.Segment(), n)
	if err != nil {
		return PushConditionCapn_List{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

func (s PutPushrulesByIDRequestCapn) Pattern() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s PutPushrulesByIDRequestCapn) HasPattern() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s PutPushrulesByIDRequestCapn) PatternBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s PutPushrulesByIDRequestCapn) SetPattern(v string) error {
	return s.Struct.SetText(2, v)
}

func (s PutPushrulesByIDRequestCapn) Scope() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s PutPushrulesByIDRequestCapn) HasScope() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s PutPushrulesByIDRequestCapn) ScopeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s PutPushrulesByIDRequestCapn) SetScope(v string) error {
	return s.Struct.SetText(3, v)
}

func (s PutPushrulesByIDRequestCapn) Kind() (string, error) {
	p, err := s.Struct.Ptr(4)
	return p.Text(), err
}

func (s PutPushrulesByIDRequestCapn) HasKind() bool {
	p, err := s.Struct.Ptr(4)
	return p.IsValid() || err != nil
}

func (s PutPushrulesByIDRequestCapn) KindBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(4)
	return p.TextBytes(), err
}

func (s PutPushrulesByIDRequestCapn) SetKind(v string) error {
	return s.Struct.SetText(4, v)
}

func (s PutPushrulesByIDRequestCapn) RuleID() (string, error) {
	p, err := s.Struct.Ptr(5)
	return p.Text(), err
}

func (s PutPushrulesByIDRequestCapn) HasRuleID() bool {
	p, err := s.Struct.Ptr(5)
	return p.IsValid() || err != nil
}

func (s PutPushrulesByIDRequestCapn) RuleIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(5)
	return p.TextBytes(), err
}

func (s PutPushrulesByIDRequestCapn) SetRuleID(v string) error {
	return s.Struct.SetText(5, v)
}

func (s PutPushrulesByIDRequestCapn) Before() (string, error) {
	p, err := s.Struct.Ptr(6)
	return p.Text(), err
}

func (s PutPushrulesByIDRequestCapn) HasBefore() bool {
	p, err := s.Struct.Ptr(6)
	return p.IsValid() || err != nil
}

func (s PutPushrulesByIDRequestCapn) BeforeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(6)
	return p.TextBytes(), err
}

func (s PutPushrulesByIDRequestCapn) SetBefore(v string) error {
	return s.Struct.SetText(6, v)
}

func (s PutPushrulesByIDRequestCapn) After() (string, error) {
	p, err := s.Struct.Ptr(7)
	return p.Text(), err
}

func (s PutPushrulesByIDRequestCapn) HasAfter() bool {
	p, err := s.Struct.Ptr(7)
	return p.IsValid() || err != nil
}

func (s PutPushrulesByIDRequestCapn) AfterBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(7)
	return p.TextBytes(), err
}

func (s PutPushrulesByIDRequestCapn) SetAfter(v string) error {
	return s.Struct.SetText(7, v)
}

// PutPushrulesByIDRequestCapn_List is a list of PutPushrulesByIDRequestCapn.
type PutPushrulesByIDRequestCapn_List struct{ capnp.List }

// NewPutPushrulesByIDRequestCapn creates a new list of PutPushrulesByIDRequestCapn.
func NewPutPushrulesByIDRequestCapn_List(s *capnp.Segment, sz int32) (PutPushrulesByIDRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 8}, sz)
	return PutPushrulesByIDRequestCapn_List{l}, err
}

func (s PutPushrulesByIDRequestCapn_List) At(i int) PutPushrulesByIDRequestCapn {
	return PutPushrulesByIDRequestCapn{s.List.Struct(i)}
}

func (s PutPushrulesByIDRequestCapn_List) Set(i int, v PutPushrulesByIDRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PutPushrulesByIDRequestCapn_List) String() string {
	str, _ := text.MarshalList(0x9dc2714f425b716f, s.List)
	return str
}

// PutPushrulesByIDRequestCapn_Promise is a wrapper for a PutPushrulesByIDRequestCapn promised by a client call.
type PutPushrulesByIDRequestCapn_Promise struct{ *capnp.Pipeline }

func (p PutPushrulesByIDRequestCapn_Promise) Struct() (PutPushrulesByIDRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return PutPushrulesByIDRequestCapn{s}, err
}

type PutPushrulesEnabledByIDRequestCapn struct{ capnp.Struct }

// PutPushrulesEnabledByIDRequestCapn_TypeID is the unique identifier for the type PutPushrulesEnabledByIDRequestCapn.
const PutPushrulesEnabledByIDRequestCapn_TypeID = 0x9d30e8d535c6968f

func NewPutPushrulesEnabledByIDRequestCapn(s *capnp.Segment) (PutPushrulesEnabledByIDRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return PutPushrulesEnabledByIDRequestCapn{st}, err
}

func NewRootPutPushrulesEnabledByIDRequestCapn(s *capnp.Segment) (PutPushrulesEnabledByIDRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return PutPushrulesEnabledByIDRequestCapn{st}, err
}

func ReadRootPutPushrulesEnabledByIDRequestCapn(msg *capnp.Message) (PutPushrulesEnabledByIDRequestCapn, error) {
	root, err := msg.RootPtr()
	return PutPushrulesEnabledByIDRequestCapn{root.Struct()}, err
}

func (s PutPushrulesEnabledByIDRequestCapn) String() string {
	str, _ := text.Marshal(0x9d30e8d535c6968f, s.Struct)
	return str
}

func (s PutPushrulesEnabledByIDRequestCapn) Scope() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PutPushrulesEnabledByIDRequestCapn) HasScope() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PutPushrulesEnabledByIDRequestCapn) ScopeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PutPushrulesEnabledByIDRequestCapn) SetScope(v string) error {
	return s.Struct.SetText(0, v)
}

func (s PutPushrulesEnabledByIDRequestCapn) Kind() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s PutPushrulesEnabledByIDRequestCapn) HasKind() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s PutPushrulesEnabledByIDRequestCapn) KindBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s PutPushrulesEnabledByIDRequestCapn) SetKind(v string) error {
	return s.Struct.SetText(1, v)
}

func (s PutPushrulesEnabledByIDRequestCapn) RuleID() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s PutPushrulesEnabledByIDRequestCapn) HasRuleID() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s PutPushrulesEnabledByIDRequestCapn) RuleIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s PutPushrulesEnabledByIDRequestCapn) SetRuleID(v string) error {
	return s.Struct.SetText(2, v)
}

func (s PutPushrulesEnabledByIDRequestCapn) Enabled() bool {
	return s.Struct.Bit(0)
}

func (s PutPushrulesEnabledByIDRequestCapn) SetEnabled(v bool) {
	s.Struct.SetBit(0, v)
}

// PutPushrulesEnabledByIDRequestCapn_List is a list of PutPushrulesEnabledByIDRequestCapn.
type PutPushrulesEnabledByIDRequestCapn_List struct{ capnp.List }

// NewPutPushrulesEnabledByIDRequestCapn creates a new list of PutPushrulesEnabledByIDRequestCapn.
func NewPutPushrulesEnabledByIDRequestCapn_List(s *capnp.Segment, sz int32) (PutPushrulesEnabledByIDRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3}, sz)
	return PutPushrulesEnabledByIDRequestCapn_List{l}, err
}

func (s PutPushrulesEnabledByIDRequestCapn_List) At(i int) PutPushrulesEnabledByIDRequestCapn {
	return PutPushrulesEnabledByIDRequestCapn{s.List.Struct(i)}
}

func (s PutPushrulesEnabledByIDRequestCapn_List) Set(i int, v PutPushrulesEnabledByIDRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PutPushrulesEnabledByIDRequestCapn_List) String() string {
	str, _ := text.MarshalList(0x9d30e8d535c6968f, s.List)
	return str
}

// PutPushrulesEnabledByIDRequestCapn_Promise is a wrapper for a PutPushrulesEnabledByIDRequestCapn promised by a client call.
type PutPushrulesEnabledByIDRequestCapn_Promise struct{ *capnp.Pipeline }

func (p PutPushrulesEnabledByIDRequestCapn_Promise) Struct() (PutPushrulesEnabledByIDRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return PutPushrulesEnabledByIDRequestCapn{s}, err
}

type PutRoomAccountDataRequestCapn struct{ capnp.Struct }

// PutRoomAccountDataRequestCapn_TypeID is the unique identifier for the type PutRoomAccountDataRequestCapn.
const PutRoomAccountDataRequestCapn_TypeID = 0xb6c107e5e2b2c313

func NewPutRoomAccountDataRequestCapn(s *capnp.Segment) (PutRoomAccountDataRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return PutRoomAccountDataRequestCapn{st}, err
}

func NewRootPutRoomAccountDataRequestCapn(s *capnp.Segment) (PutRoomAccountDataRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return PutRoomAccountDataRequestCapn{st}, err
}

func ReadRootPutRoomAccountDataRequestCapn(msg *capnp.Message) (PutRoomAccountDataRequestCapn, error) {
	root, err := msg.RootPtr()
	return PutRoomAccountDataRequestCapn{root.Struct()}, err
}

func (s PutRoomAccountDataRequestCapn) String() string {
	str, _ := text.Marshal(0xb6c107e5e2b2c313, s.Struct)
	return str
}

func (s PutRoomAccountDataRequestCapn) UserId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PutRoomAccountDataRequestCapn) HasUserId() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PutRoomAccountDataRequestCapn) UserIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PutRoomAccountDataRequestCapn) SetUserId(v string) error {
	return s.Struct.SetText(0, v)
}

func (s PutRoomAccountDataRequestCapn) RoomID() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s PutRoomAccountDataRequestCapn) HasRoomID() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s PutRoomAccountDataRequestCapn) RoomIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s PutRoomAccountDataRequestCapn) SetRoomID(v string) error {
	return s.Struct.SetText(1, v)
}

func (s PutRoomAccountDataRequestCapn) Type() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s PutRoomAccountDataRequestCapn) HasType() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s PutRoomAccountDataRequestCapn) TypeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s PutRoomAccountDataRequestCapn) SetType(v string) error {
	return s.Struct.SetText(2, v)
}

func (s PutRoomAccountDataRequestCapn) Content() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return []byte(p.Data()), err
}

func (s PutRoomAccountDataRequestCapn) HasContent() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s PutRoomAccountDataRequestCapn) SetContent(v []byte) error {
	return s.Struct.SetData(3, v)
}

// PutRoomAccountDataRequestCapn_List is a list of PutRoomAccountDataRequestCapn.
type PutRoomAccountDataRequestCapn_List struct{ capnp.List }

// NewPutRoomAccountDataRequestCapn creates a new list of PutRoomAccountDataRequestCapn.
func NewPutRoomAccountDataRequestCapn_List(s *capnp.Segment, sz int32) (PutRoomAccountDataRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return PutRoomAccountDataRequestCapn_List{l}, err
}

func (s PutRoomAccountDataRequestCapn_List) At(i int) PutRoomAccountDataRequestCapn {
	return PutRoomAccountDataRequestCapn{s.List.Struct(i)}
}

func (s PutRoomAccountDataRequestCapn_List) Set(i int, v PutRoomAccountDataRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PutRoomAccountDataRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xb6c107e5e2b2c313, s.List)
	return str
}

// PutRoomAccountDataRequestCapn_Promise is a wrapper for a PutRoomAccountDataRequestCapn promised by a client call.
type PutRoomAccountDataRequestCapn_Promise struct{ *capnp.Pipeline }

func (p PutRoomAccountDataRequestCapn_Promise) Struct() (PutRoomAccountDataRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return PutRoomAccountDataRequestCapn{s}, err
}

type PutRoomUserTypingRequestCapn struct{ capnp.Struct }

// PutRoomUserTypingRequestCapn_TypeID is the unique identifier for the type PutRoomUserTypingRequestCapn.
const PutRoomUserTypingRequestCapn_TypeID = 0x9a93ff9b5b722a9b

func NewPutRoomUserTypingRequestCapn(s *capnp.Segment) (PutRoomUserTypingRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2})
	return PutRoomUserTypingRequestCapn{st}, err
}

func NewRootPutRoomUserTypingRequestCapn(s *capnp.Segment) (PutRoomUserTypingRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2})
	return PutRoomUserTypingRequestCapn{st}, err
}

func ReadRootPutRoomUserTypingRequestCapn(msg *capnp.Message) (PutRoomUserTypingRequestCapn, error) {
	root, err := msg.RootPtr()
	return PutRoomUserTypingRequestCapn{root.Struct()}, err
}

func (s PutRoomUserTypingRequestCapn) String() string {
	str, _ := text.Marshal(0x9a93ff9b5b722a9b, s.Struct)
	return str
}

func (s PutRoomUserTypingRequestCapn) UserID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PutRoomUserTypingRequestCapn) HasUserID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PutRoomUserTypingRequestCapn) UserIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PutRoomUserTypingRequestCapn) SetUserID(v string) error {
	return s.Struct.SetText(0, v)
}

func (s PutRoomUserTypingRequestCapn) RoomID() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s PutRoomUserTypingRequestCapn) HasRoomID() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s PutRoomUserTypingRequestCapn) RoomIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s PutRoomUserTypingRequestCapn) SetRoomID(v string) error {
	return s.Struct.SetText(1, v)
}

func (s PutRoomUserTypingRequestCapn) Typing() bool {
	return s.Struct.Bit(0)
}

func (s PutRoomUserTypingRequestCapn) SetTyping(v bool) {
	s.Struct.SetBit(0, v)
}

func (s PutRoomUserTypingRequestCapn) TimeOut() int64 {
	return int64(s.Struct.Uint64(8))
}

func (s PutRoomUserTypingRequestCapn) SetTimeOut(v int64) {
	s.Struct.SetUint64(8, uint64(v))
}

// PutRoomUserTypingRequestCapn_List is a list of PutRoomUserTypingRequestCapn.
type PutRoomUserTypingRequestCapn_List struct{ capnp.List }

// NewPutRoomUserTypingRequestCapn creates a new list of PutRoomUserTypingRequestCapn.
func NewPutRoomUserTypingRequestCapn_List(s *capnp.Segment, sz int32) (PutRoomUserTypingRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 2}, sz)
	return PutRoomUserTypingRequestCapn_List{l}, err
}

func (s PutRoomUserTypingRequestCapn_List) At(i int) PutRoomUserTypingRequestCapn {
	return PutRoomUserTypingRequestCapn{s.List.Struct(i)}
}

func (s PutRoomUserTypingRequestCapn_List) Set(i int, v PutRoomUserTypingRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PutRoomUserTypingRequestCapn_List) String() string {
	str, _ := text.MarshalList(0x9a93ff9b5b722a9b, s.List)
	return str
}

// PutRoomUserTypingRequestCapn_Promise is a wrapper for a PutRoomUserTypingRequestCapn promised by a client call.
type PutRoomUserTypingRequestCapn_Promise struct{ *capnp.Pipeline }

func (p PutRoomUserTypingRequestCapn_Promise) Struct() (PutRoomUserTypingRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return PutRoomUserTypingRequestCapn{s}, err
}

type PutRoomsTagsByIDRequestCapn struct{ capnp.Struct }

// PutRoomsTagsByIDRequestCapn_TypeID is the unique identifier for the type PutRoomsTagsByIDRequestCapn.
const PutRoomsTagsByIDRequestCapn_TypeID = 0xfa0a3636d28f9d54

func NewPutRoomsTagsByIDRequestCapn(s *capnp.Segment) (PutRoomsTagsByIDRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return PutRoomsTagsByIDRequestCapn{st}, err
}

func NewRootPutRoomsTagsByIDRequestCapn(s *capnp.Segment) (PutRoomsTagsByIDRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return PutRoomsTagsByIDRequestCapn{st}, err
}

func ReadRootPutRoomsTagsByIDRequestCapn(msg *capnp.Message) (PutRoomsTagsByIDRequestCapn, error) {
	root, err := msg.RootPtr()
	return PutRoomsTagsByIDRequestCapn{root.Struct()}, err
}

func (s PutRoomsTagsByIDRequestCapn) String() string {
	str, _ := text.Marshal(0xfa0a3636d28f9d54, s.Struct)
	return str
}

func (s PutRoomsTagsByIDRequestCapn) UserId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PutRoomsTagsByIDRequestCapn) HasUserId() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PutRoomsTagsByIDRequestCapn) UserIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PutRoomsTagsByIDRequestCapn) SetUserId(v string) error {
	return s.Struct.SetText(0, v)
}

func (s PutRoomsTagsByIDRequestCapn) RoomId() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s PutRoomsTagsByIDRequestCapn) HasRoomId() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s PutRoomsTagsByIDRequestCapn) RoomIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s PutRoomsTagsByIDRequestCapn) SetRoomId(v string) error {
	return s.Struct.SetText(1, v)
}

func (s PutRoomsTagsByIDRequestCapn) Tag() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s PutRoomsTagsByIDRequestCapn) HasTag() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s PutRoomsTagsByIDRequestCapn) TagBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s PutRoomsTagsByIDRequestCapn) SetTag(v string) error {
	return s.Struct.SetText(2, v)
}

func (s PutRoomsTagsByIDRequestCapn) Order() float32 {
	return math.Float32frombits(s.Struct.Uint32(0))
}

func (s PutRoomsTagsByIDRequestCapn) SetOrder(v float32) {
	s.Struct.SetUint32(0, math.Float32bits(v))
}

func (s PutRoomsTagsByIDRequestCapn) Content() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return []byte(p.Data()), err
}

func (s PutRoomsTagsByIDRequestCapn) HasContent() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s PutRoomsTagsByIDRequestCapn) SetContent(v []byte) error {
	return s.Struct.SetData(3, v)
}

// PutRoomsTagsByIDRequestCapn_List is a list of PutRoomsTagsByIDRequestCapn.
type PutRoomsTagsByIDRequestCapn_List struct{ capnp.List }

// NewPutRoomsTagsByIDRequestCapn creates a new list of PutRoomsTagsByIDRequestCapn.
func NewPutRoomsTagsByIDRequestCapn_List(s *capnp.Segment, sz int32) (PutRoomsTagsByIDRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4}, sz)
	return PutRoomsTagsByIDRequestCapn_List{l}, err
}

func (s PutRoomsTagsByIDRequestCapn_List) At(i int) PutRoomsTagsByIDRequestCapn {
	return PutRoomsTagsByIDRequestCapn{s.List.Struct(i)}
}

func (s PutRoomsTagsByIDRequestCapn_List) Set(i int, v PutRoomsTagsByIDRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PutRoomsTagsByIDRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xfa0a3636d28f9d54, s.List)
	return str
}

// PutRoomsTagsByIDRequestCapn_Promise is a wrapper for a PutRoomsTagsByIDRequestCapn promised by a client call.
type PutRoomsTagsByIDRequestCapn_Promise struct{ *capnp.Pipeline }

func (p PutRoomsTagsByIDRequestCapn_Promise) Struct() (PutRoomsTagsByIDRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return PutRoomsTagsByIDRequestCapn{s}, err
}

type PutUserAccountDataRequestCapn struct{ capnp.Struct }

// PutUserAccountDataRequestCapn_TypeID is the unique identifier for the type PutUserAccountDataRequestCapn.
const PutUserAccountDataRequestCapn_TypeID = 0x9a549238d044f5ea

func NewPutUserAccountDataRequestCapn(s *capnp.Segment) (PutUserAccountDataRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return PutUserAccountDataRequestCapn{st}, err
}

func NewRootPutUserAccountDataRequestCapn(s *capnp.Segment) (PutUserAccountDataRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return PutUserAccountDataRequestCapn{st}, err
}

func ReadRootPutUserAccountDataRequestCapn(msg *capnp.Message) (PutUserAccountDataRequestCapn, error) {
	root, err := msg.RootPtr()
	return PutUserAccountDataRequestCapn{root.Struct()}, err
}

func (s PutUserAccountDataRequestCapn) String() string {
	str, _ := text.Marshal(0x9a549238d044f5ea, s.Struct)
	return str
}

func (s PutUserAccountDataRequestCapn) UserId() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PutUserAccountDataRequestCapn) HasUserId() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PutUserAccountDataRequestCapn) UserIdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PutUserAccountDataRequestCapn) SetUserId(v string) error {
	return s.Struct.SetText(0, v)
}

func (s PutUserAccountDataRequestCapn) Type() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s PutUserAccountDataRequestCapn) HasType() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s PutUserAccountDataRequestCapn) TypeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s PutUserAccountDataRequestCapn) SetType(v string) error {
	return s.Struct.SetText(1, v)
}

func (s PutUserAccountDataRequestCapn) Content() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return []byte(p.Data()), err
}

func (s PutUserAccountDataRequestCapn) HasContent() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s PutUserAccountDataRequestCapn) SetContent(v []byte) error {
	return s.Struct.SetData(2, v)
}

// PutUserAccountDataRequestCapn_List is a list of PutUserAccountDataRequestCapn.
type PutUserAccountDataRequestCapn_List struct{ capnp.List }

// NewPutUserAccountDataRequestCapn creates a new list of PutUserAccountDataRequestCapn.
func NewPutUserAccountDataRequestCapn_List(s *capnp.Segment, sz int32) (PutUserAccountDataRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return PutUserAccountDataRequestCapn_List{l}, err
}

func (s PutUserAccountDataRequestCapn_List) At(i int) PutUserAccountDataRequestCapn {
	return PutUserAccountDataRequestCapn{s.List.Struct(i)}
}

func (s PutUserAccountDataRequestCapn_List) Set(i int, v PutUserAccountDataRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PutUserAccountDataRequestCapn_List) String() string {
	str, _ := text.MarshalList(0x9a549238d044f5ea, s.List)
	return str
}

// PutUserAccountDataRequestCapn_Promise is a wrapper for a PutUserAccountDataRequestCapn promised by a client call.
type PutUserAccountDataRequestCapn_Promise struct{ *capnp.Pipeline }

func (p PutUserAccountDataRequestCapn_Promise) Struct() (PutUserAccountDataRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return PutUserAccountDataRequestCapn{s}, err
}

type PutUserPresenceRequestCapn struct{ capnp.Struct }

// PutUserPresenceRequestCapn_TypeID is the unique identifier for the type PutUserPresenceRequestCapn.
const PutUserPresenceRequestCapn_TypeID = 0xea85a408c105eb35

func NewPutUserPresenceRequestCapn(s *capnp.Segment) (PutUserPresenceRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return PutUserPresenceRequestCapn{st}, err
}

func NewRootPutUserPresenceRequestCapn(s *capnp.Segment) (PutUserPresenceRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return PutUserPresenceRequestCapn{st}, err
}

func ReadRootPutUserPresenceRequestCapn(msg *capnp.Message) (PutUserPresenceRequestCapn, error) {
	root, err := msg.RootPtr()
	return PutUserPresenceRequestCapn{root.Struct()}, err
}

func (s PutUserPresenceRequestCapn) String() string {
	str, _ := text.Marshal(0xea85a408c105eb35, s.Struct)
	return str
}

func (s PutUserPresenceRequestCapn) UserID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PutUserPresenceRequestCapn) HasUserID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PutUserPresenceRequestCapn) UserIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PutUserPresenceRequestCapn) SetUserID(v string) error {
	return s.Struct.SetText(0, v)
}

func (s PutUserPresenceRequestCapn) Presence() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s PutUserPresenceRequestCapn) HasPresence() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s PutUserPresenceRequestCapn) PresenceBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s PutUserPresenceRequestCapn) SetPresence(v string) error {
	return s.Struct.SetText(1, v)
}

func (s PutUserPresenceRequestCapn) Status() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s PutUserPresenceRequestCapn) HasStatus() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s PutUserPresenceRequestCapn) StatusBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s PutUserPresenceRequestCapn) SetStatus(v string) error {
	return s.Struct.SetText(2, v)
}

// PutUserPresenceRequestCapn_List is a list of PutUserPresenceRequestCapn.
type PutUserPresenceRequestCapn_List struct{ capnp.List }

// NewPutUserPresenceRequestCapn creates a new list of PutUserPresenceRequestCapn.
func NewPutUserPresenceRequestCapn_List(s *capnp.Segment, sz int32) (PutUserPresenceRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return PutUserPresenceRequestCapn_List{l}, err
}

func (s PutUserPresenceRequestCapn_List) At(i int) PutUserPresenceRequestCapn {
	return PutUserPresenceRequestCapn{s.List.Struct(i)}
}

func (s PutUserPresenceRequestCapn_List) Set(i int, v PutUserPresenceRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PutUserPresenceRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xea85a408c105eb35, s.List)
	return str
}

// PutUserPresenceRequestCapn_Promise is a wrapper for a PutUserPresenceRequestCapn promised by a client call.
type PutUserPresenceRequestCapn_Promise struct{ *capnp.Pipeline }

func (p PutUserPresenceRequestCapn_Promise) Struct() (PutUserPresenceRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return PutUserPresenceRequestCapn{s}, err
}

type TagCapn struct{ capnp.Struct }

// TagCapn_TypeID is the unique identifier for the type TagCapn.
const TagCapn_TypeID = 0x97c7370c0d585a33

func NewTagCapn(s *capnp.Segment) (TagCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return TagCapn{st}, err
}

func NewRootTagCapn(s *capnp.Segment) (TagCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return TagCapn{st}, err
}

func ReadRootTagCapn(msg *capnp.Message) (TagCapn, error) {
	root, err := msg.RootPtr()
	return TagCapn{root.Struct()}, err
}

func (s TagCapn) String() string {
	str, _ := text.Marshal(0x97c7370c0d585a33, s.Struct)
	return str
}

func (s TagCapn) Order() float32 {
	return math.Float32frombits(s.Struct.Uint32(0))
}

func (s TagCapn) SetOrder(v float32) {
	s.Struct.SetUint32(0, math.Float32bits(v))
}

// TagCapn_List is a list of TagCapn.
type TagCapn_List struct{ capnp.List }

// NewTagCapn creates a new list of TagCapn.
func NewTagCapn_List(s *capnp.Segment, sz int32) (TagCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return TagCapn_List{l}, err
}

func (s TagCapn_List) At(i int) TagCapn { return TagCapn{s.List.Struct(i)} }

func (s TagCapn_List) Set(i int, v TagCapn) error { return s.List.SetStruct(i, v.Struct) }

func (s TagCapn_List) String() string {
	str, _ := text.MarshalList(0x97c7370c0d585a33, s.List)
	return str
}

// TagCapn_Promise is a wrapper for a TagCapn promised by a client call.
type TagCapn_Promise struct{ *capnp.Pipeline }

func (p TagCapn_Promise) Struct() (TagCapn, error) {
	s, err := p.Pipeline.Struct()
	return TagCapn{s}, err
}

type UnsignedDeviceInfoCapn struct{ capnp.Struct }

// UnsignedDeviceInfoCapn_TypeID is the unique identifier for the type UnsignedDeviceInfoCapn.
const UnsignedDeviceInfoCapn_TypeID = 0xfe0f2919237fc7f5

func NewUnsignedDeviceInfoCapn(s *capnp.Segment) (UnsignedDeviceInfoCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return UnsignedDeviceInfoCapn{st}, err
}

func NewRootUnsignedDeviceInfoCapn(s *capnp.Segment) (UnsignedDeviceInfoCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return UnsignedDeviceInfoCapn{st}, err
}

func ReadRootUnsignedDeviceInfoCapn(msg *capnp.Message) (UnsignedDeviceInfoCapn, error) {
	root, err := msg.RootPtr()
	return UnsignedDeviceInfoCapn{root.Struct()}, err
}

func (s UnsignedDeviceInfoCapn) String() string {
	str, _ := text.Marshal(0xfe0f2919237fc7f5, s.Struct)
	return str
}

func (s UnsignedDeviceInfoCapn) DeviceDisplayName() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s UnsignedDeviceInfoCapn) HasDeviceDisplayName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s UnsignedDeviceInfoCapn) DeviceDisplayNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s UnsignedDeviceInfoCapn) SetDeviceDisplayName(v string) error {
	return s.Struct.SetText(0, v)
}

// UnsignedDeviceInfoCapn_List is a list of UnsignedDeviceInfoCapn.
type UnsignedDeviceInfoCapn_List struct{ capnp.List }

// NewUnsignedDeviceInfoCapn creates a new list of UnsignedDeviceInfoCapn.
func NewUnsignedDeviceInfoCapn_List(s *capnp.Segment, sz int32) (UnsignedDeviceInfoCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return UnsignedDeviceInfoCapn_List{l}, err
}

func (s UnsignedDeviceInfoCapn_List) At(i int) UnsignedDeviceInfoCapn {
	return UnsignedDeviceInfoCapn{s.List.Struct(i)}
}

func (s UnsignedDeviceInfoCapn_List) Set(i int, v UnsignedDeviceInfoCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s UnsignedDeviceInfoCapn_List) String() string {
	str, _ := text.MarshalList(0xfe0f2919237fc7f5, s.List)
	return str
}

// UnsignedDeviceInfoCapn_Promise is a wrapper for a UnsignedDeviceInfoCapn promised by a client call.
type UnsignedDeviceInfoCapn_Promise struct{ *capnp.Pipeline }

func (p UnsignedDeviceInfoCapn_Promise) Struct() (UnsignedDeviceInfoCapn, error) {
	s, err := p.Pipeline.Struct()
	return UnsignedDeviceInfoCapn{s}, err
}

type GetDevicesByIDResponseCapn struct{ capnp.Struct }

// GetDevicesByIDResponseCapn_TypeID is the unique identifier for the type GetDevicesByIDResponseCapn.
const GetDevicesByIDResponseCapn_TypeID = 0xbf1d23c7af967ed0

func NewGetDevicesByIDResponseCapn(s *capnp.Segment) (GetDevicesByIDResponseCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return GetDevicesByIDResponseCapn{st}, err
}

func NewRootGetDevicesByIDResponseCapn(s *capnp.Segment) (GetDevicesByIDResponseCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return GetDevicesByIDResponseCapn{st}, err
}

func ReadRootGetDevicesByIDResponseCapn(msg *capnp.Message) (GetDevicesByIDResponseCapn, error) {
	root, err := msg.RootPtr()
	return GetDevicesByIDResponseCapn{root.Struct()}, err
}

func (s GetDevicesByIDResponseCapn) String() string {
	str, _ := text.Marshal(0xbf1d23c7af967ed0, s.Struct)
	return str
}

func (s GetDevicesByIDResponseCapn) DeviceID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GetDevicesByIDResponseCapn) HasDeviceID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetDevicesByIDResponseCapn) DeviceIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GetDevicesByIDResponseCapn) SetDeviceID(v string) error {
	return s.Struct.SetText(0, v)
}

func (s GetDevicesByIDResponseCapn) DisplayName() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s GetDevicesByIDResponseCapn) HasDisplayName() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s GetDevicesByIDResponseCapn) DisplayNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s GetDevicesByIDResponseCapn) SetDisplayName(v string) error {
	return s.Struct.SetText(1, v)
}

func (s GetDevicesByIDResponseCapn) LastSeenIP() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s GetDevicesByIDResponseCapn) HasLastSeenIP() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s GetDevicesByIDResponseCapn) LastSeenIPBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s GetDevicesByIDResponseCapn) SetLastSeenIP(v string) error {
	return s.Struct.SetText(2, v)
}

func (s GetDevicesByIDResponseCapn) LastSeenTS() int64 {
	return int64(s.Struct.Uint64(0))
}

func (s GetDevicesByIDResponseCapn) SetLastSeenTS(v int64) {
	s.Struct.SetUint64(0, uint64(v))
}

// GetDevicesByIDResponseCapn_List is a list of GetDevicesByIDResponseCapn.
type GetDevicesByIDResponseCapn_List struct{ capnp.List }

// NewGetDevicesByIDResponseCapn creates a new list of GetDevicesByIDResponseCapn.
func NewGetDevicesByIDResponseCapn_List(s *capnp.Segment, sz int32) (GetDevicesByIDResponseCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3}, sz)
	return GetDevicesByIDResponseCapn_List{l}, err
}

func (s GetDevicesByIDResponseCapn_List) At(i int) GetDevicesByIDResponseCapn {
	return GetDevicesByIDResponseCapn{s.List.Struct(i)}
}

func (s GetDevicesByIDResponseCapn_List) Set(i int, v GetDevicesByIDResponseCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetDevicesByIDResponseCapn_List) String() string {
	str, _ := text.MarshalList(0xbf1d23c7af967ed0, s.List)
	return str
}

// GetDevicesByIDResponseCapn_Promise is a wrapper for a GetDevicesByIDResponseCapn promised by a client call.
type GetDevicesByIDResponseCapn_Promise struct{ *capnp.Pipeline }

func (p GetDevicesByIDResponseCapn_Promise) Struct() (GetDevicesByIDResponseCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetDevicesByIDResponseCapn{s}, err
}

type GetMediaPreviewURLResponseCapn struct{ capnp.Struct }

// GetMediaPreviewURLResponseCapn_TypeID is the unique identifier for the type GetMediaPreviewURLResponseCapn.
const GetMediaPreviewURLResponseCapn_TypeID = 0x9f5f6c6fca7ffb80

func NewGetMediaPreviewURLResponseCapn(s *capnp.Segment) (GetMediaPreviewURLResponseCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return GetMediaPreviewURLResponseCapn{st}, err
}

func NewRootGetMediaPreviewURLResponseCapn(s *capnp.Segment) (GetMediaPreviewURLResponseCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return GetMediaPreviewURLResponseCapn{st}, err
}

func ReadRootGetMediaPreviewURLResponseCapn(msg *capnp.Message) (GetMediaPreviewURLResponseCapn, error) {
	root, err := msg.RootPtr()
	return GetMediaPreviewURLResponseCapn{root.Struct()}, err
}

func (s GetMediaPreviewURLResponseCapn) String() string {
	str, _ := text.Marshal(0x9f5f6c6fca7ffb80, s.Struct)
	return str
}

func (s GetMediaPreviewURLResponseCapn) Size() int64 {
	return int64(s.Struct.Uint64(0))
}

func (s GetMediaPreviewURLResponseCapn) SetSize(v int64) {
	s.Struct.SetUint64(0, uint64(v))
}

func (s GetMediaPreviewURLResponseCapn) Image() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GetMediaPreviewURLResponseCapn) HasImage() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetMediaPreviewURLResponseCapn) ImageBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GetMediaPreviewURLResponseCapn) SetImage(v string) error {
	return s.Struct.SetText(0, v)
}

// GetMediaPreviewURLResponseCapn_List is a list of GetMediaPreviewURLResponseCapn.
type GetMediaPreviewURLResponseCapn_List struct{ capnp.List }

// NewGetMediaPreviewURLResponseCapn creates a new list of GetMediaPreviewURLResponseCapn.
func NewGetMediaPreviewURLResponseCapn_List(s *capnp.Segment, sz int32) (GetMediaPreviewURLResponseCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return GetMediaPreviewURLResponseCapn_List{l}, err
}

func (s GetMediaPreviewURLResponseCapn_List) At(i int) GetMediaPreviewURLResponseCapn {
	return GetMediaPreviewURLResponseCapn{s.List.Struct(i)}
}

func (s GetMediaPreviewURLResponseCapn_List) Set(i int, v GetMediaPreviewURLResponseCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetMediaPreviewURLResponseCapn_List) String() string {
	str, _ := text.MarshalList(0x9f5f6c6fca7ffb80, s.List)
	return str
}

// GetMediaPreviewURLResponseCapn_Promise is a wrapper for a GetMediaPreviewURLResponseCapn promised by a client call.
type GetMediaPreviewURLResponseCapn_Promise struct{ *capnp.Pipeline }

func (p GetMediaPreviewURLResponseCapn_Promise) Struct() (GetMediaPreviewURLResponseCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetMediaPreviewURLResponseCapn{s}, err
}

const schema_d8e21d1e4f76a364 = "x\xda\xd4Z{t\x14U\x9a\xbf\xb7nB'\xa1C" +
	"\xd2\xa9\xb0\x86\xf0H\xb6C\x804\x84@\xd8\xa0\xb4\xb2" +
	"\x81\x10\x90 \x8fT\x1e\xbb\x18E\xa9\xa4o\x92:t" +
	"W5U\xd5\x81V\xd9\x00\x07v\xf5\x9cE\x1e\xae\xba" +
	"\x08\x1c\x87\x01\xe6\xe09\xc3`f\x86\x19u\xc6\x17\x1e" +
	"a\x1c_\xe8\x0c\x07\x19eF\x1dQDQQ\x18\x01" +
	"\x89=\xe7\xab\xee\xae\xaaT*\x0f\x0f\xdd\x8e\xf3_\xe7" +
	"\xf6/\xb7\xbf\xc7\xef{VM\xf90s\x1635\xf5" +
	"\xf3\x1c\x84\xb8wR\x87D\x8e\xdcq`\xf7\xde\xd2\xff" +
	"\xbe\x17q\xf31\x8e\xf8\xf6t,\x193\xfa\xfd\xb7P" +
	"*\xe3@h\xda\xb2t/a7\xa5;\x10b\xefK" +
	"?\x88pd\xc1\x87\xaf\xcd=x\xe7\xe6-\xc85\xdf" +
	"\x0c\xc6\x00\xfe\xd7\x8cf\xc26f\x00\x98\xcb\xa8D8" +
	"\"\xbc\xbcz\xe9\xaeP\x97\x15\xac\xdd\xbc.#\x9f\xb0" +
	"]\x1a\xf8@\xc6*\x84#\xe7S\xa6\xd4\xbbnys" +
	"\xab\x05\x9c\x02`\xd7\xd0\xa7\x18v\xc6P\x00W\x0c\xfd" +
	"\x08\xe1\x08\x99\xfb\x8b\xeb\x0b\x9ej\x7f\xc0N\x0c\x973" +
	"\x87\xb0\xb3\x9d\x00\x9e\xe9\x041\xa65-\xcdt^\x7f" +
	"\xf4a\x8b\x86\xda\xcd\xbcs=\xc3n\xd4\xc0\xeb4\xf0" +
	"K\x8e\xbfJ\xcb>\xb8~\xbb\xd5\x1c\x04\xd0\xbb\xe1\xea" +
	"74\xf4\xabN\x90\xe3\xc8\xf1-\x87\xd6\xfc\xe9n\x0d" +
	"M\xac\xe8'3=\x84\xfd8\x13>\x9e\xce\xfcO\x8c" +
	"p\xe4\xec\xc5\xeac7lkx\xc4\"\xb6\x86\x9e\x91" +
	"UNX!\x0b\xee\xa6Y`\xea\x1d\x1e\xf9\xb6\x1d\x91" +
	"\x07\x1e\x81\xbb\x19\xab\xf9\xba\xb3<\x84-\xcd\x06tI" +
	"6H\xf2\xe5\xdb\xab\x1bv<:{\x87\xdd\xd5\xdd\xd9" +
	"n\xc2\x96\xba4\xb0\x0b\xae\xde\xfc\xd0\x91\x8a\xe3g\xa6" +
	"\xec\xb2U\xf2%W\x13a\xbb5\xf4e\x17\\-\xad" +
	"\xbc\xadj\xc9\xca\xc3\xbb,W\xa7\x01\xf8\xd5\x1c7a" +
	"\xbbs\xe0\xe3\xe5\x9c\xa3\xa0\xe3\xdao:\x7f/\xf9\xef" +
	"|\xd4z\xb7\xe6\x9b\xf7r\xbd\x84u\x0d\x87\xbb3\x87" +
	"\x83\xd7?\xdf9%\xeb\x89\xb6\xf9\xbb\xadh\xedra" +
	"x\x0ea\xb7\x03z\xda\x83\xc3#p\xf9\xb0\x8d\xcbn" +
	"~\xe2\xea\x8c\x1f\xdb1j\xdfu9\x84=~\x1d\xdc" +
	"\xfd\xc6upw\x1a\xff\x8a\xfb\xb2\xf3\xd2>;\xf0\xcc" +
	"<7a\x03y\x00\x16\xf2\x00\xdc>\xef\xf8\xc3\xc5\xcf" +
	"}\xf5\x13;\xfb\xbd\x98WE\xd8\x8b\x1a\xf8|\xdeA" +
	"\x84??\xf13\xe9\xf0\xa9\xb5\xfbm\x98\xfa\xd8\x887" +
	"\x19\xf6\xf8\x08M\x88\x11`\xbc\x94\xe5\xa7v\xcd\xec~" +
	"\xf01\xbb{\xf7\xe57\x11\xf6d>\x80\x8f\xe7\x83_" +
	"f\xfc\xbb\xb2>\xf7\xfeI\x07\xed$\x0e\x8c\xcc!\xec" +
	"\xae\x91\x00\xde>\x12$~f\xf7nvg\xda\xfaC" +
	"\xb6\xfc\xb8<\xd2M\xd8\x92Q\x80.\x1e\x05r\xb0/" +
	"\xfc\xfc\xfd\xd3\x8e\xe7\x7fe\x17^\xa9\xa3\xcb\x09[1" +
	"\x1a\xc0SG\x03\xf8\xed\x0d9]s\x7f\xf3\xf23v" +
	"\xe1\x95:&\x9f\xb0\x15c4\xf0\x18\x88\x98c\xff\xf5" +
	"\xd0\xc1\xa3E\xa3\x9f\xb5%\x13\x07\xe8u\x1az\xcd\x18" +
	"\xb8\xba)\xeb\x0b\xf9\x9b%\x91\x17\xecT\xe4\x0b\xf2\x09" +
	"\xbb\xb5\x00\xc0\x9b\x0a@\xc5\xc3\xf4\xf0G\x0f\x1f}\xfa" +
	"\x88\x9d\x1c\xe9\x85^\xc2\xce(\xd4rB!\xc8\xb1m" +
	"\xcc\xff\x9c\xd8\xf4n\xd5+v4m,|\x84a\xd7" +
	"\x00xZ\xb8P\xa3\xa9\\{\xf7\xe6\x03cN\xben" +
	"\xe7\x97E\xee|\xc2\xaeq\xc3\xd5a7\xf8eO\xe1" +
	"\xa5oC\xf3\xf7\x1f\xb3\xe5\xf4\xf0\xa2r\xc2\xce-\x02" +
	"\xf4\xec\"\x90z\xcaY\xee\xcc\xcb{N\xfe\xc1N\xea" +
	"]EW\x18\xf6%\x0d\xfcb\x11H\x1d\xae\xdd\xbf\xe6" +
	"\xc4d\xc7\x09;\xbf\\,j\"l\xc9X\xcd\x89c" +
	"\xc1x\x87F\xde\xaa8\xf7\xdfx\xd2\xcex\xe9\xc59" +
	"\x84\x9dQ\xac\xd9\xa3\x18\xc4\xb8\xe9\x83;>\xfbt\xfc" +
	"\xd7'\xed\xc4\xd8Z|\x85a\x9f\xd6\xc0O\x16\x83\x18" +
	"\x8b\xbb\x9e\xde<\xec\xd8\x9f\xdf\xb53\xc7\xc7\xc5M\x84" +
	"\x1d=\x0e\xc0#\xc6\x819*\x8e,\xf8\x17\xc7g7" +
	"\x9e\xb5\x93\xb9k\x9c\x97\xb0\xefi\xe0S\xe3@\xe6\x8a" +
	"OR\x9fO\xdb\xbb\xf1\xac\xdd\xcdO\x8e\xcf'\xec\xc7" +
	"\xe3\x01|z<\xdc\xdc\xb5`T\xeb\xbcK\x15\xe7l" +
	"+\xc6\x84\x1c\xc2vM\xd0*\xc6\x04P\xf0\xfe\x142" +
	"\xfd\x96\xae\xf7?\xb3-\x02%n\xc2\xce.\xd1\x8a@" +
	"\x09(\x98/\xa6\xff\xc7\xf6O\xe8\x97vb\xf0\x00\xde" +
	"\xaa\x817\x95\x80\x18\xaf\xdd8?2\xe4\xb9\xe9\x17\xec" +
	"\x14,\xf6\xc8\x84\xbd\xd5\x03\xe0F\x0f(\xb8~\xdeC" +
	"C7\xee\xf4]\xb0+/\x15\x13\x9b\x09+L\xd4\x92" +
	"\xfaD\x10\xc3un\xcb\x9e\xfb+\xee\xf9\xda\xb6\xdan" +
	"\x9c\xe8&\xec!\x0d\xdd5\x11\xe4h\xd8\xb5\xf9\xcd\xe9" +
	"\xd33\xaeX\xd1\xda\xdd5\x93\xdc\x84\x0dO\x82\x8f\xa1" +
	"I\x05\xc0\xe9+\xee\xe5O\xbd\xfa\xb7\x13W\xedt\xdc" +
	"X\x0aw\x97jw\x97\xc2\xdd\xb3\x96N\xfd]\xf6\xed" +
	"\x1d\xddv\xe0\x9a\xc9p\xf5d\x00\x87&\x03\xf8\xe2\xd1" +
	"\xce\xa2\x11%Y\xdf\xda\x99:\xb3\xec\x0a\xc3\xce(\xd3" +
	"\x88WV\x89n\x8d(rKY\x9b\xa0N\x1e\xda*" +
	"\x88R\x1b\xa5+\x94\xc9-\xfePs\x99\xb2\"$\xae" +
	"X%\xc9+\x94\xb2\xa0?\xd4&\x88JY\x80*\x0a" +
	"\xdfF\xcb\xe8j\x95\xca\"\xef/\x0bH\xbe\x90\x9f*" +
	"\x93[\xf8\xa0\xe8\xbd\x99\xaau\x92\x14\x98\xdbAEu" +
	"\x8e$\xaat\xb5ZGW\x86h\xa5\xa2\xce\xe1\x83b" +
	"-\xc6\x9c\x93\xa4 \x94\x82\x11r\xcd\xf5\"\xc4\xcd\"" +
	"\x98[\xc8`\x17\xc6\xb9\x18\x0ek\xaa\x10\xe2\xaa\x09\xe6" +
	"j\x19\x8c\x99\\\xcc \xe4ZT\x8e\x107\x9f`\xae" +
	"\x81\xc1\x95\xb2$\x05j\xaa\xb1\x131\xd8\x89p'\x85" +
	"\x9f2\xfe.\xf0\x0b\x01A\xc5\xa9\x88\xc1\xa9\x08\xeb\x8a" +
	"9\x13\xa0XmHi\x97\xe1dv\x8b*H\xa2R" +
	"\x15\xae\xa9\xae\xa3JP\x12\x15:\xc7\x11\xd3.E\xd7" +
	".\x13\x14I#\x98\x1b\xcb\xe0N>\xfa/x\x18\xc2" +
	"\xb5\x04k\xc2\x0e3\x89w\xcdv\xaf\x95\x14u\x11\xf5" +
	"\x09|c\xd0/\xf1>\xcd\xe6`r\x12\x95*M\x97" +
	"\xaad\x01B\xdc\x04\x82\xb9\x7f3\xd9|j3B\xdc" +
	"\x14\x82\xb9\x9b\x18\x1ci\x15\xfct1\x1f\xa0\x08\xa1\xb8" +
	"Q#-\xe0JQm@\x8ep\x90\xea\xa7q\xe9\xd3" +
	"\xafY\xfa\x90\xd2N\xe5j\xbeR\xe5\xe3,\xc9\xd6%" +
	"\xe6\xdd\x08q\xb7\x13\xcc\xb5\x9b$\xa6@\x9d\xe5\x04s" +
	"~\x06\xbb\x98\x18M\x04\xd0\xad\x9d`Ne\xb0\x8b\x90" +
	"\\L\x10r\xad\x04\xdd\x82\x04s\xf70\xd8\x11\xaa[" +
	"\x18\x97\xbe\xb2U\x92\x03\xbc\xaa+\x13\x0c)\xed\x0d\xe1" +
	"`\x0f\xb5\xe1lN;/\"\x87H\xfd\xbd\xd4ND" +
	"\xb0T\xd3\x0e\xa1\x85\xc6\xa8\x14\xf3Y\x10[\x99\x04z" +
	"9\x09\xe6\xf2\x18\x1c\xf1i\xffQ\xe33\xcb\x990G" +
	"4\xf0m\xe0\x00d\xf9\xfd\xf2\x18\x93s\x19\\ \xc9" +
	">*\xe3\x0c\xc4\xe0\x8c\x04\xdb\xa2!$\x8b\xf5T\xee" +
	"\xa0\xb2\x1eUq[\x98\xd8\xb0\xc0\xe4\xf88\x1bz8" +
	">\xce\x86\x95\x1e\x848?\xc1\xdc\xbd\x0c\xc612l" +
	"\x04.\xad%\x98\xfb_\x06GB\x0a\x95\xadD\x0f\xf2" +
	"\x8a\xb2J\x92\xcd\xd6\xcd\x0a\xc9\x825p\x1dj\xc3\xc2" +
	"^9&\x116\xd0b\xb8\xa1=\x14h\x16y\xc1\x1f" +
	"\xa3DV<(\xf2t3loB\x88\xfb\x7f\x82\xb9" +
	"\xbd&3\xec\x86\x8c\xb3\x93`n\xbf\x91:\xf7\x81\xef" +
	"~D0\xf7S\x88\x09\x1c5\xc3c\x10={\x09\xe6" +
	"\x1eg\xb0+\x85\xc9\xc5)\x08\xb9\x0e\xc0\xe1~\x82\xb9" +
	"_2\xd8\x95\xca\xe4\xe2T\x84\\]\x10=\x8f\x13\xcc" +
	"\xfd\x96\xc1\x11Es\xceb\x1e\x91\x80\x9e\x04:\x03 " +
	"\xb1)\xff\xae\x12|j{\xdc6\x95\xedThk\xd7" +
	"\xd3qe\x80\xaa\xed\x92O\xb7\x1c\xef\xf7K\xab\xeah" +
	"\x009$\x95&>\xbejCj\xa3B\xe5\xd9--" +
	"RHT\xaby\x95\x8f\x1a\xb4`\xd0\xb5\xc8c\xd4\"" +
	"\x9dW\x8b\xaaL\xc5\x088T\xe3\xd3\xa9\xa2\x9a\xd2c" +
	"g,i\xe2L\xc4\xe0\xcc\x04\xeb\x05E\x16tk\x08" +
	"\x07\x05\xb1\xcd\xca\x13S\xb8x\x07H\x9eq\x9e\x08p" +
	"\xe6#\x98\x0b\x9ax\x12\xa82\xe2*\xaa\xaa\xeegK" +
	"\x19\xaeT5A0F\x0c\xc6\x08w\xaaB\x80.\x09" +
	"\xa9\xc9\x8b\x91ji\x95h\xaet\x8e\xde\x1em29" +
	"/\xae\xba\xd9y\xbaG9 y-\xc1\xdc\xed\x83$" +
	"\xf9\x00\xc4u&\xc0\xc1z\xb31W\xe4\x9b\xfd\xd4\xd7" +
	"\xa3B\x90^n.\xb7s\xb3\xc7\xaeF\x9a\xfc\x1c\xcf" +
	"\x8af7\x17(-\x92\xc1\xe1\xac\x15\x82\xe83\\\x1e" +
	"\xf2Ss\xe7\x15\x95,\xee\xf3\x84\xf2[W\xdf\xacw" +
	"\xdc\xc7\x85\xba\xdeo\x80\xe4\xaf\x10\xcc\x9d1\xe9}\x1a" +
	"\x1c\xff\x01\xc1u\xd8\xa4w7 /\x11\\\x9f\x82\x8d" +
	"\xe6\x80\xc5\x18\x0cw\x95\xe0\xfa48NI\xd1R!" +
	"\x9b\x8a=\x08\xd5a\x82\xeb\x9dp\x9c\x9a\xaa%C6" +
	"\x1d{\x11\xaaO\x81\xf3l8\x1f2$\x17\x0fA\x88" +
	"\xcd\xd4\xce\xd3\xe0<\x17\xce\x1d\x8e\\h\xb3Y\x17\xdc" +
	"^\xef\x84\xf3<\xdcw\x13\xd8\"\x89>A\x15$D" +
	"\x8c\xef\xb2\xe3\x0b\x0b\x84\xe1\xa83\xc8\xab`)=\xcb" +
	"\x0e\xdaK\x95\xcd\xb4U\x92uh\x01\xdf\xaaR9)" +
	"\xad\x8c\x16\x96\xb52\xed\x10\xe8\xaa\xc6\xba\x85\xd1\x1a^" +
	"\xa9\x15qk\x0f\x0a\xc4\x1cK07\x85\xc1q\xa7\x95" +
	"\x96\x1b}i\x96\"\xdcE\xe3\xa9\xa3@\x08\xf0m\xc9" +
	"(\x0e\x92\xa2\xd6G\x9bz*+\xd6\xe6k\xac.\xec" +
	"9 \xce\x19\x82\xb9\x0b&\x8a\x9d\x07\x0d>%\x98\xbb" +
	"d\xa2\xd8EP\xe1\x0b\x82\xb9\xab\xa6\xf6\xf3\xf2]f" +
	"\xde\xc5\x09\x86\xf1\xb6\x1eL\x8a3,\x137\x99\x19\xa3" +
	"3l8\x10\xb2>\x1b\xceG\x99\x196B;\xcf\x85" +
	"\xf3B\xcc`\x9c\x96\x8b\xd3\x10bGk\x84\xcc\x83\xe3" +
	"\xb1@<\xe8cW\xd0\xb0-_\x0a\xf8`\xd0\x9c\xd9" +
	"\x82\xc1jA\x09\xfaQ%\x1f\x86\xe6H\xff\"\xdaw" +
	"V\x0bX\x09\xfa\xb5\xaf\xb0\xf1]P\x96`jh@" +
	"\x84o\xd3\x7f\xc4\xcf\x8b\xc6\x1f>^\xe5q\xb6\xb11" +
	"F\x18g#\\\xc9\x07\x83TLF\x06\x91\x94xk" +
	"]M\xfdV\xe7\x9a\x98X\x15c\xe2,\x93sg\x82" +
	"so \x98\xabfpgTmk\xccf\xf1!\xb5" +
	"\x1dgG\xd2\xf6\xd5\xaa\x7f\xf9\xfa\xd9\xd7c\xfa$|" +
	"\x8eV\x1a\xf86\xdb\x14hR\xc1k\x04\x93\xaeB\xa9" +
	"\xd7\x88&K\x8f\x12-\xdc\xbe$\x14-I\xd1\xda\xad" +
	"Z\x99*Tl\xa1\x0b\x05E5,\x1f\x9d)\x06\xea" +
	"\xb7\xbc\xb1\x92\xbd\xdc\x14V\xcb\xc0\x1dK\xed\x9b\x10A" +
	"\xec\x10Tju\x8eO\x96\x82}M\xda\x19\x89\x98U" +
	"\xe7\xc42\xb6h7\xa0x\xecJ\xb1\xdb\xae\x14W\x99" +
	"[\xaex-\xce7jq\x8f8u\x98\x02\xd8Z\x0e" +
	"\x88\xa0$\xde\x9f}n<z6!&\x97\x96\x0f\xba" +
	"\x85\xf6\x1a]\xd8\xe0KY\xe2\xa2\xab\x9a\xfa\xfb\x19\xbc" +
	"\x07Z\x96\x80F\x93\x08\xe6n\xb0\x9f\xc6\xbf\x8f\xdc`" +
	"\x8e\xb3^+(\xfbaY\x9f\x95e\xf3\xac\x8cc\xb3" +
	"\xb276+\xaf\x06*\xce\x8aR1\xb4\x1e!N%" +
	"\x98[\xcb@\x8a\x8f\xfe\x9ayX\xf6\xf3\x8a\x0a\xcc@" +
	"\x05\x1dtv\x9b\xa4Oy\x8a\xca\xab!\x83\x91-!" +
	"Y\xa6\xa2\xea\xc7a\x00wP\x94\x94\x8e\x11\xd2e?" +
	"\x93\xdew\x18\x89\x8c\x00\xf5\xd8\x05h\xaf\x99\xc8\xd7\xc7" +
	"L\xf4=M\x83\xbd\xe8\xd03>Mk\x1c\xaf\xb1\xc6" +
	"\xb1$\xd2\xe4\xed\xb4\xe2\x8b\x1c\x12\x1c\xd4\"\xa7\xd9n" +
	"\x91\xd3dl\xf0\xe2#K\x18\xceV\x13\xccm0\x82" +
	"\xb0\xda\xccM\x9f\x10\xedS\x90\xc3\xdc\xc4\x00c\xeb)" +
	"\x15\x11\xa9\xa9\xb59l\xa8O\xca\xc0z\x0b\x0d+s" +
	"\xday\xb1\x8d*\xbd\x0c2\xd8^\xa4\x81\xc1\x9d-\xda" +
	"\x1d>k\xb9\xf3\xd3V5i\x8be\x0b\xbb\xf4\xa2n" +
	"Z\xe8\x7f7\x86%hY\xac\x1b\xd0f\x18|\xcbd" +
	"\xc0\xe3`\xc0c\x04s\xef\x98\x18u\x12*\xd5\x1f\x09" +
	"\xe6\xde5\x05\xf6)\xe8\xd4\xdf\x89\xcd\x92\xb1F\xddu" +
	"z\x9b\xa9\xfb\x8fu\xe9\xae\xf3M\xa6F?\xd6\xa2\xbb" +
	".\xc3\x0f]\x88M\x9d\xb1\xfe\xdc\xd5\xed1u\xff?" +
	"\xd86<\xb1}7$\xe2:\xdaB\x85\xa0\xdaO\xaf" +
	"`\xdb\xfe5\xdb-g\xc0\xab\x0b\x09\xe6\x96\xf6z\xf6" +
	"\x13\x91\xa3?\xd3\xf3\xb1\x84\xf5\x89Pr\x87\xdc\x9eU" +
	"\xc6\x14\xcdn\x9b\x197\xdfh'\xcc\x8f\"\x88\xaa\xf4" +
	"\xca;\x19\x89K\xc4\xbd&\xf1>\x9eQYF\x9d\xec" +
	"\xc8\xaf\xbf\xbai\xe8\x17\xe7\xd6_B\xd1%Dr\xf6" +
	"[\xfd\xb4\x96\xd7\xba\xdf\xea]\xb37|\xa7\x05W\xb2" +
	"\x1f\xdaYKC\x9fm\xa8\xc7n\xc43\x91)\xabU" +
	"\x96\x02\x06\x9b\xa4^\xd4\xcfH\xd00\xa0mJ\xfaf" +
	"\x93\xd7`SeP\x83\x1bd\xd2\xdf\xf5H4\x99\xcc" +
	"sJ?\xcb\xd2\x7f\xc69\xc5H\xa7\xbco\x11/\xaf" +
	"\x88/\xaaL\xc5w\xa0\xbe\xb6\xd9\x14\x0eq\xb5\x02u" +
	"\xe6n?\x16#!\x8f\xd1e\x0d*\xcfFZC~" +
	"\x7f\xb8\x8e\xf2\x08\x1b\x0f@d\xca\xfb\x92\xf6 \xa7\xaf" +
	"\x16w\xa0\xb2\xb2\xc0\xae\xacxMe\xc5\xd2\xaa\xd8\xcc" +
	":\xd6\x99&\x91\xaa]\xc3(j~no\xf7`\xd8" +
	"\xbe\x0bN\xde[\x07}\xbf\x0c\xd1dz\x84\x1d\x1b\x85" +
	"\x1a\x11\xa9\xabIJ\x95\xee\xf7\xe9\xc1? \x118\x13" +
	"\xfd\xd4\xab*</\xf6\x96F?sn\x93\xdd\x80U" +
	"e\x97\x0f\x16\xd8\xe5\x83f\xd3\xf4?\xa8\x87bv/" +
	"\x8e$\xf9AY\x9f\xb9\x7f\xe0\xb7rr\x99$>\xc1" +
	"\xba\x99\xaa\x8b%Uh\x15Zx\xad\x85\xe8\x87\x83\x1e" +
	"\x83\x83:\x05\xcb\xcd\x14\x8c\xadh\x16y\x0c\x0a\xf6\xa8" +
	"\xf7=\xdfx\xca\x92D\x7f8)i\xaa\xdf}t\xae" +
	"\xae\xd0\x1a\xaf1\x99\xeb\xb4[\x07\x87\xf7D\xdf\xc5\xd0" +
	"ig~\x19#>\xd7\xdf\x07\xaao \x98\xdb\x02C" +
	"\x18\x89\x0ea\x9b\xc0g\xf7\x12\xcc\xfd\xdf@\xdbl\x87" +
	"jL>=\xdfTI\xde\xfe\xa5\x9a\xfa\x7fh\xf9&" +
	"\x11:\xf5\xeb\xee\xc1\xee\xf1{\xe8\xe4\xee\xf3\xbd\x89~" +
	"\xbc\x98\xb8\x16\xb6QT\x846\x91\xfa\xa2\xe5\xb6F\xac" +
	"l\x95lZX\x98\xf7\xb3\x09\xe6F1\xfd\xce\xda\x7f" +
	"\x0f\x00\x00\xff\xff!\xb6!\xde"

func init() {
	schemas.Register(schema_d8e21d1e4f76a364,
		0x88862da4a1ad5ec6,
		0x908f5faf45cee64a,
		0x90b1759d5878cb69,
		0x91d24b11533004f1,
		0x9368ba1f37b34503,
		0x97c7370c0d585a33,
		0x9937e45d6fe307c9,
		0x997bda7db590d5c6,
		0x9a549238d044f5ea,
		0x9a93ff9b5b722a9b,
		0x9b419f9b5478dbf2,
		0x9d30e8d535c6968f,
		0x9dc2714f425b716f,
		0x9f5f6c6fca7ffb80,
		0xa14867b80f309cef,
		0xa239fcb8475d850e,
		0xa5f80cf922cc6108,
		0xa6f3c02597d54668,
		0xa880dd00c26faed7,
		0xa995fd3d9ddd6004,
		0xaf2c8e1482733e39,
		0xb582089c13a1a1be,
		0xb6c107e5e2b2c313,
		0xbecbbb45b11284db,
		0xbf1d23c7af967ed0,
		0xc3ff4ffb72f00f5a,
		0xc6bdc797e7c265c2,
		0xcc42e08dd7871e92,
		0xcfd91ead8f7b5072,
		0xd0a84875fef820a3,
		0xd3d9a3cbe851ea30,
		0xd7072ed77da85079,
		0xd93ba80c73591bb5,
		0xd9f727ecee5ee43c,
		0xe0ded00e8fbdb14e,
		0xea3bee07164ac635,
		0xea85a408c105eb35,
		0xed35f846661c4ab1,
		0xeee2b14b3603048e,
		0xf265eb9956096e1a,
		0xf436c006ff483bce,
		0xf4649c850b964682,
		0xf77c358ea390ed11,
		0xfa0a3636d28f9d54,
		0xfcd7f6cdba6022fa,
		0xfd765c10c8315840,
		0xfe0f2919237fc7f5)
}
