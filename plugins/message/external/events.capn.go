// Copyright (C) 2020 Finogeeks Co., Ltd
//
// This program is free software: you can redistribute it and/or  modify
// it under the terms of the GNU Affero General Public License, version 3,
// as published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// Code generated by capnpc-go. DO NOT EDIT.

package external

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type AccountDataCapn struct{ capnp.Struct }

// AccountDataCapn_TypeID is the unique identifier for the type AccountDataCapn.
const AccountDataCapn_TypeID = 0xec66b586e9b30696

func NewAccountDataCapn(s *capnp.Segment) (AccountDataCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return AccountDataCapn{st}, err
}

func NewRootAccountDataCapn(s *capnp.Segment) (AccountDataCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return AccountDataCapn{st}, err
}

func ReadRootAccountDataCapn(msg *capnp.Message) (AccountDataCapn, error) {
	root, err := msg.RootPtr()
	return AccountDataCapn{root.Struct()}, err
}

func (s AccountDataCapn) String() string {
	str, _ := text.Marshal(0xec66b586e9b30696, s.Struct)
	return str
}

func (s AccountDataCapn) Events() (EventCapn_List, error) {
	p, err := s.Struct.Ptr(0)
	return EventCapn_List{List: p.List()}, err
}

func (s AccountDataCapn) HasEvents() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s AccountDataCapn) SetEvents(v EventCapn_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewEvents sets the events field to a newly
// allocated EventCapn_List, preferring placement in s's segment.
func (s AccountDataCapn) NewEvents(n int32) (EventCapn_List, error) {
	l, err := NewEventCapn_List(s.Struct.Segment(), n)
	if err != nil {
		return EventCapn_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// AccountDataCapn_List is a list of AccountDataCapn.
type AccountDataCapn_List struct{ capnp.List }

// NewAccountDataCapn creates a new list of AccountDataCapn.
func NewAccountDataCapn_List(s *capnp.Segment, sz int32) (AccountDataCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return AccountDataCapn_List{l}, err
}

func (s AccountDataCapn_List) At(i int) AccountDataCapn { return AccountDataCapn{s.List.Struct(i)} }

func (s AccountDataCapn_List) Set(i int, v AccountDataCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s AccountDataCapn_List) String() string {
	str, _ := text.MarshalList(0xec66b586e9b30696, s.List)
	return str
}

// AccountDataCapn_Promise is a wrapper for a AccountDataCapn promised by a client call.
type AccountDataCapn_Promise struct{ *capnp.Pipeline }

func (p AccountDataCapn_Promise) Struct() (AccountDataCapn, error) {
	s, err := p.Pipeline.Struct()
	return AccountDataCapn{s}, err
}

type DeviceListsCapn struct{ capnp.Struct }

// DeviceListsCapn_TypeID is the unique identifier for the type DeviceListsCapn.
const DeviceListsCapn_TypeID = 0xd0826f72f7a0b6d8

func NewDeviceListsCapn(s *capnp.Segment) (DeviceListsCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return DeviceListsCapn{st}, err
}

func NewRootDeviceListsCapn(s *capnp.Segment) (DeviceListsCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return DeviceListsCapn{st}, err
}

func ReadRootDeviceListsCapn(msg *capnp.Message) (DeviceListsCapn, error) {
	root, err := msg.RootPtr()
	return DeviceListsCapn{root.Struct()}, err
}

func (s DeviceListsCapn) String() string {
	str, _ := text.Marshal(0xd0826f72f7a0b6d8, s.Struct)
	return str
}

func (s DeviceListsCapn) Changed() (capnp.TextList, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.TextList{List: p.List()}, err
}

func (s DeviceListsCapn) HasChanged() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s DeviceListsCapn) SetChanged(v capnp.TextList) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewChanged sets the changed field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s DeviceListsCapn) NewChanged(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

func (s DeviceListsCapn) Left() (capnp.TextList, error) {
	p, err := s.Struct.Ptr(1)
	return capnp.TextList{List: p.List()}, err
}

func (s DeviceListsCapn) HasLeft() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s DeviceListsCapn) SetLeft(v capnp.TextList) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewLeft sets the left field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s DeviceListsCapn) NewLeft(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

// DeviceListsCapn_List is a list of DeviceListsCapn.
type DeviceListsCapn_List struct{ capnp.List }

// NewDeviceListsCapn creates a new list of DeviceListsCapn.
func NewDeviceListsCapn_List(s *capnp.Segment, sz int32) (DeviceListsCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return DeviceListsCapn_List{l}, err
}

func (s DeviceListsCapn_List) At(i int) DeviceListsCapn { return DeviceListsCapn{s.List.Struct(i)} }

func (s DeviceListsCapn_List) Set(i int, v DeviceListsCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s DeviceListsCapn_List) String() string {
	str, _ := text.MarshalList(0xd0826f72f7a0b6d8, s.List)
	return str
}

// DeviceListsCapn_Promise is a wrapper for a DeviceListsCapn promised by a client call.
type DeviceListsCapn_Promise struct{ *capnp.Pipeline }

func (p DeviceListsCapn_Promise) Struct() (DeviceListsCapn, error) {
	s, err := p.Pipeline.Struct()
	return DeviceListsCapn{s}, err
}

type EphemeralCapn struct{ capnp.Struct }

// EphemeralCapn_TypeID is the unique identifier for the type EphemeralCapn.
const EphemeralCapn_TypeID = 0xf6c06e60c9f8ba9d

func NewEphemeralCapn(s *capnp.Segment) (EphemeralCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return EphemeralCapn{st}, err
}

func NewRootEphemeralCapn(s *capnp.Segment) (EphemeralCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return EphemeralCapn{st}, err
}

func ReadRootEphemeralCapn(msg *capnp.Message) (EphemeralCapn, error) {
	root, err := msg.RootPtr()
	return EphemeralCapn{root.Struct()}, err
}

func (s EphemeralCapn) String() string {
	str, _ := text.Marshal(0xf6c06e60c9f8ba9d, s.Struct)
	return str
}

func (s EphemeralCapn) Events() (EventCapn_List, error) {
	p, err := s.Struct.Ptr(0)
	return EventCapn_List{List: p.List()}, err
}

func (s EphemeralCapn) HasEvents() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s EphemeralCapn) SetEvents(v EventCapn_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewEvents sets the events field to a newly
// allocated EventCapn_List, preferring placement in s's segment.
func (s EphemeralCapn) NewEvents(n int32) (EventCapn_List, error) {
	l, err := NewEventCapn_List(s.Struct.Segment(), n)
	if err != nil {
		return EventCapn_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// EphemeralCapn_List is a list of EphemeralCapn.
type EphemeralCapn_List struct{ capnp.List }

// NewEphemeralCapn creates a new list of EphemeralCapn.
func NewEphemeralCapn_List(s *capnp.Segment, sz int32) (EphemeralCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return EphemeralCapn_List{l}, err
}

func (s EphemeralCapn_List) At(i int) EphemeralCapn { return EphemeralCapn{s.List.Struct(i)} }

func (s EphemeralCapn_List) Set(i int, v EphemeralCapn) error { return s.List.SetStruct(i, v.Struct) }

func (s EphemeralCapn_List) String() string {
	str, _ := text.MarshalList(0xf6c06e60c9f8ba9d, s.List)
	return str
}

// EphemeralCapn_Promise is a wrapper for a EphemeralCapn promised by a client call.
type EphemeralCapn_Promise struct{ *capnp.Pipeline }

func (p EphemeralCapn_Promise) Struct() (EphemeralCapn, error) {
	s, err := p.Pipeline.Struct()
	return EphemeralCapn{s}, err
}

type EventCapn struct{ capnp.Struct }

// EventCapn_TypeID is the unique identifier for the type EventCapn.
const EventCapn_TypeID = 0xfa27d6ab30deafd8

func NewEventCapn(s *capnp.Segment) (EventCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return EventCapn{st}, err
}

func NewRootEventCapn(s *capnp.Segment) (EventCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return EventCapn{st}, err
}

func ReadRootEventCapn(msg *capnp.Message) (EventCapn, error) {
	root, err := msg.RootPtr()
	return EventCapn{root.Struct()}, err
}

func (s EventCapn) String() string {
	str, _ := text.Marshal(0xfa27d6ab30deafd8, s.Struct)
	return str
}

func (s EventCapn) Content() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s EventCapn) HasContent() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s EventCapn) SetContent(v []byte) error {
	return s.Struct.SetData(0, v)
}

func (s EventCapn) Type() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s EventCapn) HasType() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s EventCapn) TypeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s EventCapn) SetType(v string) error {
	return s.Struct.SetText(1, v)
}

// EventCapn_List is a list of EventCapn.
type EventCapn_List struct{ capnp.List }

// NewEventCapn creates a new list of EventCapn.
func NewEventCapn_List(s *capnp.Segment, sz int32) (EventCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return EventCapn_List{l}, err
}

func (s EventCapn_List) At(i int) EventCapn { return EventCapn{s.List.Struct(i)} }

func (s EventCapn_List) Set(i int, v EventCapn) error { return s.List.SetStruct(i, v.Struct) }

func (s EventCapn_List) String() string {
	str, _ := text.MarshalList(0xfa27d6ab30deafd8, s.List)
	return str
}

// EventCapn_Promise is a wrapper for a EventCapn promised by a client call.
type EventCapn_Promise struct{ *capnp.Pipeline }

func (p EventCapn_Promise) Struct() (EventCapn, error) {
	s, err := p.Pipeline.Struct()
	return EventCapn{s}, err
}

type GetEventByIDRequestCapn struct{ capnp.Struct }

// GetEventByIDRequestCapn_TypeID is the unique identifier for the type GetEventByIDRequestCapn.
const GetEventByIDRequestCapn_TypeID = 0xdf6a3f4de866ea46

func NewGetEventByIDRequestCapn(s *capnp.Segment) (GetEventByIDRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetEventByIDRequestCapn{st}, err
}

func NewRootGetEventByIDRequestCapn(s *capnp.Segment) (GetEventByIDRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetEventByIDRequestCapn{st}, err
}

func ReadRootGetEventByIDRequestCapn(msg *capnp.Message) (GetEventByIDRequestCapn, error) {
	root, err := msg.RootPtr()
	return GetEventByIDRequestCapn{root.Struct()}, err
}

func (s GetEventByIDRequestCapn) String() string {
	str, _ := text.Marshal(0xdf6a3f4de866ea46, s.Struct)
	return str
}

func (s GetEventByIDRequestCapn) EventID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GetEventByIDRequestCapn) HasEventID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetEventByIDRequestCapn) EventIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GetEventByIDRequestCapn) SetEventID(v string) error {
	return s.Struct.SetText(0, v)
}

// GetEventByIDRequestCapn_List is a list of GetEventByIDRequestCapn.
type GetEventByIDRequestCapn_List struct{ capnp.List }

// NewGetEventByIDRequestCapn creates a new list of GetEventByIDRequestCapn.
func NewGetEventByIDRequestCapn_List(s *capnp.Segment, sz int32) (GetEventByIDRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return GetEventByIDRequestCapn_List{l}, err
}

func (s GetEventByIDRequestCapn_List) At(i int) GetEventByIDRequestCapn {
	return GetEventByIDRequestCapn{s.List.Struct(i)}
}

func (s GetEventByIDRequestCapn_List) Set(i int, v GetEventByIDRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetEventByIDRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xdf6a3f4de866ea46, s.List)
	return str
}

// GetEventByIDRequestCapn_Promise is a wrapper for a GetEventByIDRequestCapn promised by a client call.
type GetEventByIDRequestCapn_Promise struct{ *capnp.Pipeline }

func (p GetEventByIDRequestCapn_Promise) Struct() (GetEventByIDRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetEventByIDRequestCapn{s}, err
}

type GetInitialSyncRequestCapn struct{ capnp.Struct }

// GetInitialSyncRequestCapn_TypeID is the unique identifier for the type GetInitialSyncRequestCapn.
const GetInitialSyncRequestCapn_TypeID = 0xb20092cd70a1cc25

func NewGetInitialSyncRequestCapn(s *capnp.Segment) (GetInitialSyncRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 4})
	return GetInitialSyncRequestCapn{st}, err
}

func NewRootGetInitialSyncRequestCapn(s *capnp.Segment) (GetInitialSyncRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 4})
	return GetInitialSyncRequestCapn{st}, err
}

func ReadRootGetInitialSyncRequestCapn(msg *capnp.Message) (GetInitialSyncRequestCapn, error) {
	root, err := msg.RootPtr()
	return GetInitialSyncRequestCapn{root.Struct()}, err
}

func (s GetInitialSyncRequestCapn) String() string {
	str, _ := text.Marshal(0xb20092cd70a1cc25, s.Struct)
	return str
}

func (s GetInitialSyncRequestCapn) Limit() int64 {
	return int64(s.Struct.Uint64(0))
}

func (s GetInitialSyncRequestCapn) SetLimit(v int64) {
	s.Struct.SetUint64(0, uint64(v))
}

func (s GetInitialSyncRequestCapn) Archived() bool {
	return s.Struct.Bit(64)
}

func (s GetInitialSyncRequestCapn) SetArchived(v bool) {
	s.Struct.SetBit(64, v)
}

func (s GetInitialSyncRequestCapn) Timeout() int64 {
	return int64(s.Struct.Uint64(16))
}

func (s GetInitialSyncRequestCapn) SetTimeout(v int64) {
	s.Struct.SetUint64(16, uint64(v))
}

func (s GetInitialSyncRequestCapn) FullState() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GetInitialSyncRequestCapn) HasFullState() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetInitialSyncRequestCapn) FullStateBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GetInitialSyncRequestCapn) SetFullState(v string) error {
	return s.Struct.SetText(0, v)
}

func (s GetInitialSyncRequestCapn) SetPresence() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s GetInitialSyncRequestCapn) HasSetPresence() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s GetInitialSyncRequestCapn) SetPresenceBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s GetInitialSyncRequestCapn) SetSetPresence(v string) error {
	return s.Struct.SetText(1, v)
}

func (s GetInitialSyncRequestCapn) From() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s GetInitialSyncRequestCapn) HasFrom() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s GetInitialSyncRequestCapn) FromBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s GetInitialSyncRequestCapn) SetFrom(v string) error {
	return s.Struct.SetText(2, v)
}

func (s GetInitialSyncRequestCapn) Since() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s GetInitialSyncRequestCapn) HasSince() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s GetInitialSyncRequestCapn) SinceBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s GetInitialSyncRequestCapn) SetSince(v string) error {
	return s.Struct.SetText(3, v)
}

// GetInitialSyncRequestCapn_List is a list of GetInitialSyncRequestCapn.
type GetInitialSyncRequestCapn_List struct{ capnp.List }

// NewGetInitialSyncRequestCapn creates a new list of GetInitialSyncRequestCapn.
func NewGetInitialSyncRequestCapn_List(s *capnp.Segment, sz int32) (GetInitialSyncRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 24, PointerCount: 4}, sz)
	return GetInitialSyncRequestCapn_List{l}, err
}

func (s GetInitialSyncRequestCapn_List) At(i int) GetInitialSyncRequestCapn {
	return GetInitialSyncRequestCapn{s.List.Struct(i)}
}

func (s GetInitialSyncRequestCapn_List) Set(i int, v GetInitialSyncRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetInitialSyncRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xb20092cd70a1cc25, s.List)
	return str
}

// GetInitialSyncRequestCapn_Promise is a wrapper for a GetInitialSyncRequestCapn promised by a client call.
type GetInitialSyncRequestCapn_Promise struct{ *capnp.Pipeline }

func (p GetInitialSyncRequestCapn_Promise) Struct() (GetInitialSyncRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetInitialSyncRequestCapn{s}, err
}

type GetRoomEventByIDRequestCapn struct{ capnp.Struct }

// GetRoomEventByIDRequestCapn_TypeID is the unique identifier for the type GetRoomEventByIDRequestCapn.
const GetRoomEventByIDRequestCapn_TypeID = 0xfb8dbe4d0597d4d2

func NewGetRoomEventByIDRequestCapn(s *capnp.Segment) (GetRoomEventByIDRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return GetRoomEventByIDRequestCapn{st}, err
}

func NewRootGetRoomEventByIDRequestCapn(s *capnp.Segment) (GetRoomEventByIDRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return GetRoomEventByIDRequestCapn{st}, err
}

func ReadRootGetRoomEventByIDRequestCapn(msg *capnp.Message) (GetRoomEventByIDRequestCapn, error) {
	root, err := msg.RootPtr()
	return GetRoomEventByIDRequestCapn{root.Struct()}, err
}

func (s GetRoomEventByIDRequestCapn) String() string {
	str, _ := text.Marshal(0xfb8dbe4d0597d4d2, s.Struct)
	return str
}

func (s GetRoomEventByIDRequestCapn) RoomID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GetRoomEventByIDRequestCapn) HasRoomID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetRoomEventByIDRequestCapn) RoomIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GetRoomEventByIDRequestCapn) SetRoomID(v string) error {
	return s.Struct.SetText(0, v)
}

func (s GetRoomEventByIDRequestCapn) EventID() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s GetRoomEventByIDRequestCapn) HasEventID() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s GetRoomEventByIDRequestCapn) EventIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s GetRoomEventByIDRequestCapn) SetEventID(v string) error {
	return s.Struct.SetText(1, v)
}

// GetRoomEventByIDRequestCapn_List is a list of GetRoomEventByIDRequestCapn.
type GetRoomEventByIDRequestCapn_List struct{ capnp.List }

// NewGetRoomEventByIDRequestCapn creates a new list of GetRoomEventByIDRequestCapn.
func NewGetRoomEventByIDRequestCapn_List(s *capnp.Segment, sz int32) (GetRoomEventByIDRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return GetRoomEventByIDRequestCapn_List{l}, err
}

func (s GetRoomEventByIDRequestCapn_List) At(i int) GetRoomEventByIDRequestCapn {
	return GetRoomEventByIDRequestCapn{s.List.Struct(i)}
}

func (s GetRoomEventByIDRequestCapn_List) Set(i int, v GetRoomEventByIDRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetRoomEventByIDRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xfb8dbe4d0597d4d2, s.List)
	return str
}

// GetRoomEventByIDRequestCapn_Promise is a wrapper for a GetRoomEventByIDRequestCapn promised by a client call.
type GetRoomEventByIDRequestCapn_Promise struct{ *capnp.Pipeline }

func (p GetRoomEventByIDRequestCapn_Promise) Struct() (GetRoomEventByIDRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetRoomEventByIDRequestCapn{s}, err
}

type GetRoomInitialSyncRequestCapn struct{ capnp.Struct }

// GetRoomInitialSyncRequestCapn_TypeID is the unique identifier for the type GetRoomInitialSyncRequestCapn.
const GetRoomInitialSyncRequestCapn_TypeID = 0xdbacb3ecab06ab9c

func NewGetRoomInitialSyncRequestCapn(s *capnp.Segment) (GetRoomInitialSyncRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetRoomInitialSyncRequestCapn{st}, err
}

func NewRootGetRoomInitialSyncRequestCapn(s *capnp.Segment) (GetRoomInitialSyncRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetRoomInitialSyncRequestCapn{st}, err
}

func ReadRootGetRoomInitialSyncRequestCapn(msg *capnp.Message) (GetRoomInitialSyncRequestCapn, error) {
	root, err := msg.RootPtr()
	return GetRoomInitialSyncRequestCapn{root.Struct()}, err
}

func (s GetRoomInitialSyncRequestCapn) String() string {
	str, _ := text.Marshal(0xdbacb3ecab06ab9c, s.Struct)
	return str
}

func (s GetRoomInitialSyncRequestCapn) RoomID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GetRoomInitialSyncRequestCapn) HasRoomID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetRoomInitialSyncRequestCapn) RoomIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GetRoomInitialSyncRequestCapn) SetRoomID(v string) error {
	return s.Struct.SetText(0, v)
}

// GetRoomInitialSyncRequestCapn_List is a list of GetRoomInitialSyncRequestCapn.
type GetRoomInitialSyncRequestCapn_List struct{ capnp.List }

// NewGetRoomInitialSyncRequestCapn creates a new list of GetRoomInitialSyncRequestCapn.
func NewGetRoomInitialSyncRequestCapn_List(s *capnp.Segment, sz int32) (GetRoomInitialSyncRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return GetRoomInitialSyncRequestCapn_List{l}, err
}

func (s GetRoomInitialSyncRequestCapn_List) At(i int) GetRoomInitialSyncRequestCapn {
	return GetRoomInitialSyncRequestCapn{s.List.Struct(i)}
}

func (s GetRoomInitialSyncRequestCapn_List) Set(i int, v GetRoomInitialSyncRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetRoomInitialSyncRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xdbacb3ecab06ab9c, s.List)
	return str
}

// GetRoomInitialSyncRequestCapn_Promise is a wrapper for a GetRoomInitialSyncRequestCapn promised by a client call.
type GetRoomInitialSyncRequestCapn_Promise struct{ *capnp.Pipeline }

func (p GetRoomInitialSyncRequestCapn_Promise) Struct() (GetRoomInitialSyncRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetRoomInitialSyncRequestCapn{s}, err
}

type GetRoomJoinedMembersRequestCapn struct{ capnp.Struct }

// GetRoomJoinedMembersRequestCapn_TypeID is the unique identifier for the type GetRoomJoinedMembersRequestCapn.
const GetRoomJoinedMembersRequestCapn_TypeID = 0xbc4451c596bcc6f4

func NewGetRoomJoinedMembersRequestCapn(s *capnp.Segment) (GetRoomJoinedMembersRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetRoomJoinedMembersRequestCapn{st}, err
}

func NewRootGetRoomJoinedMembersRequestCapn(s *capnp.Segment) (GetRoomJoinedMembersRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetRoomJoinedMembersRequestCapn{st}, err
}

func ReadRootGetRoomJoinedMembersRequestCapn(msg *capnp.Message) (GetRoomJoinedMembersRequestCapn, error) {
	root, err := msg.RootPtr()
	return GetRoomJoinedMembersRequestCapn{root.Struct()}, err
}

func (s GetRoomJoinedMembersRequestCapn) String() string {
	str, _ := text.Marshal(0xbc4451c596bcc6f4, s.Struct)
	return str
}

func (s GetRoomJoinedMembersRequestCapn) RoomID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GetRoomJoinedMembersRequestCapn) HasRoomID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetRoomJoinedMembersRequestCapn) RoomIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GetRoomJoinedMembersRequestCapn) SetRoomID(v string) error {
	return s.Struct.SetText(0, v)
}

// GetRoomJoinedMembersRequestCapn_List is a list of GetRoomJoinedMembersRequestCapn.
type GetRoomJoinedMembersRequestCapn_List struct{ capnp.List }

// NewGetRoomJoinedMembersRequestCapn creates a new list of GetRoomJoinedMembersRequestCapn.
func NewGetRoomJoinedMembersRequestCapn_List(s *capnp.Segment, sz int32) (GetRoomJoinedMembersRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return GetRoomJoinedMembersRequestCapn_List{l}, err
}

func (s GetRoomJoinedMembersRequestCapn_List) At(i int) GetRoomJoinedMembersRequestCapn {
	return GetRoomJoinedMembersRequestCapn{s.List.Struct(i)}
}

func (s GetRoomJoinedMembersRequestCapn_List) Set(i int, v GetRoomJoinedMembersRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetRoomJoinedMembersRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xbc4451c596bcc6f4, s.List)
	return str
}

// GetRoomJoinedMembersRequestCapn_Promise is a wrapper for a GetRoomJoinedMembersRequestCapn promised by a client call.
type GetRoomJoinedMembersRequestCapn_Promise struct{ *capnp.Pipeline }

func (p GetRoomJoinedMembersRequestCapn_Promise) Struct() (GetRoomJoinedMembersRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetRoomJoinedMembersRequestCapn{s}, err
}

type GetRoomMembersRequestCapn struct{ capnp.Struct }

// GetRoomMembersRequestCapn_TypeID is the unique identifier for the type GetRoomMembersRequestCapn.
const GetRoomMembersRequestCapn_TypeID = 0xc49e0ab3045cd4b4

func NewGetRoomMembersRequestCapn(s *capnp.Segment) (GetRoomMembersRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetRoomMembersRequestCapn{st}, err
}

func NewRootGetRoomMembersRequestCapn(s *capnp.Segment) (GetRoomMembersRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetRoomMembersRequestCapn{st}, err
}

func ReadRootGetRoomMembersRequestCapn(msg *capnp.Message) (GetRoomMembersRequestCapn, error) {
	root, err := msg.RootPtr()
	return GetRoomMembersRequestCapn{root.Struct()}, err
}

func (s GetRoomMembersRequestCapn) String() string {
	str, _ := text.Marshal(0xc49e0ab3045cd4b4, s.Struct)
	return str
}

func (s GetRoomMembersRequestCapn) RoomID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GetRoomMembersRequestCapn) HasRoomID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetRoomMembersRequestCapn) RoomIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GetRoomMembersRequestCapn) SetRoomID(v string) error {
	return s.Struct.SetText(0, v)
}

// GetRoomMembersRequestCapn_List is a list of GetRoomMembersRequestCapn.
type GetRoomMembersRequestCapn_List struct{ capnp.List }

// NewGetRoomMembersRequestCapn creates a new list of GetRoomMembersRequestCapn.
func NewGetRoomMembersRequestCapn_List(s *capnp.Segment, sz int32) (GetRoomMembersRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return GetRoomMembersRequestCapn_List{l}, err
}

func (s GetRoomMembersRequestCapn_List) At(i int) GetRoomMembersRequestCapn {
	return GetRoomMembersRequestCapn{s.List.Struct(i)}
}

func (s GetRoomMembersRequestCapn_List) Set(i int, v GetRoomMembersRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetRoomMembersRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xc49e0ab3045cd4b4, s.List)
	return str
}

// GetRoomMembersRequestCapn_Promise is a wrapper for a GetRoomMembersRequestCapn promised by a client call.
type GetRoomMembersRequestCapn_Promise struct{ *capnp.Pipeline }

func (p GetRoomMembersRequestCapn_Promise) Struct() (GetRoomMembersRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetRoomMembersRequestCapn{s}, err
}

type GetRoomMessagesRequestCapn struct{ capnp.Struct }

// GetRoomMessagesRequestCapn_TypeID is the unique identifier for the type GetRoomMessagesRequestCapn.
const GetRoomMessagesRequestCapn_TypeID = 0xf5445595caf11a6b

func NewGetRoomMessagesRequestCapn(s *capnp.Segment) (GetRoomMessagesRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 5})
	return GetRoomMessagesRequestCapn{st}, err
}

func NewRootGetRoomMessagesRequestCapn(s *capnp.Segment) (GetRoomMessagesRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 5})
	return GetRoomMessagesRequestCapn{st}, err
}

func ReadRootGetRoomMessagesRequestCapn(msg *capnp.Message) (GetRoomMessagesRequestCapn, error) {
	root, err := msg.RootPtr()
	return GetRoomMessagesRequestCapn{root.Struct()}, err
}

func (s GetRoomMessagesRequestCapn) String() string {
	str, _ := text.Marshal(0xf5445595caf11a6b, s.Struct)
	return str
}

func (s GetRoomMessagesRequestCapn) RoomID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GetRoomMessagesRequestCapn) HasRoomID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetRoomMessagesRequestCapn) RoomIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GetRoomMessagesRequestCapn) SetRoomID(v string) error {
	return s.Struct.SetText(0, v)
}

func (s GetRoomMessagesRequestCapn) From() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s GetRoomMessagesRequestCapn) HasFrom() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s GetRoomMessagesRequestCapn) FromBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s GetRoomMessagesRequestCapn) SetFrom(v string) error {
	return s.Struct.SetText(1, v)
}

func (s GetRoomMessagesRequestCapn) Dir() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s GetRoomMessagesRequestCapn) HasDir() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s GetRoomMessagesRequestCapn) DirBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s GetRoomMessagesRequestCapn) SetDir(v string) error {
	return s.Struct.SetText(2, v)
}

func (s GetRoomMessagesRequestCapn) Limit() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s GetRoomMessagesRequestCapn) HasLimit() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s GetRoomMessagesRequestCapn) LimitBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s GetRoomMessagesRequestCapn) SetLimit(v string) error {
	return s.Struct.SetText(3, v)
}

func (s GetRoomMessagesRequestCapn) Filter() (string, error) {
	p, err := s.Struct.Ptr(4)
	return p.Text(), err
}

func (s GetRoomMessagesRequestCapn) HasFilter() bool {
	p, err := s.Struct.Ptr(4)
	return p.IsValid() || err != nil
}

func (s GetRoomMessagesRequestCapn) FilterBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(4)
	return p.TextBytes(), err
}

func (s GetRoomMessagesRequestCapn) SetFilter(v string) error {
	return s.Struct.SetText(4, v)
}

// GetRoomMessagesRequestCapn_List is a list of GetRoomMessagesRequestCapn.
type GetRoomMessagesRequestCapn_List struct{ capnp.List }

// NewGetRoomMessagesRequestCapn creates a new list of GetRoomMessagesRequestCapn.
func NewGetRoomMessagesRequestCapn_List(s *capnp.Segment, sz int32) (GetRoomMessagesRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 5}, sz)
	return GetRoomMessagesRequestCapn_List{l}, err
}

func (s GetRoomMessagesRequestCapn_List) At(i int) GetRoomMessagesRequestCapn {
	return GetRoomMessagesRequestCapn{s.List.Struct(i)}
}

func (s GetRoomMessagesRequestCapn_List) Set(i int, v GetRoomMessagesRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetRoomMessagesRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xf5445595caf11a6b, s.List)
	return str
}

// GetRoomMessagesRequestCapn_Promise is a wrapper for a GetRoomMessagesRequestCapn promised by a client call.
type GetRoomMessagesRequestCapn_Promise struct{ *capnp.Pipeline }

func (p GetRoomMessagesRequestCapn_Promise) Struct() (GetRoomMessagesRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetRoomMessagesRequestCapn{s}, err
}

type GetRoomMessagesResponseCapn struct{ capnp.Struct }

// GetRoomMessagesResponseCapn_TypeID is the unique identifier for the type GetRoomMessagesResponseCapn.
const GetRoomMessagesResponseCapn_TypeID = 0xde6caf190dd671a4

func NewGetRoomMessagesResponseCapn(s *capnp.Segment) (GetRoomMessagesResponseCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return GetRoomMessagesResponseCapn{st}, err
}

func NewRootGetRoomMessagesResponseCapn(s *capnp.Segment) (GetRoomMessagesResponseCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return GetRoomMessagesResponseCapn{st}, err
}

func ReadRootGetRoomMessagesResponseCapn(msg *capnp.Message) (GetRoomMessagesResponseCapn, error) {
	root, err := msg.RootPtr()
	return GetRoomMessagesResponseCapn{root.Struct()}, err
}

func (s GetRoomMessagesResponseCapn) String() string {
	str, _ := text.Marshal(0xde6caf190dd671a4, s.Struct)
	return str
}

func (s GetRoomMessagesResponseCapn) Start() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GetRoomMessagesResponseCapn) HasStart() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetRoomMessagesResponseCapn) StartBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GetRoomMessagesResponseCapn) SetStart(v string) error {
	return s.Struct.SetText(0, v)
}

func (s GetRoomMessagesResponseCapn) End() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s GetRoomMessagesResponseCapn) HasEnd() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s GetRoomMessagesResponseCapn) EndBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s GetRoomMessagesResponseCapn) SetEnd(v string) error {
	return s.Struct.SetText(1, v)
}

func (s GetRoomMessagesResponseCapn) Chunk() (RoomEventCapn_List, error) {
	p, err := s.Struct.Ptr(2)
	return RoomEventCapn_List{List: p.List()}, err
}

func (s GetRoomMessagesResponseCapn) HasChunk() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s GetRoomMessagesResponseCapn) SetChunk(v RoomEventCapn_List) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewChunk sets the chunk field to a newly
// allocated RoomEventCapn_List, preferring placement in s's segment.
func (s GetRoomMessagesResponseCapn) NewChunk(n int32) (RoomEventCapn_List, error) {
	l, err := NewRoomEventCapn_List(s.Struct.Segment(), n)
	if err != nil {
		return RoomEventCapn_List{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

// GetRoomMessagesResponseCapn_List is a list of GetRoomMessagesResponseCapn.
type GetRoomMessagesResponseCapn_List struct{ capnp.List }

// NewGetRoomMessagesResponseCapn creates a new list of GetRoomMessagesResponseCapn.
func NewGetRoomMessagesResponseCapn_List(s *capnp.Segment, sz int32) (GetRoomMessagesResponseCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return GetRoomMessagesResponseCapn_List{l}, err
}

func (s GetRoomMessagesResponseCapn_List) At(i int) GetRoomMessagesResponseCapn {
	return GetRoomMessagesResponseCapn{s.List.Struct(i)}
}

func (s GetRoomMessagesResponseCapn_List) Set(i int, v GetRoomMessagesResponseCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetRoomMessagesResponseCapn_List) String() string {
	str, _ := text.MarshalList(0xde6caf190dd671a4, s.List)
	return str
}

// GetRoomMessagesResponseCapn_Promise is a wrapper for a GetRoomMessagesResponseCapn promised by a client call.
type GetRoomMessagesResponseCapn_Promise struct{ *capnp.Pipeline }

func (p GetRoomMessagesResponseCapn_Promise) Struct() (GetRoomMessagesResponseCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetRoomMessagesResponseCapn{s}, err
}

type GetRoomStateByTypeAndStateKeyRequestCapn struct{ capnp.Struct }

// GetRoomStateByTypeAndStateKeyRequestCapn_TypeID is the unique identifier for the type GetRoomStateByTypeAndStateKeyRequestCapn.
const GetRoomStateByTypeAndStateKeyRequestCapn_TypeID = 0xe2ddb73031c5cfa8

func NewGetRoomStateByTypeAndStateKeyRequestCapn(s *capnp.Segment) (GetRoomStateByTypeAndStateKeyRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return GetRoomStateByTypeAndStateKeyRequestCapn{st}, err
}

func NewRootGetRoomStateByTypeAndStateKeyRequestCapn(s *capnp.Segment) (GetRoomStateByTypeAndStateKeyRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return GetRoomStateByTypeAndStateKeyRequestCapn{st}, err
}

func ReadRootGetRoomStateByTypeAndStateKeyRequestCapn(msg *capnp.Message) (GetRoomStateByTypeAndStateKeyRequestCapn, error) {
	root, err := msg.RootPtr()
	return GetRoomStateByTypeAndStateKeyRequestCapn{root.Struct()}, err
}

func (s GetRoomStateByTypeAndStateKeyRequestCapn) String() string {
	str, _ := text.Marshal(0xe2ddb73031c5cfa8, s.Struct)
	return str
}

func (s GetRoomStateByTypeAndStateKeyRequestCapn) RoomID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GetRoomStateByTypeAndStateKeyRequestCapn) HasRoomID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetRoomStateByTypeAndStateKeyRequestCapn) RoomIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GetRoomStateByTypeAndStateKeyRequestCapn) SetRoomID(v string) error {
	return s.Struct.SetText(0, v)
}

func (s GetRoomStateByTypeAndStateKeyRequestCapn) EventType() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s GetRoomStateByTypeAndStateKeyRequestCapn) HasEventType() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s GetRoomStateByTypeAndStateKeyRequestCapn) EventTypeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s GetRoomStateByTypeAndStateKeyRequestCapn) SetEventType(v string) error {
	return s.Struct.SetText(1, v)
}

func (s GetRoomStateByTypeAndStateKeyRequestCapn) StateKey() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s GetRoomStateByTypeAndStateKeyRequestCapn) HasStateKey() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s GetRoomStateByTypeAndStateKeyRequestCapn) StateKeyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s GetRoomStateByTypeAndStateKeyRequestCapn) SetStateKey(v string) error {
	return s.Struct.SetText(2, v)
}

// GetRoomStateByTypeAndStateKeyRequestCapn_List is a list of GetRoomStateByTypeAndStateKeyRequestCapn.
type GetRoomStateByTypeAndStateKeyRequestCapn_List struct{ capnp.List }

// NewGetRoomStateByTypeAndStateKeyRequestCapn creates a new list of GetRoomStateByTypeAndStateKeyRequestCapn.
func NewGetRoomStateByTypeAndStateKeyRequestCapn_List(s *capnp.Segment, sz int32) (GetRoomStateByTypeAndStateKeyRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return GetRoomStateByTypeAndStateKeyRequestCapn_List{l}, err
}

func (s GetRoomStateByTypeAndStateKeyRequestCapn_List) At(i int) GetRoomStateByTypeAndStateKeyRequestCapn {
	return GetRoomStateByTypeAndStateKeyRequestCapn{s.List.Struct(i)}
}

func (s GetRoomStateByTypeAndStateKeyRequestCapn_List) Set(i int, v GetRoomStateByTypeAndStateKeyRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetRoomStateByTypeAndStateKeyRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xe2ddb73031c5cfa8, s.List)
	return str
}

// GetRoomStateByTypeAndStateKeyRequestCapn_Promise is a wrapper for a GetRoomStateByTypeAndStateKeyRequestCapn promised by a client call.
type GetRoomStateByTypeAndStateKeyRequestCapn_Promise struct{ *capnp.Pipeline }

func (p GetRoomStateByTypeAndStateKeyRequestCapn_Promise) Struct() (GetRoomStateByTypeAndStateKeyRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetRoomStateByTypeAndStateKeyRequestCapn{s}, err
}

type GetRoomStateByTypeRequestCapn struct{ capnp.Struct }

// GetRoomStateByTypeRequestCapn_TypeID is the unique identifier for the type GetRoomStateByTypeRequestCapn.
const GetRoomStateByTypeRequestCapn_TypeID = 0xae02a9fed52b9614

func NewGetRoomStateByTypeRequestCapn(s *capnp.Segment) (GetRoomStateByTypeRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return GetRoomStateByTypeRequestCapn{st}, err
}

func NewRootGetRoomStateByTypeRequestCapn(s *capnp.Segment) (GetRoomStateByTypeRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return GetRoomStateByTypeRequestCapn{st}, err
}

func ReadRootGetRoomStateByTypeRequestCapn(msg *capnp.Message) (GetRoomStateByTypeRequestCapn, error) {
	root, err := msg.RootPtr()
	return GetRoomStateByTypeRequestCapn{root.Struct()}, err
}

func (s GetRoomStateByTypeRequestCapn) String() string {
	str, _ := text.Marshal(0xae02a9fed52b9614, s.Struct)
	return str
}

func (s GetRoomStateByTypeRequestCapn) RoomID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GetRoomStateByTypeRequestCapn) HasRoomID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetRoomStateByTypeRequestCapn) RoomIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GetRoomStateByTypeRequestCapn) SetRoomID(v string) error {
	return s.Struct.SetText(0, v)
}

func (s GetRoomStateByTypeRequestCapn) EventType() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s GetRoomStateByTypeRequestCapn) HasEventType() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s GetRoomStateByTypeRequestCapn) EventTypeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s GetRoomStateByTypeRequestCapn) SetEventType(v string) error {
	return s.Struct.SetText(1, v)
}

// GetRoomStateByTypeRequestCapn_List is a list of GetRoomStateByTypeRequestCapn.
type GetRoomStateByTypeRequestCapn_List struct{ capnp.List }

// NewGetRoomStateByTypeRequestCapn creates a new list of GetRoomStateByTypeRequestCapn.
func NewGetRoomStateByTypeRequestCapn_List(s *capnp.Segment, sz int32) (GetRoomStateByTypeRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return GetRoomStateByTypeRequestCapn_List{l}, err
}

func (s GetRoomStateByTypeRequestCapn_List) At(i int) GetRoomStateByTypeRequestCapn {
	return GetRoomStateByTypeRequestCapn{s.List.Struct(i)}
}

func (s GetRoomStateByTypeRequestCapn_List) Set(i int, v GetRoomStateByTypeRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetRoomStateByTypeRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xae02a9fed52b9614, s.List)
	return str
}

// GetRoomStateByTypeRequestCapn_Promise is a wrapper for a GetRoomStateByTypeRequestCapn promised by a client call.
type GetRoomStateByTypeRequestCapn_Promise struct{ *capnp.Pipeline }

func (p GetRoomStateByTypeRequestCapn_Promise) Struct() (GetRoomStateByTypeRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetRoomStateByTypeRequestCapn{s}, err
}

type GetRoomStateRequestCapn struct{ capnp.Struct }

// GetRoomStateRequestCapn_TypeID is the unique identifier for the type GetRoomStateRequestCapn.
const GetRoomStateRequestCapn_TypeID = 0xfec0fff1bb69900e

func NewGetRoomStateRequestCapn(s *capnp.Segment) (GetRoomStateRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetRoomStateRequestCapn{st}, err
}

func NewRootGetRoomStateRequestCapn(s *capnp.Segment) (GetRoomStateRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetRoomStateRequestCapn{st}, err
}

func ReadRootGetRoomStateRequestCapn(msg *capnp.Message) (GetRoomStateRequestCapn, error) {
	root, err := msg.RootPtr()
	return GetRoomStateRequestCapn{root.Struct()}, err
}

func (s GetRoomStateRequestCapn) String() string {
	str, _ := text.Marshal(0xfec0fff1bb69900e, s.Struct)
	return str
}

func (s GetRoomStateRequestCapn) RoomID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GetRoomStateRequestCapn) HasRoomID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetRoomStateRequestCapn) RoomIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GetRoomStateRequestCapn) SetRoomID(v string) error {
	return s.Struct.SetText(0, v)
}

// GetRoomStateRequestCapn_List is a list of GetRoomStateRequestCapn.
type GetRoomStateRequestCapn_List struct{ capnp.List }

// NewGetRoomStateRequestCapn creates a new list of GetRoomStateRequestCapn.
func NewGetRoomStateRequestCapn_List(s *capnp.Segment, sz int32) (GetRoomStateRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return GetRoomStateRequestCapn_List{l}, err
}

func (s GetRoomStateRequestCapn_List) At(i int) GetRoomStateRequestCapn {
	return GetRoomStateRequestCapn{s.List.Struct(i)}
}

func (s GetRoomStateRequestCapn_List) Set(i int, v GetRoomStateRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetRoomStateRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xfec0fff1bb69900e, s.List)
	return str
}

// GetRoomStateRequestCapn_Promise is a wrapper for a GetRoomStateRequestCapn promised by a client call.
type GetRoomStateRequestCapn_Promise struct{ *capnp.Pipeline }

func (p GetRoomStateRequestCapn_Promise) Struct() (GetRoomStateRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetRoomStateRequestCapn{s}, err
}

type GetSyncRequestCapn struct{ capnp.Struct }

// GetSyncRequestCapn_TypeID is the unique identifier for the type GetSyncRequestCapn.
const GetSyncRequestCapn_TypeID = 0xd95d27a9d1615c89

func NewGetSyncRequestCapn(s *capnp.Segment) (GetSyncRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 6})
	return GetSyncRequestCapn{st}, err
}

func NewRootGetSyncRequestCapn(s *capnp.Segment) (GetSyncRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 6})
	return GetSyncRequestCapn{st}, err
}

func ReadRootGetSyncRequestCapn(msg *capnp.Message) (GetSyncRequestCapn, error) {
	root, err := msg.RootPtr()
	return GetSyncRequestCapn{root.Struct()}, err
}

func (s GetSyncRequestCapn) String() string {
	str, _ := text.Marshal(0xd95d27a9d1615c89, s.Struct)
	return str
}

func (s GetSyncRequestCapn) Filter() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GetSyncRequestCapn) HasFilter() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetSyncRequestCapn) FilterBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GetSyncRequestCapn) SetFilter(v string) error {
	return s.Struct.SetText(0, v)
}

func (s GetSyncRequestCapn) Since() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s GetSyncRequestCapn) HasSince() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s GetSyncRequestCapn) SinceBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s GetSyncRequestCapn) SetSince(v string) error {
	return s.Struct.SetText(1, v)
}

func (s GetSyncRequestCapn) FullState() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s GetSyncRequestCapn) HasFullState() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s GetSyncRequestCapn) FullStateBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s GetSyncRequestCapn) SetFullState(v string) error {
	return s.Struct.SetText(2, v)
}

func (s GetSyncRequestCapn) SetPresence() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s GetSyncRequestCapn) HasSetPresence() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s GetSyncRequestCapn) SetPresenceBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s GetSyncRequestCapn) SetSetPresence(v string) error {
	return s.Struct.SetText(3, v)
}

func (s GetSyncRequestCapn) TimeOut() (string, error) {
	p, err := s.Struct.Ptr(4)
	return p.Text(), err
}

func (s GetSyncRequestCapn) HasTimeOut() bool {
	p, err := s.Struct.Ptr(4)
	return p.IsValid() || err != nil
}

func (s GetSyncRequestCapn) TimeOutBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(4)
	return p.TextBytes(), err
}

func (s GetSyncRequestCapn) SetTimeOut(v string) error {
	return s.Struct.SetText(4, v)
}

func (s GetSyncRequestCapn) From() (string, error) {
	p, err := s.Struct.Ptr(5)
	return p.Text(), err
}

func (s GetSyncRequestCapn) HasFrom() bool {
	p, err := s.Struct.Ptr(5)
	return p.IsValid() || err != nil
}

func (s GetSyncRequestCapn) FromBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(5)
	return p.TextBytes(), err
}

func (s GetSyncRequestCapn) SetFrom(v string) error {
	return s.Struct.SetText(5, v)
}

// GetSyncRequestCapn_List is a list of GetSyncRequestCapn.
type GetSyncRequestCapn_List struct{ capnp.List }

// NewGetSyncRequestCapn creates a new list of GetSyncRequestCapn.
func NewGetSyncRequestCapn_List(s *capnp.Segment, sz int32) (GetSyncRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 6}, sz)
	return GetSyncRequestCapn_List{l}, err
}

func (s GetSyncRequestCapn_List) At(i int) GetSyncRequestCapn {
	return GetSyncRequestCapn{s.List.Struct(i)}
}

func (s GetSyncRequestCapn_List) Set(i int, v GetSyncRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetSyncRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xd95d27a9d1615c89, s.List)
	return str
}

// GetSyncRequestCapn_Promise is a wrapper for a GetSyncRequestCapn promised by a client call.
type GetSyncRequestCapn_Promise struct{ *capnp.Pipeline }

func (p GetSyncRequestCapn_Promise) Struct() (GetSyncRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetSyncRequestCapn{s}, err
}

type InviteCapn struct{ capnp.Struct }

// InviteCapn_TypeID is the unique identifier for the type InviteCapn.
const InviteCapn_TypeID = 0x8456848ac50636fd

func NewInviteCapn(s *capnp.Segment) (InviteCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return InviteCapn{st}, err
}

func NewRootInviteCapn(s *capnp.Segment) (InviteCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return InviteCapn{st}, err
}

func ReadRootInviteCapn(msg *capnp.Message) (InviteCapn, error) {
	root, err := msg.RootPtr()
	return InviteCapn{root.Struct()}, err
}

func (s InviteCapn) String() string {
	str, _ := text.Marshal(0x8456848ac50636fd, s.Struct)
	return str
}

func (s InviteCapn) DisplayName() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s InviteCapn) HasDisplayName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s InviteCapn) DisplayNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s InviteCapn) SetDisplayName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s InviteCapn) Signed() (SignedCapn, error) {
	p, err := s.Struct.Ptr(1)
	return SignedCapn{Struct: p.Struct()}, err
}

func (s InviteCapn) HasSigned() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s InviteCapn) SetSigned(v SignedCapn) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewSigned sets the signed field to a newly
// allocated SignedCapn struct, preferring placement in s's segment.
func (s InviteCapn) NewSigned() (SignedCapn, error) {
	ss, err := NewSignedCapn(s.Struct.Segment())
	if err != nil {
		return SignedCapn{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// InviteCapn_List is a list of InviteCapn.
type InviteCapn_List struct{ capnp.List }

// NewInviteCapn creates a new list of InviteCapn.
func NewInviteCapn_List(s *capnp.Segment, sz int32) (InviteCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return InviteCapn_List{l}, err
}

func (s InviteCapn_List) At(i int) InviteCapn { return InviteCapn{s.List.Struct(i)} }

func (s InviteCapn_List) Set(i int, v InviteCapn) error { return s.List.SetStruct(i, v.Struct) }

func (s InviteCapn_List) String() string {
	str, _ := text.MarshalList(0x8456848ac50636fd, s.List)
	return str
}

// InviteCapn_Promise is a wrapper for a InviteCapn promised by a client call.
type InviteCapn_Promise struct{ *capnp.Pipeline }

func (p InviteCapn_Promise) Struct() (InviteCapn, error) {
	s, err := p.Pipeline.Struct()
	return InviteCapn{s}, err
}

func (p InviteCapn_Promise) Signed() SignedCapn_Promise {
	return SignedCapn_Promise{Pipeline: p.Pipeline.GetPipeline(1)}
}

type PaginationChunkCapn struct{ capnp.Struct }

// PaginationChunkCapn_TypeID is the unique identifier for the type PaginationChunkCapn.
const PaginationChunkCapn_TypeID = 0xd316696667594fde

func NewPaginationChunkCapn(s *capnp.Segment) (PaginationChunkCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return PaginationChunkCapn{st}, err
}

func NewRootPaginationChunkCapn(s *capnp.Segment) (PaginationChunkCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return PaginationChunkCapn{st}, err
}

func ReadRootPaginationChunkCapn(msg *capnp.Message) (PaginationChunkCapn, error) {
	root, err := msg.RootPtr()
	return PaginationChunkCapn{root.Struct()}, err
}

func (s PaginationChunkCapn) String() string {
	str, _ := text.Marshal(0xd316696667594fde, s.Struct)
	return str
}

func (s PaginationChunkCapn) Start() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PaginationChunkCapn) HasStart() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PaginationChunkCapn) StartBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PaginationChunkCapn) SetStart(v string) error {
	return s.Struct.SetText(0, v)
}

func (s PaginationChunkCapn) End() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s PaginationChunkCapn) HasEnd() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s PaginationChunkCapn) EndBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s PaginationChunkCapn) SetEnd(v string) error {
	return s.Struct.SetText(1, v)
}

func (s PaginationChunkCapn) Chunk() (RoomEventCapn_List, error) {
	p, err := s.Struct.Ptr(2)
	return RoomEventCapn_List{List: p.List()}, err
}

func (s PaginationChunkCapn) HasChunk() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s PaginationChunkCapn) SetChunk(v RoomEventCapn_List) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewChunk sets the chunk field to a newly
// allocated RoomEventCapn_List, preferring placement in s's segment.
func (s PaginationChunkCapn) NewChunk(n int32) (RoomEventCapn_List, error) {
	l, err := NewRoomEventCapn_List(s.Struct.Segment(), n)
	if err != nil {
		return RoomEventCapn_List{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

// PaginationChunkCapn_List is a list of PaginationChunkCapn.
type PaginationChunkCapn_List struct{ capnp.List }

// NewPaginationChunkCapn creates a new list of PaginationChunkCapn.
func NewPaginationChunkCapn_List(s *capnp.Segment, sz int32) (PaginationChunkCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return PaginationChunkCapn_List{l}, err
}

func (s PaginationChunkCapn_List) At(i int) PaginationChunkCapn {
	return PaginationChunkCapn{s.List.Struct(i)}
}

func (s PaginationChunkCapn_List) Set(i int, v PaginationChunkCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PaginationChunkCapn_List) String() string {
	str, _ := text.MarshalList(0xd316696667594fde, s.List)
	return str
}

// PaginationChunkCapn_Promise is a wrapper for a PaginationChunkCapn promised by a client call.
type PaginationChunkCapn_Promise struct{ *capnp.Pipeline }

func (p PaginationChunkCapn_Promise) Struct() (PaginationChunkCapn, error) {
	s, err := p.Pipeline.Struct()
	return PaginationChunkCapn{s}, err
}

type PresenceCapn struct{ capnp.Struct }

// PresenceCapn_TypeID is the unique identifier for the type PresenceCapn.
const PresenceCapn_TypeID = 0xdd6124c301545f8a

func NewPresenceCapn(s *capnp.Segment) (PresenceCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PresenceCapn{st}, err
}

func NewRootPresenceCapn(s *capnp.Segment) (PresenceCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PresenceCapn{st}, err
}

func ReadRootPresenceCapn(msg *capnp.Message) (PresenceCapn, error) {
	root, err := msg.RootPtr()
	return PresenceCapn{root.Struct()}, err
}

func (s PresenceCapn) String() string {
	str, _ := text.Marshal(0xdd6124c301545f8a, s.Struct)
	return str
}

func (s PresenceCapn) Events() (EventCapn_List, error) {
	p, err := s.Struct.Ptr(0)
	return EventCapn_List{List: p.List()}, err
}

func (s PresenceCapn) HasEvents() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PresenceCapn) SetEvents(v EventCapn_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewEvents sets the events field to a newly
// allocated EventCapn_List, preferring placement in s's segment.
func (s PresenceCapn) NewEvents(n int32) (EventCapn_List, error) {
	l, err := NewEventCapn_List(s.Struct.Segment(), n)
	if err != nil {
		return EventCapn_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// PresenceCapn_List is a list of PresenceCapn.
type PresenceCapn_List struct{ capnp.List }

// NewPresenceCapn creates a new list of PresenceCapn.
func NewPresenceCapn_List(s *capnp.Segment, sz int32) (PresenceCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return PresenceCapn_List{l}, err
}

func (s PresenceCapn_List) At(i int) PresenceCapn { return PresenceCapn{s.List.Struct(i)} }

func (s PresenceCapn_List) Set(i int, v PresenceCapn) error { return s.List.SetStruct(i, v.Struct) }

func (s PresenceCapn_List) String() string {
	str, _ := text.MarshalList(0xdd6124c301545f8a, s.List)
	return str
}

// PresenceCapn_Promise is a wrapper for a PresenceCapn promised by a client call.
type PresenceCapn_Promise struct{ *capnp.Pipeline }

func (p PresenceCapn_Promise) Struct() (PresenceCapn, error) {
	s, err := p.Pipeline.Struct()
	return PresenceCapn{s}, err
}

type PutRedactEventRequestCapn struct{ capnp.Struct }

// PutRedactEventRequestCapn_TypeID is the unique identifier for the type PutRedactEventRequestCapn.
const PutRedactEventRequestCapn_TypeID = 0x932e5c0a6f21237e

func NewPutRedactEventRequestCapn(s *capnp.Segment) (PutRedactEventRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return PutRedactEventRequestCapn{st}, err
}

func NewRootPutRedactEventRequestCapn(s *capnp.Segment) (PutRedactEventRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return PutRedactEventRequestCapn{st}, err
}

func ReadRootPutRedactEventRequestCapn(msg *capnp.Message) (PutRedactEventRequestCapn, error) {
	root, err := msg.RootPtr()
	return PutRedactEventRequestCapn{root.Struct()}, err
}

func (s PutRedactEventRequestCapn) String() string {
	str, _ := text.Marshal(0x932e5c0a6f21237e, s.Struct)
	return str
}

func (s PutRedactEventRequestCapn) RoomID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PutRedactEventRequestCapn) HasRoomID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PutRedactEventRequestCapn) RoomIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PutRedactEventRequestCapn) SetRoomID(v string) error {
	return s.Struct.SetText(0, v)
}

func (s PutRedactEventRequestCapn) EventID() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s PutRedactEventRequestCapn) HasEventID() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s PutRedactEventRequestCapn) EventIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s PutRedactEventRequestCapn) SetEventID(v string) error {
	return s.Struct.SetText(1, v)
}

func (s PutRedactEventRequestCapn) Reason() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s PutRedactEventRequestCapn) HasReason() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s PutRedactEventRequestCapn) ReasonBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s PutRedactEventRequestCapn) SetReason(v string) error {
	return s.Struct.SetText(2, v)
}

func (s PutRedactEventRequestCapn) Content() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return []byte(p.Data()), err
}

func (s PutRedactEventRequestCapn) HasContent() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s PutRedactEventRequestCapn) SetContent(v []byte) error {
	return s.Struct.SetData(3, v)
}

// PutRedactEventRequestCapn_List is a list of PutRedactEventRequestCapn.
type PutRedactEventRequestCapn_List struct{ capnp.List }

// NewPutRedactEventRequestCapn creates a new list of PutRedactEventRequestCapn.
func NewPutRedactEventRequestCapn_List(s *capnp.Segment, sz int32) (PutRedactEventRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return PutRedactEventRequestCapn_List{l}, err
}

func (s PutRedactEventRequestCapn_List) At(i int) PutRedactEventRequestCapn {
	return PutRedactEventRequestCapn{s.List.Struct(i)}
}

func (s PutRedactEventRequestCapn_List) Set(i int, v PutRedactEventRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PutRedactEventRequestCapn_List) String() string {
	str, _ := text.MarshalList(0x932e5c0a6f21237e, s.List)
	return str
}

// PutRedactEventRequestCapn_Promise is a wrapper for a PutRedactEventRequestCapn promised by a client call.
type PutRedactEventRequestCapn_Promise struct{ *capnp.Pipeline }

func (p PutRedactEventRequestCapn_Promise) Struct() (PutRedactEventRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return PutRedactEventRequestCapn{s}, err
}

type PutRedactWithTxnIDEventRequestCapn struct{ capnp.Struct }

// PutRedactWithTxnIDEventRequestCapn_TypeID is the unique identifier for the type PutRedactWithTxnIDEventRequestCapn.
const PutRedactWithTxnIDEventRequestCapn_TypeID = 0x8c953b47310a1cd2

func NewPutRedactWithTxnIDEventRequestCapn(s *capnp.Segment) (PutRedactWithTxnIDEventRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 5})
	return PutRedactWithTxnIDEventRequestCapn{st}, err
}

func NewRootPutRedactWithTxnIDEventRequestCapn(s *capnp.Segment) (PutRedactWithTxnIDEventRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 5})
	return PutRedactWithTxnIDEventRequestCapn{st}, err
}

func ReadRootPutRedactWithTxnIDEventRequestCapn(msg *capnp.Message) (PutRedactWithTxnIDEventRequestCapn, error) {
	root, err := msg.RootPtr()
	return PutRedactWithTxnIDEventRequestCapn{root.Struct()}, err
}

func (s PutRedactWithTxnIDEventRequestCapn) String() string {
	str, _ := text.Marshal(0x8c953b47310a1cd2, s.Struct)
	return str
}

func (s PutRedactWithTxnIDEventRequestCapn) RoomID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PutRedactWithTxnIDEventRequestCapn) HasRoomID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PutRedactWithTxnIDEventRequestCapn) RoomIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PutRedactWithTxnIDEventRequestCapn) SetRoomID(v string) error {
	return s.Struct.SetText(0, v)
}

func (s PutRedactWithTxnIDEventRequestCapn) EventID() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s PutRedactWithTxnIDEventRequestCapn) HasEventID() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s PutRedactWithTxnIDEventRequestCapn) EventIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s PutRedactWithTxnIDEventRequestCapn) SetEventID(v string) error {
	return s.Struct.SetText(1, v)
}

func (s PutRedactWithTxnIDEventRequestCapn) TxnID() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s PutRedactWithTxnIDEventRequestCapn) HasTxnID() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s PutRedactWithTxnIDEventRequestCapn) TxnIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s PutRedactWithTxnIDEventRequestCapn) SetTxnID(v string) error {
	return s.Struct.SetText(2, v)
}

func (s PutRedactWithTxnIDEventRequestCapn) Reason() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s PutRedactWithTxnIDEventRequestCapn) HasReason() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s PutRedactWithTxnIDEventRequestCapn) ReasonBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s PutRedactWithTxnIDEventRequestCapn) SetReason(v string) error {
	return s.Struct.SetText(3, v)
}

func (s PutRedactWithTxnIDEventRequestCapn) Content() ([]byte, error) {
	p, err := s.Struct.Ptr(4)
	return []byte(p.Data()), err
}

func (s PutRedactWithTxnIDEventRequestCapn) HasContent() bool {
	p, err := s.Struct.Ptr(4)
	return p.IsValid() || err != nil
}

func (s PutRedactWithTxnIDEventRequestCapn) SetContent(v []byte) error {
	return s.Struct.SetData(4, v)
}

// PutRedactWithTxnIDEventRequestCapn_List is a list of PutRedactWithTxnIDEventRequestCapn.
type PutRedactWithTxnIDEventRequestCapn_List struct{ capnp.List }

// NewPutRedactWithTxnIDEventRequestCapn creates a new list of PutRedactWithTxnIDEventRequestCapn.
func NewPutRedactWithTxnIDEventRequestCapn_List(s *capnp.Segment, sz int32) (PutRedactWithTxnIDEventRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 5}, sz)
	return PutRedactWithTxnIDEventRequestCapn_List{l}, err
}

func (s PutRedactWithTxnIDEventRequestCapn_List) At(i int) PutRedactWithTxnIDEventRequestCapn {
	return PutRedactWithTxnIDEventRequestCapn{s.List.Struct(i)}
}

func (s PutRedactWithTxnIDEventRequestCapn_List) Set(i int, v PutRedactWithTxnIDEventRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PutRedactWithTxnIDEventRequestCapn_List) String() string {
	str, _ := text.MarshalList(0x8c953b47310a1cd2, s.List)
	return str
}

// PutRedactWithTxnIDEventRequestCapn_Promise is a wrapper for a PutRedactWithTxnIDEventRequestCapn promised by a client call.
type PutRedactWithTxnIDEventRequestCapn_Promise struct{ *capnp.Pipeline }

func (p PutRedactWithTxnIDEventRequestCapn_Promise) Struct() (PutRedactWithTxnIDEventRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return PutRedactWithTxnIDEventRequestCapn{s}, err
}

type PutRoomStateByTypeCapn struct{ capnp.Struct }

// PutRoomStateByTypeCapn_TypeID is the unique identifier for the type PutRoomStateByTypeCapn.
const PutRoomStateByTypeCapn_TypeID = 0xdd77bae6bf7da064

func NewPutRoomStateByTypeCapn(s *capnp.Segment) (PutRoomStateByTypeCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return PutRoomStateByTypeCapn{st}, err
}

func NewRootPutRoomStateByTypeCapn(s *capnp.Segment) (PutRoomStateByTypeCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return PutRoomStateByTypeCapn{st}, err
}

func ReadRootPutRoomStateByTypeCapn(msg *capnp.Message) (PutRoomStateByTypeCapn, error) {
	root, err := msg.RootPtr()
	return PutRoomStateByTypeCapn{root.Struct()}, err
}

func (s PutRoomStateByTypeCapn) String() string {
	str, _ := text.Marshal(0xdd77bae6bf7da064, s.Struct)
	return str
}

func (s PutRoomStateByTypeCapn) RoomID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PutRoomStateByTypeCapn) HasRoomID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PutRoomStateByTypeCapn) RoomIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PutRoomStateByTypeCapn) SetRoomID(v string) error {
	return s.Struct.SetText(0, v)
}

func (s PutRoomStateByTypeCapn) EventType() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s PutRoomStateByTypeCapn) HasEventType() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s PutRoomStateByTypeCapn) EventTypeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s PutRoomStateByTypeCapn) SetEventType(v string) error {
	return s.Struct.SetText(1, v)
}

func (s PutRoomStateByTypeCapn) Content() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return []byte(p.Data()), err
}

func (s PutRoomStateByTypeCapn) HasContent() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s PutRoomStateByTypeCapn) SetContent(v []byte) error {
	return s.Struct.SetData(2, v)
}

// PutRoomStateByTypeCapn_List is a list of PutRoomStateByTypeCapn.
type PutRoomStateByTypeCapn_List struct{ capnp.List }

// NewPutRoomStateByTypeCapn creates a new list of PutRoomStateByTypeCapn.
func NewPutRoomStateByTypeCapn_List(s *capnp.Segment, sz int32) (PutRoomStateByTypeCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return PutRoomStateByTypeCapn_List{l}, err
}

func (s PutRoomStateByTypeCapn_List) At(i int) PutRoomStateByTypeCapn {
	return PutRoomStateByTypeCapn{s.List.Struct(i)}
}

func (s PutRoomStateByTypeCapn_List) Set(i int, v PutRoomStateByTypeCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PutRoomStateByTypeCapn_List) String() string {
	str, _ := text.MarshalList(0xdd77bae6bf7da064, s.List)
	return str
}

// PutRoomStateByTypeCapn_Promise is a wrapper for a PutRoomStateByTypeCapn promised by a client call.
type PutRoomStateByTypeCapn_Promise struct{ *capnp.Pipeline }

func (p PutRoomStateByTypeCapn_Promise) Struct() (PutRoomStateByTypeCapn, error) {
	s, err := p.Pipeline.Struct()
	return PutRoomStateByTypeCapn{s}, err
}

type PutRoomStateByTypeAndStateKeyCapn struct{ capnp.Struct }

// PutRoomStateByTypeAndStateKeyCapn_TypeID is the unique identifier for the type PutRoomStateByTypeAndStateKeyCapn.
const PutRoomStateByTypeAndStateKeyCapn_TypeID = 0xd8a50d37465756ba

func NewPutRoomStateByTypeAndStateKeyCapn(s *capnp.Segment) (PutRoomStateByTypeAndStateKeyCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return PutRoomStateByTypeAndStateKeyCapn{st}, err
}

func NewRootPutRoomStateByTypeAndStateKeyCapn(s *capnp.Segment) (PutRoomStateByTypeAndStateKeyCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return PutRoomStateByTypeAndStateKeyCapn{st}, err
}

func ReadRootPutRoomStateByTypeAndStateKeyCapn(msg *capnp.Message) (PutRoomStateByTypeAndStateKeyCapn, error) {
	root, err := msg.RootPtr()
	return PutRoomStateByTypeAndStateKeyCapn{root.Struct()}, err
}

func (s PutRoomStateByTypeAndStateKeyCapn) String() string {
	str, _ := text.Marshal(0xd8a50d37465756ba, s.Struct)
	return str
}

func (s PutRoomStateByTypeAndStateKeyCapn) RoomID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PutRoomStateByTypeAndStateKeyCapn) HasRoomID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PutRoomStateByTypeAndStateKeyCapn) RoomIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PutRoomStateByTypeAndStateKeyCapn) SetRoomID(v string) error {
	return s.Struct.SetText(0, v)
}

func (s PutRoomStateByTypeAndStateKeyCapn) EventType() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s PutRoomStateByTypeAndStateKeyCapn) HasEventType() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s PutRoomStateByTypeAndStateKeyCapn) EventTypeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s PutRoomStateByTypeAndStateKeyCapn) SetEventType(v string) error {
	return s.Struct.SetText(1, v)
}

func (s PutRoomStateByTypeAndStateKeyCapn) StateKey() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s PutRoomStateByTypeAndStateKeyCapn) HasStateKey() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s PutRoomStateByTypeAndStateKeyCapn) StateKeyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s PutRoomStateByTypeAndStateKeyCapn) SetStateKey(v string) error {
	return s.Struct.SetText(2, v)
}

func (s PutRoomStateByTypeAndStateKeyCapn) Content() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return []byte(p.Data()), err
}

func (s PutRoomStateByTypeAndStateKeyCapn) HasContent() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s PutRoomStateByTypeAndStateKeyCapn) SetContent(v []byte) error {
	return s.Struct.SetData(3, v)
}

// PutRoomStateByTypeAndStateKeyCapn_List is a list of PutRoomStateByTypeAndStateKeyCapn.
type PutRoomStateByTypeAndStateKeyCapn_List struct{ capnp.List }

// NewPutRoomStateByTypeAndStateKeyCapn creates a new list of PutRoomStateByTypeAndStateKeyCapn.
func NewPutRoomStateByTypeAndStateKeyCapn_List(s *capnp.Segment, sz int32) (PutRoomStateByTypeAndStateKeyCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return PutRoomStateByTypeAndStateKeyCapn_List{l}, err
}

func (s PutRoomStateByTypeAndStateKeyCapn_List) At(i int) PutRoomStateByTypeAndStateKeyCapn {
	return PutRoomStateByTypeAndStateKeyCapn{s.List.Struct(i)}
}

func (s PutRoomStateByTypeAndStateKeyCapn_List) Set(i int, v PutRoomStateByTypeAndStateKeyCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PutRoomStateByTypeAndStateKeyCapn_List) String() string {
	str, _ := text.MarshalList(0xd8a50d37465756ba, s.List)
	return str
}

// PutRoomStateByTypeAndStateKeyCapn_Promise is a wrapper for a PutRoomStateByTypeAndStateKeyCapn promised by a client call.
type PutRoomStateByTypeAndStateKeyCapn_Promise struct{ *capnp.Pipeline }

func (p PutRoomStateByTypeAndStateKeyCapn_Promise) Struct() (PutRoomStateByTypeAndStateKeyCapn, error) {
	s, err := p.Pipeline.Struct()
	return PutRoomStateByTypeAndStateKeyCapn{s}, err
}

type PutRoomStateByTypeWithTxnIDCapn struct{ capnp.Struct }

// PutRoomStateByTypeWithTxnIDCapn_TypeID is the unique identifier for the type PutRoomStateByTypeWithTxnIDCapn.
const PutRoomStateByTypeWithTxnIDCapn_TypeID = 0xb36573fb1405d102

func NewPutRoomStateByTypeWithTxnIDCapn(s *capnp.Segment) (PutRoomStateByTypeWithTxnIDCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 6})
	return PutRoomStateByTypeWithTxnIDCapn{st}, err
}

func NewRootPutRoomStateByTypeWithTxnIDCapn(s *capnp.Segment) (PutRoomStateByTypeWithTxnIDCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 6})
	return PutRoomStateByTypeWithTxnIDCapn{st}, err
}

func ReadRootPutRoomStateByTypeWithTxnIDCapn(msg *capnp.Message) (PutRoomStateByTypeWithTxnIDCapn, error) {
	root, err := msg.RootPtr()
	return PutRoomStateByTypeWithTxnIDCapn{root.Struct()}, err
}

func (s PutRoomStateByTypeWithTxnIDCapn) String() string {
	str, _ := text.Marshal(0xb36573fb1405d102, s.Struct)
	return str
}

func (s PutRoomStateByTypeWithTxnIDCapn) RoomID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PutRoomStateByTypeWithTxnIDCapn) HasRoomID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PutRoomStateByTypeWithTxnIDCapn) RoomIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PutRoomStateByTypeWithTxnIDCapn) SetRoomID(v string) error {
	return s.Struct.SetText(0, v)
}

func (s PutRoomStateByTypeWithTxnIDCapn) EventType() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s PutRoomStateByTypeWithTxnIDCapn) HasEventType() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s PutRoomStateByTypeWithTxnIDCapn) EventTypeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s PutRoomStateByTypeWithTxnIDCapn) SetEventType(v string) error {
	return s.Struct.SetText(1, v)
}

func (s PutRoomStateByTypeWithTxnIDCapn) StateKey() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s PutRoomStateByTypeWithTxnIDCapn) HasStateKey() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s PutRoomStateByTypeWithTxnIDCapn) StateKeyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s PutRoomStateByTypeWithTxnIDCapn) SetStateKey(v string) error {
	return s.Struct.SetText(2, v)
}

func (s PutRoomStateByTypeWithTxnIDCapn) TxnID() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s PutRoomStateByTypeWithTxnIDCapn) HasTxnID() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s PutRoomStateByTypeWithTxnIDCapn) TxnIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s PutRoomStateByTypeWithTxnIDCapn) SetTxnID(v string) error {
	return s.Struct.SetText(3, v)
}

func (s PutRoomStateByTypeWithTxnIDCapn) Content() ([]byte, error) {
	p, err := s.Struct.Ptr(4)
	return []byte(p.Data()), err
}

func (s PutRoomStateByTypeWithTxnIDCapn) HasContent() bool {
	p, err := s.Struct.Ptr(4)
	return p.IsValid() || err != nil
}

func (s PutRoomStateByTypeWithTxnIDCapn) SetContent(v []byte) error {
	return s.Struct.SetData(4, v)
}

func (s PutRoomStateByTypeWithTxnIDCapn) Ip() (string, error) {
	p, err := s.Struct.Ptr(5)
	return p.Text(), err
}

func (s PutRoomStateByTypeWithTxnIDCapn) HasIp() bool {
	p, err := s.Struct.Ptr(5)
	return p.IsValid() || err != nil
}

func (s PutRoomStateByTypeWithTxnIDCapn) IpBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(5)
	return p.TextBytes(), err
}

func (s PutRoomStateByTypeWithTxnIDCapn) SetIp(v string) error {
	return s.Struct.SetText(5, v)
}

// PutRoomStateByTypeWithTxnIDCapn_List is a list of PutRoomStateByTypeWithTxnIDCapn.
type PutRoomStateByTypeWithTxnIDCapn_List struct{ capnp.List }

// NewPutRoomStateByTypeWithTxnIDCapn creates a new list of PutRoomStateByTypeWithTxnIDCapn.
func NewPutRoomStateByTypeWithTxnIDCapn_List(s *capnp.Segment, sz int32) (PutRoomStateByTypeWithTxnIDCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 6}, sz)
	return PutRoomStateByTypeWithTxnIDCapn_List{l}, err
}

func (s PutRoomStateByTypeWithTxnIDCapn_List) At(i int) PutRoomStateByTypeWithTxnIDCapn {
	return PutRoomStateByTypeWithTxnIDCapn{s.List.Struct(i)}
}

func (s PutRoomStateByTypeWithTxnIDCapn_List) Set(i int, v PutRoomStateByTypeWithTxnIDCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PutRoomStateByTypeWithTxnIDCapn_List) String() string {
	str, _ := text.MarshalList(0xb36573fb1405d102, s.List)
	return str
}

// PutRoomStateByTypeWithTxnIDCapn_Promise is a wrapper for a PutRoomStateByTypeWithTxnIDCapn promised by a client call.
type PutRoomStateByTypeWithTxnIDCapn_Promise struct{ *capnp.Pipeline }

func (p PutRoomStateByTypeWithTxnIDCapn_Promise) Struct() (PutRoomStateByTypeWithTxnIDCapn, error) {
	s, err := p.Pipeline.Struct()
	return PutRoomStateByTypeWithTxnIDCapn{s}, err
}

type PutRoomStateResponseCapn struct{ capnp.Struct }

// PutRoomStateResponseCapn_TypeID is the unique identifier for the type PutRoomStateResponseCapn.
const PutRoomStateResponseCapn_TypeID = 0xfdc9b13568f8b176

func NewPutRoomStateResponseCapn(s *capnp.Segment) (PutRoomStateResponseCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PutRoomStateResponseCapn{st}, err
}

func NewRootPutRoomStateResponseCapn(s *capnp.Segment) (PutRoomStateResponseCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PutRoomStateResponseCapn{st}, err
}

func ReadRootPutRoomStateResponseCapn(msg *capnp.Message) (PutRoomStateResponseCapn, error) {
	root, err := msg.RootPtr()
	return PutRoomStateResponseCapn{root.Struct()}, err
}

func (s PutRoomStateResponseCapn) String() string {
	str, _ := text.Marshal(0xfdc9b13568f8b176, s.Struct)
	return str
}

func (s PutRoomStateResponseCapn) EventID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PutRoomStateResponseCapn) HasEventID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PutRoomStateResponseCapn) EventIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PutRoomStateResponseCapn) SetEventID(v string) error {
	return s.Struct.SetText(0, v)
}

// PutRoomStateResponseCapn_List is a list of PutRoomStateResponseCapn.
type PutRoomStateResponseCapn_List struct{ capnp.List }

// NewPutRoomStateResponseCapn creates a new list of PutRoomStateResponseCapn.
func NewPutRoomStateResponseCapn_List(s *capnp.Segment, sz int32) (PutRoomStateResponseCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return PutRoomStateResponseCapn_List{l}, err
}

func (s PutRoomStateResponseCapn_List) At(i int) PutRoomStateResponseCapn {
	return PutRoomStateResponseCapn{s.List.Struct(i)}
}

func (s PutRoomStateResponseCapn_List) Set(i int, v PutRoomStateResponseCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PutRoomStateResponseCapn_List) String() string {
	str, _ := text.MarshalList(0xfdc9b13568f8b176, s.List)
	return str
}

// PutRoomStateResponseCapn_Promise is a wrapper for a PutRoomStateResponseCapn promised by a client call.
type PutRoomStateResponseCapn_Promise struct{ *capnp.Pipeline }

func (p PutRoomStateResponseCapn_Promise) Struct() (PutRoomStateResponseCapn, error) {
	s, err := p.Pipeline.Struct()
	return PutRoomStateResponseCapn{s}, err
}

type RoomEventCapn struct{ capnp.Struct }

// RoomEventCapn_TypeID is the unique identifier for the type RoomEventCapn.
const RoomEventCapn_TypeID = 0xac8778e2250d9d0a

func NewRoomEventCapn(s *capnp.Segment) (RoomEventCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 6})
	return RoomEventCapn{st}, err
}

func NewRootRoomEventCapn(s *capnp.Segment) (RoomEventCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 6})
	return RoomEventCapn{st}, err
}

func ReadRootRoomEventCapn(msg *capnp.Message) (RoomEventCapn, error) {
	root, err := msg.RootPtr()
	return RoomEventCapn{root.Struct()}, err
}

func (s RoomEventCapn) String() string {
	str, _ := text.Marshal(0xac8778e2250d9d0a, s.Struct)
	return str
}

func (s RoomEventCapn) Content() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s RoomEventCapn) HasContent() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s RoomEventCapn) SetContent(v []byte) error {
	return s.Struct.SetData(0, v)
}

func (s RoomEventCapn) Type() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s RoomEventCapn) HasType() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s RoomEventCapn) TypeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s RoomEventCapn) SetType(v string) error {
	return s.Struct.SetText(1, v)
}

func (s RoomEventCapn) EventID() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s RoomEventCapn) HasEventID() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s RoomEventCapn) EventIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s RoomEventCapn) SetEventID(v string) error {
	return s.Struct.SetText(2, v)
}

func (s RoomEventCapn) Sender() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s RoomEventCapn) HasSender() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s RoomEventCapn) SenderBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s RoomEventCapn) SetSender(v string) error {
	return s.Struct.SetText(3, v)
}

func (s RoomEventCapn) OriginServerTS() int64 {
	return int64(s.Struct.Uint64(0))
}

func (s RoomEventCapn) SetOriginServerTS(v int64) {
	s.Struct.SetUint64(0, uint64(v))
}

func (s RoomEventCapn) Unsigned() (UnsignedDataCapn, error) {
	p, err := s.Struct.Ptr(4)
	return UnsignedDataCapn{Struct: p.Struct()}, err
}

func (s RoomEventCapn) HasUnsigned() bool {
	p, err := s.Struct.Ptr(4)
	return p.IsValid() || err != nil
}

func (s RoomEventCapn) SetUnsigned(v UnsignedDataCapn) error {
	return s.Struct.SetPtr(4, v.Struct.ToPtr())
}

// NewUnsigned sets the unsigned field to a newly
// allocated UnsignedDataCapn struct, preferring placement in s's segment.
func (s RoomEventCapn) NewUnsigned() (UnsignedDataCapn, error) {
	ss, err := NewUnsignedDataCapn(s.Struct.Segment())
	if err != nil {
		return UnsignedDataCapn{}, err
	}
	err = s.Struct.SetPtr(4, ss.Struct.ToPtr())
	return ss, err
}

func (s RoomEventCapn) RoomID() (string, error) {
	p, err := s.Struct.Ptr(5)
	return p.Text(), err
}

func (s RoomEventCapn) HasRoomID() bool {
	p, err := s.Struct.Ptr(5)
	return p.IsValid() || err != nil
}

func (s RoomEventCapn) RoomIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(5)
	return p.TextBytes(), err
}

func (s RoomEventCapn) SetRoomID(v string) error {
	return s.Struct.SetText(5, v)
}

// RoomEventCapn_List is a list of RoomEventCapn.
type RoomEventCapn_List struct{ capnp.List }

// NewRoomEventCapn creates a new list of RoomEventCapn.
func NewRoomEventCapn_List(s *capnp.Segment, sz int32) (RoomEventCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 6}, sz)
	return RoomEventCapn_List{l}, err
}

func (s RoomEventCapn_List) At(i int) RoomEventCapn { return RoomEventCapn{s.List.Struct(i)} }

func (s RoomEventCapn_List) Set(i int, v RoomEventCapn) error { return s.List.SetStruct(i, v.Struct) }

func (s RoomEventCapn_List) String() string {
	str, _ := text.MarshalList(0xac8778e2250d9d0a, s.List)
	return str
}

// RoomEventCapn_Promise is a wrapper for a RoomEventCapn promised by a client call.
type RoomEventCapn_Promise struct{ *capnp.Pipeline }

func (p RoomEventCapn_Promise) Struct() (RoomEventCapn, error) {
	s, err := p.Pipeline.Struct()
	return RoomEventCapn{s}, err
}

func (p RoomEventCapn_Promise) Unsigned() UnsignedDataCapn_Promise {
	return UnsignedDataCapn_Promise{Pipeline: p.Pipeline.GetPipeline(4)}
}

type SignedCapn struct{ capnp.Struct }

// SignedCapn_TypeID is the unique identifier for the type SignedCapn.
const SignedCapn_TypeID = 0xdfdd3852b87451ee

func NewSignedCapn(s *capnp.Segment) (SignedCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return SignedCapn{st}, err
}

func NewRootSignedCapn(s *capnp.Segment) (SignedCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return SignedCapn{st}, err
}

func ReadRootSignedCapn(msg *capnp.Message) (SignedCapn, error) {
	root, err := msg.RootPtr()
	return SignedCapn{root.Struct()}, err
}

func (s SignedCapn) String() string {
	str, _ := text.Marshal(0xdfdd3852b87451ee, s.Struct)
	return str
}

func (s SignedCapn) MxID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s SignedCapn) HasMxID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s SignedCapn) MxIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s SignedCapn) SetMxID(v string) error {
	return s.Struct.SetText(0, v)
}

func (s SignedCapn) Signatures() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s SignedCapn) HasSignatures() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s SignedCapn) SignaturesBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s SignedCapn) SetSignatures(v string) error {
	return s.Struct.SetText(1, v)
}

func (s SignedCapn) Token() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s SignedCapn) HasToken() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s SignedCapn) TokenBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s SignedCapn) SetToken(v string) error {
	return s.Struct.SetText(2, v)
}

// SignedCapn_List is a list of SignedCapn.
type SignedCapn_List struct{ capnp.List }

// NewSignedCapn creates a new list of SignedCapn.
func NewSignedCapn_List(s *capnp.Segment, sz int32) (SignedCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return SignedCapn_List{l}, err
}

func (s SignedCapn_List) At(i int) SignedCapn { return SignedCapn{s.List.Struct(i)} }

func (s SignedCapn_List) Set(i int, v SignedCapn) error { return s.List.SetStruct(i, v.Struct) }

func (s SignedCapn_List) String() string {
	str, _ := text.MarshalList(0xdfdd3852b87451ee, s.List)
	return str
}

// SignedCapn_Promise is a wrapper for a SignedCapn promised by a client call.
type SignedCapn_Promise struct{ *capnp.Pipeline }

func (p SignedCapn_Promise) Struct() (SignedCapn, error) {
	s, err := p.Pipeline.Struct()
	return SignedCapn{s}, err
}

type TimelineCapn struct{ capnp.Struct }

// TimelineCapn_TypeID is the unique identifier for the type TimelineCapn.
const TimelineCapn_TypeID = 0xb97e0a59e5e53b7a

func NewTimelineCapn(s *capnp.Segment) (TimelineCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return TimelineCapn{st}, err
}

func NewRootTimelineCapn(s *capnp.Segment) (TimelineCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return TimelineCapn{st}, err
}

func ReadRootTimelineCapn(msg *capnp.Message) (TimelineCapn, error) {
	root, err := msg.RootPtr()
	return TimelineCapn{root.Struct()}, err
}

func (s TimelineCapn) String() string {
	str, _ := text.Marshal(0xb97e0a59e5e53b7a, s.Struct)
	return str
}

func (s TimelineCapn) Events() (RoomEventCapn_List, error) {
	p, err := s.Struct.Ptr(0)
	return RoomEventCapn_List{List: p.List()}, err
}

func (s TimelineCapn) HasEvents() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s TimelineCapn) SetEvents(v RoomEventCapn_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewEvents sets the events field to a newly
// allocated RoomEventCapn_List, preferring placement in s's segment.
func (s TimelineCapn) NewEvents(n int32) (RoomEventCapn_List, error) {
	l, err := NewRoomEventCapn_List(s.Struct.Segment(), n)
	if err != nil {
		return RoomEventCapn_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

func (s TimelineCapn) Limited() bool {
	return s.Struct.Bit(0)
}

func (s TimelineCapn) SetLimited(v bool) {
	s.Struct.SetBit(0, v)
}

func (s TimelineCapn) PrevBatch() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s TimelineCapn) HasPrevBatch() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s TimelineCapn) PrevBatchBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s TimelineCapn) SetPrevBatch(v string) error {
	return s.Struct.SetText(1, v)
}

// TimelineCapn_List is a list of TimelineCapn.
type TimelineCapn_List struct{ capnp.List }

// NewTimelineCapn creates a new list of TimelineCapn.
func NewTimelineCapn_List(s *capnp.Segment, sz int32) (TimelineCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return TimelineCapn_List{l}, err
}

func (s TimelineCapn_List) At(i int) TimelineCapn { return TimelineCapn{s.List.Struct(i)} }

func (s TimelineCapn_List) Set(i int, v TimelineCapn) error { return s.List.SetStruct(i, v.Struct) }

func (s TimelineCapn_List) String() string {
	str, _ := text.MarshalList(0xb97e0a59e5e53b7a, s.List)
	return str
}

// TimelineCapn_Promise is a wrapper for a TimelineCapn promised by a client call.
type TimelineCapn_Promise struct{ *capnp.Pipeline }

func (p TimelineCapn_Promise) Struct() (TimelineCapn, error) {
	s, err := p.Pipeline.Struct()
	return TimelineCapn{s}, err
}

type ToDeviceCapn struct{ capnp.Struct }

// ToDeviceCapn_TypeID is the unique identifier for the type ToDeviceCapn.
const ToDeviceCapn_TypeID = 0xca2680723f430e09

func NewToDeviceCapn(s *capnp.Segment) (ToDeviceCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return ToDeviceCapn{st}, err
}

func NewRootToDeviceCapn(s *capnp.Segment) (ToDeviceCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return ToDeviceCapn{st}, err
}

func ReadRootToDeviceCapn(msg *capnp.Message) (ToDeviceCapn, error) {
	root, err := msg.RootPtr()
	return ToDeviceCapn{root.Struct()}, err
}

func (s ToDeviceCapn) String() string {
	str, _ := text.Marshal(0xca2680723f430e09, s.Struct)
	return str
}

func (s ToDeviceCapn) Events() (EventCapn_List, error) {
	p, err := s.Struct.Ptr(0)
	return EventCapn_List{List: p.List()}, err
}

func (s ToDeviceCapn) HasEvents() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s ToDeviceCapn) SetEvents(v EventCapn_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewEvents sets the events field to a newly
// allocated EventCapn_List, preferring placement in s's segment.
func (s ToDeviceCapn) NewEvents(n int32) (EventCapn_List, error) {
	l, err := NewEventCapn_List(s.Struct.Segment(), n)
	if err != nil {
		return EventCapn_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// ToDeviceCapn_List is a list of ToDeviceCapn.
type ToDeviceCapn_List struct{ capnp.List }

// NewToDeviceCapn creates a new list of ToDeviceCapn.
func NewToDeviceCapn_List(s *capnp.Segment, sz int32) (ToDeviceCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return ToDeviceCapn_List{l}, err
}

func (s ToDeviceCapn_List) At(i int) ToDeviceCapn { return ToDeviceCapn{s.List.Struct(i)} }

func (s ToDeviceCapn_List) Set(i int, v ToDeviceCapn) error { return s.List.SetStruct(i, v.Struct) }

func (s ToDeviceCapn_List) String() string {
	str, _ := text.MarshalList(0xca2680723f430e09, s.List)
	return str
}

// ToDeviceCapn_Promise is a wrapper for a ToDeviceCapn promised by a client call.
type ToDeviceCapn_Promise struct{ *capnp.Pipeline }

func (p ToDeviceCapn_Promise) Struct() (ToDeviceCapn, error) {
	s, err := p.Pipeline.Struct()
	return ToDeviceCapn{s}, err
}

type UnreadNotificationsCapn struct{ capnp.Struct }

// UnreadNotificationsCapn_TypeID is the unique identifier for the type UnreadNotificationsCapn.
const UnreadNotificationsCapn_TypeID = 0xed463b2d9fbf779e

func NewUnreadNotificationsCapn(s *capnp.Segment) (UnreadNotificationsCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return UnreadNotificationsCapn{st}, err
}

func NewRootUnreadNotificationsCapn(s *capnp.Segment) (UnreadNotificationsCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return UnreadNotificationsCapn{st}, err
}

func ReadRootUnreadNotificationsCapn(msg *capnp.Message) (UnreadNotificationsCapn, error) {
	root, err := msg.RootPtr()
	return UnreadNotificationsCapn{root.Struct()}, err
}

func (s UnreadNotificationsCapn) String() string {
	str, _ := text.Marshal(0xed463b2d9fbf779e, s.Struct)
	return str
}

func (s UnreadNotificationsCapn) HighLightCount() int64 {
	return int64(s.Struct.Uint64(0))
}

func (s UnreadNotificationsCapn) SetHighLightCount(v int64) {
	s.Struct.SetUint64(0, uint64(v))
}

func (s UnreadNotificationsCapn) NotificationCount() int64 {
	return int64(s.Struct.Uint64(8))
}

func (s UnreadNotificationsCapn) SetNotificationCount(v int64) {
	s.Struct.SetUint64(8, uint64(v))
}

// UnreadNotificationsCapn_List is a list of UnreadNotificationsCapn.
type UnreadNotificationsCapn_List struct{ capnp.List }

// NewUnreadNotificationsCapn creates a new list of UnreadNotificationsCapn.
func NewUnreadNotificationsCapn_List(s *capnp.Segment, sz int32) (UnreadNotificationsCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0}, sz)
	return UnreadNotificationsCapn_List{l}, err
}

func (s UnreadNotificationsCapn_List) At(i int) UnreadNotificationsCapn {
	return UnreadNotificationsCapn{s.List.Struct(i)}
}

func (s UnreadNotificationsCapn_List) Set(i int, v UnreadNotificationsCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s UnreadNotificationsCapn_List) String() string {
	str, _ := text.MarshalList(0xed463b2d9fbf779e, s.List)
	return str
}

// UnreadNotificationsCapn_Promise is a wrapper for a UnreadNotificationsCapn promised by a client call.
type UnreadNotificationsCapn_Promise struct{ *capnp.Pipeline }

func (p UnreadNotificationsCapn_Promise) Struct() (UnreadNotificationsCapn, error) {
	s, err := p.Pipeline.Struct()
	return UnreadNotificationsCapn{s}, err
}

type UnsignedDataCapn struct{ capnp.Struct }

// UnsignedDataCapn_TypeID is the unique identifier for the type UnsignedDataCapn.
const UnsignedDataCapn_TypeID = 0xca2c12f486663543

func NewUnsignedDataCapn(s *capnp.Segment) (UnsignedDataCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return UnsignedDataCapn{st}, err
}

func NewRootUnsignedDataCapn(s *capnp.Segment) (UnsignedDataCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return UnsignedDataCapn{st}, err
}

func ReadRootUnsignedDataCapn(msg *capnp.Message) (UnsignedDataCapn, error) {
	root, err := msg.RootPtr()
	return UnsignedDataCapn{root.Struct()}, err
}

func (s UnsignedDataCapn) String() string {
	str, _ := text.Marshal(0xca2c12f486663543, s.Struct)
	return str
}

func (s UnsignedDataCapn) Age() int64 {
	return int64(s.Struct.Uint64(0))
}

func (s UnsignedDataCapn) SetAge(v int64) {
	s.Struct.SetUint64(0, uint64(v))
}

func (s UnsignedDataCapn) RedactedBecause() (EventCapn, error) {
	p, err := s.Struct.Ptr(0)
	return EventCapn{Struct: p.Struct()}, err
}

func (s UnsignedDataCapn) HasRedactedBecause() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s UnsignedDataCapn) SetRedactedBecause(v EventCapn) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewRedactedBecause sets the redactedBecause field to a newly
// allocated EventCapn struct, preferring placement in s's segment.
func (s UnsignedDataCapn) NewRedactedBecause() (EventCapn, error) {
	ss, err := NewEventCapn(s.Struct.Segment())
	if err != nil {
		return EventCapn{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s UnsignedDataCapn) TransactionID() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s UnsignedDataCapn) HasTransactionID() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s UnsignedDataCapn) TransactionIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s UnsignedDataCapn) SetTransactionID(v string) error {
	return s.Struct.SetText(1, v)
}

// UnsignedDataCapn_List is a list of UnsignedDataCapn.
type UnsignedDataCapn_List struct{ capnp.List }

// NewUnsignedDataCapn creates a new list of UnsignedDataCapn.
func NewUnsignedDataCapn_List(s *capnp.Segment, sz int32) (UnsignedDataCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return UnsignedDataCapn_List{l}, err
}

func (s UnsignedDataCapn_List) At(i int) UnsignedDataCapn { return UnsignedDataCapn{s.List.Struct(i)} }

func (s UnsignedDataCapn_List) Set(i int, v UnsignedDataCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s UnsignedDataCapn_List) String() string {
	str, _ := text.MarshalList(0xca2c12f486663543, s.List)
	return str
}

// UnsignedDataCapn_Promise is a wrapper for a UnsignedDataCapn promised by a client call.
type UnsignedDataCapn_Promise struct{ *capnp.Pipeline }

func (p UnsignedDataCapn_Promise) Struct() (UnsignedDataCapn, error) {
	s, err := p.Pipeline.Struct()
	return UnsignedDataCapn{s}, err
}

func (p UnsignedDataCapn_Promise) RedactedBecause() EventCapn_Promise {
	return EventCapn_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type PutRoomStateByTypeResponseCapn struct{ capnp.Struct }

// PutRoomStateByTypeResponseCapn_TypeID is the unique identifier for the type PutRoomStateByTypeResponseCapn.
const PutRoomStateByTypeResponseCapn_TypeID = 0xd698ad3cbbe793bf

func NewPutRoomStateByTypeResponseCapn(s *capnp.Segment) (PutRoomStateByTypeResponseCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PutRoomStateByTypeResponseCapn{st}, err
}

func NewRootPutRoomStateByTypeResponseCapn(s *capnp.Segment) (PutRoomStateByTypeResponseCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PutRoomStateByTypeResponseCapn{st}, err
}

func ReadRootPutRoomStateByTypeResponseCapn(msg *capnp.Message) (PutRoomStateByTypeResponseCapn, error) {
	root, err := msg.RootPtr()
	return PutRoomStateByTypeResponseCapn{root.Struct()}, err
}

func (s PutRoomStateByTypeResponseCapn) String() string {
	str, _ := text.Marshal(0xd698ad3cbbe793bf, s.Struct)
	return str
}

func (s PutRoomStateByTypeResponseCapn) EventID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PutRoomStateByTypeResponseCapn) HasEventID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PutRoomStateByTypeResponseCapn) EventIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PutRoomStateByTypeResponseCapn) SetEventID(v string) error {
	return s.Struct.SetText(0, v)
}

// PutRoomStateByTypeResponseCapn_List is a list of PutRoomStateByTypeResponseCapn.
type PutRoomStateByTypeResponseCapn_List struct{ capnp.List }

// NewPutRoomStateByTypeResponseCapn creates a new list of PutRoomStateByTypeResponseCapn.
func NewPutRoomStateByTypeResponseCapn_List(s *capnp.Segment, sz int32) (PutRoomStateByTypeResponseCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return PutRoomStateByTypeResponseCapn_List{l}, err
}

func (s PutRoomStateByTypeResponseCapn_List) At(i int) PutRoomStateByTypeResponseCapn {
	return PutRoomStateByTypeResponseCapn{s.List.Struct(i)}
}

func (s PutRoomStateByTypeResponseCapn_List) Set(i int, v PutRoomStateByTypeResponseCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PutRoomStateByTypeResponseCapn_List) String() string {
	str, _ := text.MarshalList(0xd698ad3cbbe793bf, s.List)
	return str
}

// PutRoomStateByTypeResponseCapn_Promise is a wrapper for a PutRoomStateByTypeResponseCapn promised by a client call.
type PutRoomStateByTypeResponseCapn_Promise struct{ *capnp.Pipeline }

func (p PutRoomStateByTypeResponseCapn_Promise) Struct() (PutRoomStateByTypeResponseCapn, error) {
	s, err := p.Pipeline.Struct()
	return PutRoomStateByTypeResponseCapn{s}, err
}

type PutRoomStateByTypeWithTxnIDResponseCapn struct{ capnp.Struct }

// PutRoomStateByTypeWithTxnIDResponseCapn_TypeID is the unique identifier for the type PutRoomStateByTypeWithTxnIDResponseCapn.
const PutRoomStateByTypeWithTxnIDResponseCapn_TypeID = 0xc6d061bd109054f6

func NewPutRoomStateByTypeWithTxnIDResponseCapn(s *capnp.Segment) (PutRoomStateByTypeWithTxnIDResponseCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PutRoomStateByTypeWithTxnIDResponseCapn{st}, err
}

func NewRootPutRoomStateByTypeWithTxnIDResponseCapn(s *capnp.Segment) (PutRoomStateByTypeWithTxnIDResponseCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PutRoomStateByTypeWithTxnIDResponseCapn{st}, err
}

func ReadRootPutRoomStateByTypeWithTxnIDResponseCapn(msg *capnp.Message) (PutRoomStateByTypeWithTxnIDResponseCapn, error) {
	root, err := msg.RootPtr()
	return PutRoomStateByTypeWithTxnIDResponseCapn{root.Struct()}, err
}

func (s PutRoomStateByTypeWithTxnIDResponseCapn) String() string {
	str, _ := text.Marshal(0xc6d061bd109054f6, s.Struct)
	return str
}

func (s PutRoomStateByTypeWithTxnIDResponseCapn) EventID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PutRoomStateByTypeWithTxnIDResponseCapn) HasEventID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PutRoomStateByTypeWithTxnIDResponseCapn) EventIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PutRoomStateByTypeWithTxnIDResponseCapn) SetEventID(v string) error {
	return s.Struct.SetText(0, v)
}

// PutRoomStateByTypeWithTxnIDResponseCapn_List is a list of PutRoomStateByTypeWithTxnIDResponseCapn.
type PutRoomStateByTypeWithTxnIDResponseCapn_List struct{ capnp.List }

// NewPutRoomStateByTypeWithTxnIDResponseCapn creates a new list of PutRoomStateByTypeWithTxnIDResponseCapn.
func NewPutRoomStateByTypeWithTxnIDResponseCapn_List(s *capnp.Segment, sz int32) (PutRoomStateByTypeWithTxnIDResponseCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return PutRoomStateByTypeWithTxnIDResponseCapn_List{l}, err
}

func (s PutRoomStateByTypeWithTxnIDResponseCapn_List) At(i int) PutRoomStateByTypeWithTxnIDResponseCapn {
	return PutRoomStateByTypeWithTxnIDResponseCapn{s.List.Struct(i)}
}

func (s PutRoomStateByTypeWithTxnIDResponseCapn_List) Set(i int, v PutRoomStateByTypeWithTxnIDResponseCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PutRoomStateByTypeWithTxnIDResponseCapn_List) String() string {
	str, _ := text.MarshalList(0xc6d061bd109054f6, s.List)
	return str
}

// PutRoomStateByTypeWithTxnIDResponseCapn_Promise is a wrapper for a PutRoomStateByTypeWithTxnIDResponseCapn promised by a client call.
type PutRoomStateByTypeWithTxnIDResponseCapn_Promise struct{ *capnp.Pipeline }

func (p PutRoomStateByTypeWithTxnIDResponseCapn_Promise) Struct() (PutRoomStateByTypeWithTxnIDResponseCapn, error) {
	s, err := p.Pipeline.Struct()
	return PutRoomStateByTypeWithTxnIDResponseCapn{s}, err
}

type PutRedactEventResponseCapn struct{ capnp.Struct }

// PutRedactEventResponseCapn_TypeID is the unique identifier for the type PutRedactEventResponseCapn.
const PutRedactEventResponseCapn_TypeID = 0xbb6484418a95c835

func NewPutRedactEventResponseCapn(s *capnp.Segment) (PutRedactEventResponseCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PutRedactEventResponseCapn{st}, err
}

func NewRootPutRedactEventResponseCapn(s *capnp.Segment) (PutRedactEventResponseCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PutRedactEventResponseCapn{st}, err
}

func ReadRootPutRedactEventResponseCapn(msg *capnp.Message) (PutRedactEventResponseCapn, error) {
	root, err := msg.RootPtr()
	return PutRedactEventResponseCapn{root.Struct()}, err
}

func (s PutRedactEventResponseCapn) String() string {
	str, _ := text.Marshal(0xbb6484418a95c835, s.Struct)
	return str
}

func (s PutRedactEventResponseCapn) EventID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PutRedactEventResponseCapn) HasEventID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PutRedactEventResponseCapn) EventIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PutRedactEventResponseCapn) SetEventID(v string) error {
	return s.Struct.SetText(0, v)
}

// PutRedactEventResponseCapn_List is a list of PutRedactEventResponseCapn.
type PutRedactEventResponseCapn_List struct{ capnp.List }

// NewPutRedactEventResponseCapn creates a new list of PutRedactEventResponseCapn.
func NewPutRedactEventResponseCapn_List(s *capnp.Segment, sz int32) (PutRedactEventResponseCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return PutRedactEventResponseCapn_List{l}, err
}

func (s PutRedactEventResponseCapn_List) At(i int) PutRedactEventResponseCapn {
	return PutRedactEventResponseCapn{s.List.Struct(i)}
}

func (s PutRedactEventResponseCapn_List) Set(i int, v PutRedactEventResponseCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PutRedactEventResponseCapn_List) String() string {
	str, _ := text.MarshalList(0xbb6484418a95c835, s.List)
	return str
}

// PutRedactEventResponseCapn_Promise is a wrapper for a PutRedactEventResponseCapn promised by a client call.
type PutRedactEventResponseCapn_Promise struct{ *capnp.Pipeline }

func (p PutRedactEventResponseCapn_Promise) Struct() (PutRedactEventResponseCapn, error) {
	s, err := p.Pipeline.Struct()
	return PutRedactEventResponseCapn{s}, err
}

const schema_bbb9351a324b17d4 = "x\xda\xccX{l\x1c\xd5\xf5\xbeg\xee\xae\xcd/\xb2" +
	"c\xefo\xac\xb6DT\x8e]\x93\xf8\x11;\xf6.n" +
	"\xa9)\xda\xc4v\xa0\x0e\x09\xf8\xfa\x015JT\xc6\xbb" +
	"\xd7\xde)\xbb\xb3\xcb\xce\xac\x13G@(\x0a\x94 P" +
	"\x11\x10\x0a\x12\x86P\xc5j\xd2$\x0d&q\x1b\xe7\xd1" +
	"$j\x8c\x88E\xd4\x90&QP\xeb\xd0FJi\x10" +
	"\xa9\x1a\x09(\x0f\x85\xad\xce\xec\xee\xcc\xec\xfa:v\xa2" +
	"\xfeQ\xf9\x9f\xf1\xec7\xf7~\xe7;\xe7|\xe7\xce\xd4" +
	"?>w\x89\xd4\xe0\xfe\xd5\x12B:\xff%\xb9\xf3\x92" +
	"W\xbe\x9b7\xfe\xf4\x86{7\x10O\x01$O}\xf3" +
	".\xef\xbc\xc6\xb1\xfd\xc4-\xe5\x13\"\x7f\x7f\xfe>y" +
	"\xe9|\xbc\xba}\xfe\x1a\x02\xc9\x937\xcdi\xb8\xf3\xb6" +
	"M\xcf\xe4`\xdd\xf9\x84\xf8\x86\xe6\xaf\x03y\x04\xc1\xbe" +
	"\x9d\xf3K\x81@\xf2\xd1\xef\x94E\xe7\xac\xaa{!\x07" +
	"\xedB\xc8\xc12/\xc8\xc7\xcbp\xe9ce\x1f\x12H" +
	"\xce\x19*\xbc\xf9\xfc\xda\x9f\xed \xac\x00\x9c\xe8<\x84" +
	"\x0c\x95\x9f\x94\xb7\x95\xe3s\xc3\xe5?\xc7\xa5K^\xaa" +
	"9\xfd\xf56\xe97\x02\xd2\xbe\xc6\x8a\x0e\x90\xdb*\xf0" +
	"\xb9e\x15k\x08\x1c\xba\xf9\xdd7b\xc7\x9f\x7f\x8b\x15" +
	"\x00\xcd\xa51\\\xe1\x05y\x14\xb1\xbe\x91\x0ase\xe9" +
	"=w\xc9W:\xdf\x9d\xb32\xd2\xf0-[\xd0\x0br" +
	"\xcf\x02\xbc\xec^p\x1f\xa2\xd7\xddv\xe1B\xcf\x9cG" +
	"\xc7rY\x9b\xeam[8!\x8f.\xc4\xab\x91\x85\xbb" +
	"\x08$\x1b\xdf\xd9\xf4\xf4\xd2\x0d\xc1\xfd9K\x03\xae\xb7" +
	"\xba\xb2\x09\xe4H%\x82\xd5J?\x81\xe4'o\x1fx" +
	"i\x9c\xb5\x1e\x10\x817V\xf6\x82<d\x82_1\xc1" +
	"{N\xadr\xed\x9e\xf3\xdaQ\x11x\xac\xd2\x0b\xf21" +
	"\x13<n\x82?\xebz\xae\xf8\xa0r\xe2m\x11\xf8B" +
	"\xe5/A\xbeb\x82\xbf0\xc1\xff7\xb7\xc5\x1f\x7fl" +
	"\xc1\x84\x00,\xdfX5!\xdf\\\x85WeU\x88m" +
	"i\xec{\xf2\x93\xff_4!\x14\x83U}$\xaf6" +
	"\xc1=U(\xc6\xd9\xdfn\xfew<\xfa\xf8\x09Q\xd9" +
	"}Qu^vW\xe3\x15Tc\xd9\x9d\xbb\xa7\xa7\xbf" +
	"O\xfd\xc6\x9fr\xb0\x14\x19?R-\x81\xbc\xd1\x04?" +
	"Q\x8d\x0b\x1fz\xe1\xc3\xfd?\xd8\xf9\xf2\x19Qx\xb5" +
	"5\xf7\x83\xbc\xb4\xc6,\xe8\x1a\xa4\xbc\xef\xde\xfb\xee\xf8" +
	"^\xe1\xf0YQ\x89\xae\xae\x89\x83\xfc\x90\x09\x8e\xd4`" +
	"\x89n\\\xa5\xbc\xb7m\xe1\xea\xf7\x05\xa5!\xb7-\xfa" +
	"R\xee^\x84\x8f\xb1Efe\xbc\xba=o\xfb\xc7\xbb" +
	"w\xfcYDc\xb8\xb6\x03\xe4\xb1Z|n\xb4\x16i" +
	"<\xfd\xe3.\xf8C\x852)R\xf9t\xed\x84\xfc7" +
	"\x13;ib\x83\x9b\x1f9\xf4\xf7}k&Eb\x14" +
	"\xd6\xcd\x03\xf9\xdbufr\xeaP\x8c-\x0f\x9d)\xbc" +
	"qW\xf8\x9c\x08<Z\xd7\x0c\xf2\xb8\x09>b\x82\xef" +
	"\xf8\xa8\xef\x1f+\xfd?\xf9@DY]\\\x0e\xf2\xe0" +
	"b\x04'\x16#\x8d\x7f2co\xc7\xad\x93\x1f\x08V" +
	"\x967-\xde'\x0f\x99\xd8W\x16\xe3\xc2[\xff8\xde" +
	"P\xff\xbb\xc9\xf3\"\x16\x8d\xf5\xbf\x06ye\xbd\xa9a" +
	"=\x82_\xca\xdb}\xf1\xc9\xd1\xbe\x8fEZ\\\xac?" +
	"/\x7fjb/\xd7#\x89\xd7\xd6\x1cz\xbd\xf6\xb6;" +
	".a\xc5I6\xd8L_YC9\xc8\x0d\x0d\x08\xae" +
	"m\xc0*zp\xde\xe5\x89M\xdd\xad\x9f\x8a\xcckS" +
	"C\x13\xc8\xc3\x08\xf6\xbd\xd1`\x9a\xd7\xd0\xbe\xcf\x8f=" +
	"\xa0\x1d\xfeLDc\xc4{R>\xe8\xc5\xab1/\xd2" +
	"8\xbb\xeb\\\xfd\xf63\x0b\xbf\x14\xd5\xf2E\xef[\xf2" +
	"e\x13{\xc9kZ\xe8\xa9_\xb8W\xfe\xfe\xd9\xafD" +
	"\xce\xd5\xe6k\x06\xb9\xc7\x87\xe0n\x1f\x82\x07F>\x0f" +
	"5\x8e\x1c\xbb\"\xca\xc8\x88\xaf\x1a\xe4#&\xf8\xa0\x0f" +
	"Y\xcc}N\xdd\x7f9y\xf8k\x11x\xd2W\x0e\xf2" +
	"%\x13|\xd1\xe7'I\xc7\xdf\xebI>\xc05C\xaf" +
	"\x0b\x80\x12\xd3\x9a\xda\xb4\x01\xd5o\xf0\x16%\xa6\xb5\x03" +
	"\xb0\x1b\xa8\x8b\x10\x17\x10\xe2\xa9\xea%\x84UR`\xb7" +
	"H\xe0\x01(\x01\xbc\xd9\xd0D\x08[D\x81\xdd*A" +
	"2\xa8\xea\xb1\xb02x7\xc9W\"\x1c\x0a\x88\x04\x05" +
	"\x04\xfc\xba\xda\xaf\xf1 \x14\xdb\x15C\x00\x8a\x09X\xdb" +
	"\xbap\xdb\xf6\x84\xd1\xc1\x83J\xc0\xb8O5B]k" +
	"\xb5\xb6\xd6e\xf8s\x07\x7f(\xc1\xfd\xba\x91\xa1Sb" +
	"\xd1y\x04w^K\x81mp\xd0\xf9i3!\xeca" +
	"\x0a\xec)\x09<\x92T\x02\x12!\x9e'\xbc\x84\xb0\xc7" +
	"(\xb0g$\xf0PZ\x02\x94\x10\xcfF||\x03\x05" +
	"\xf6\x9c\x04\x1e\x97\xab\x04\\\x84x\x9e\xc5\xc7\x9f\xa2\xc0" +
	"^\x94\xc0\x1f\x8fF#m\xad\x990\xd6\x9bl\xed\xff" +
	"K\x0d\xe4h\x05\x19\xe7\x8a\x1e\xd5,p \xaa\x19\\" +
	"3\xa0\x90HP\xe8\x08\x95f\x85jG\xa8\x97Z\x11" +
	"\x16[\x11*Hq\x15\x05\x16rD\xc8\x91\xe2\x03\x14" +
	"X\xd8\x11\xa1\x8a\xc8 \x05\x16sD\x18Ad\x88\x02" +
	"3f\x0cf\xb6\xf4%\xa4\xdf\x11\x8dFL\xe6-J" +
	"\x0cL\xca7Y\x94Gq\xcf7)\xb0\x03\x0e\xcac" +
	"\xd5\x84\xb0=\x14\xd8a\x07\xe5\x83\x88\xdcK\x81\x1du" +
	"P>\x82q\x1c\xa0\xc0\xde\x91\x00\xd29\x19_G\x08" +
	";J\x81\x9d\x90\xc0\xe3v\x95\x80\x9b\x10\xcf\xf1\xe5\x84" +
	"\xb0w)\xb0\xb3\x12x\xf2\xdc%\x90G\x88\xe74>" +
	"}\x82\x02\xfb\x8b4%\x84\"c0\xc6\xa7\x0d_\xe7" +
	"Z\x90\xc73\xff&\xa3q\xb5_\xd5:9\xf1\xc7\x07" +
	"x\xbc\xab\x13\xdcD\x027\x81dBK\x153!\x04" +
	"\x8a\xedq\x97\xaa\xe7\x1c\x8d\xb3\xcb\xfbNn\xa0n\x9d" +
	"\x86b\xf0\xe6\xc1\xae\xc1\x18O\xe5\xdd\x16\xd1\xd1h\x18" +
	"G\x05\x05V\xef\x10\xb1\xb6\xc3n4\xe1N]\x831" +
	"\x02|\xca\xee4\xbd{\x9b\xa6\x1a\xaa\x12\xee\x1c\xd4\x02" +
	"\xb9\x15\xe7H\x9f\xd7\x99\xbe%\xe9\xf4-wd*\x93" +
	"\xbe#\xcd\x8eL\xa5\xb37\xde\xe1\xc8\x94\x0bR\xe9;" +
	"\xde\xeb\xc8\x94[J\xa5\xeft\xb5\x9d)O\x1eM\xa5" +
	"\xef}\xdc\xfc\x14\x05\xf6W\x09J\xc3jD5,\xdd" +
	"\x95x \xa4\x0e\xa4t\x07\"\x01\x10Xo\xa8\x11\x1e" +
	"M\xd8\x98\xbeD8\x8c\xf2:E\xd0\xb9\xd1\x1e\xe7:" +
	"'\xf9Z\xc0\xba[\xd4\x17\x8fF\xac6\xd6U\xc7O" +
	"S-);g\x967\xb5\xe4\xa7\xb5\xfb\x96\xa5\xdd+" +
	"\x98\xb5\x17)\xb0\xcd\x8e\xac\x0d\xa1$\xafR`[\x1d" +
	"\xda\x0d\xa3\xa0[(\xb07\x1d\xa5\xbf\x13\xa3\xdfJ\x81" +
	"\xedq\xf8\xd1\x08\xaa\xbc\x83\x02\xdb\x8b\xe2\xb9S\xe2\x8d" +
	"\xce\xb3\x934\x9bJ\xd0\x91\xff]|\x10\xc5\x13\x9aW" +
	"n\xafP56E\x10\xb3\xf3\xbb\xd4\x08\x0f\xab\x9a9" +
	"\x1b\x08\xc1\xf0\x0b\xac\xf0\x97a\xf8K(\xb0U\x12d" +
	"\xa2\xefA\xfa]\x14\xd8\x03\x18=\xa4\xa2_\xdda\xbb" +
	"\x9a?\xb5<\xcc%\xd0N\x01\x8a\xed\x97\x00\x02xs" +
	"\xbdY\x06<\x98Iz2\x16\xe7\x03\xcd\x8a\x11 \x10" +
	"\x12Wz\xae\xb7\xea\xb1\xa8\xe6\xd7\xadi\xe6\xb2\xf8\x16" +
	"\"\xb7\x1b(\xb0\x12i\x8a\x1f\x08[wyT\xd5x" +
	"p%\x8f\xf4\xf2\xb8\x9ei\xde\xfc\xa9\xeb6\xd9\xebN" +
	"\xe7\x08\xd4\xb1l\xd6\x82vO^\xdb\x82\xee\x19\xca5" +
	"\xa5\x83\xceE|g\xa3C*\xfb\xd1V>\xa0\x06\x1c" +
	"\xd9\x17\x90\xac\x10$\xd5:\x1d\xa5\x92\x9a\xbdjw\xda" +
	"R[\x15C)\xcaD\xef(\xab\xf2tY\xad\xb0\xcb" +
	"\xaa\xedqB\xd8\x0f)\xb0.GY\xb18!\xac=" +
	"U\x7f\xf9J?\xb7|!n\x96\x03\x0fB3\x0f(" +
	"\x09\x9d\x93\x1cFx\x121\xe2\x8a\xa6+\x01\x83\x94\xaa" +
	"Qm\xba\xf8S\xd1\xafPuC\xb7tt\x98vs" +
	"\xda\xb4\x978\xda\xffv\xf4\xb9[SL\xd7\x07B\x8a" +
	"\xd6\xcf\x83\x19]p\x8f\xb9\x04\x8a\xc2\xbc\xcf\xc8\xb9\x97" +
	"S\xd2J\xbf\xaa)\x86\x1a\xd5ZB\x09\xedAS\xfe" +
	"\x1c\x91\xbc\xb6H\xd6\xdem\xa8\\+\x05\xd6\xee\xb0\x9e" +
	"\x95\xde\xb4tA\x09JuC\x89\x1b\x99X\xf3\xb9\x16" +
	"\xb4\xec!\x80\x1bM\xdb\x953\xb9\xa4Um\x0a\xbd\xfe" +
	"\xae\x9b\xba\xecR-\xd8\x99\xb2\xb2\xd2\xc1\xd9\x1e\x96:" +
	"\x1c\xe7\xa2\x8c\x06\x11\xb4\xdf0\x05\xb6\xd6a\xbf\x09$" +
	"\x16\xa3\xc0\x1e\xbenS\xbd\xfa\xa9\xe9NnX\xb3\xd7" +
	"q\x9e\x9di~`\xbe^\xa6\xc0\xb68\x02x\x03\xa3" +
	"\xdaL\x81\xedp\x04\xb0\xadw\xd6\xf3\xa3\xda1?\xfa" +
	"\xd4\xb0a\x9f|r\xa6\xe1\xacG\xaa9\x8c\xefI\x18" +
	"\xc2\x11+t\xd3)\xc7\x11\xfb tm\xd6g\x8ak" +
	"2\xd2\xfe\x8b\xd6D\xc5%hU\xb4`\xeee\xf5^" +
	"\x87\xd3\xa1\xd2ic\x98\x8c\x15\x14\xd8\x8ffUb\xd3" +
	"\x96\x93+kz\xe8\xba\xd2\xcfu\xbb\xe5\xfeg\xcc!" +
	"3\xe4\xccA\xdc<\x88Ch\xda\x999\x1bW0_" +
	"N;\xd5~\xcd\xcf\x83\x829Q-\x8a\xf2~Q\x1a" +
	"\xbcv\x1a\x8a\"k\x1d;\xe1 R\x8cD\x9cP\xae" +
	"\xdb'\xa5\xe8\x83\\\x13\x0f\xdc\xa9gz\xdb\xa2\x06\xd3" +
	"\xd1\x8aF\xda\xec+f\xb9=\xd3\xae\xd3\x94\xb2\xfbd" +
	"i \x10Mh\x06\xce\xda\xab\x1d]\xae\xb9S\xba\xb5" +
	"8W\x82wG\x0d\xb5O\x0d\x98\xa3J8\"\xd7\x89" +
	"> <O\x08\xbb%57\x93!\xb5?\xb4B\xed" +
	"\x0f\x11\xbf\xd1\x82D\xad!\xae\xa5\x97\x06s\x0cF\x13" +
	"\x1a\xd8\xbf\x89OU\x99\xbe\xb8\xb6\xcf\x07\xd5\xa2\xcf\x07" +
	"\xe5\xa2\xcf\x07^\xd1\xe7\x83\xa6i?\x1fd9b~" +
	"P\xb5-7\xf5\xa6\x93y\x13\xcd\xf6\xe3\xec\xec-\x8b" +
	"\x85x\x84\xc7\x95\xf0\xd5\xac\xf2Zrg\xb6\x14\xf6\xa7" +
	"}\xee\x14\x1ch\xb2\xdeB\xab\xed\x14^\xf5\x15[\xe8" +
	"VS\xac \xe3V3\xbd\xfb6\xdb\xbb\xce\xf0%c" +
	"z\x07\xcfXd\xd1u\xbe\x0b\xd0\xdc\x96\xbf\xaew\x80" +
	"\xff\x04\x00\x00\xff\xff\x9c\xb0\x04\x0e"

func init() {
	schemas.Register(schema_bbb9351a324b17d4,
		0x8456848ac50636fd,
		0x8c953b47310a1cd2,
		0x932e5c0a6f21237e,
		0xac8778e2250d9d0a,
		0xae02a9fed52b9614,
		0xb20092cd70a1cc25,
		0xb36573fb1405d102,
		0xb97e0a59e5e53b7a,
		0xbb6484418a95c835,
		0xbc4451c596bcc6f4,
		0xc49e0ab3045cd4b4,
		0xc6d061bd109054f6,
		0xca2680723f430e09,
		0xca2c12f486663543,
		0xd0826f72f7a0b6d8,
		0xd316696667594fde,
		0xd698ad3cbbe793bf,
		0xd8a50d37465756ba,
		0xd95d27a9d1615c89,
		0xdbacb3ecab06ab9c,
		0xdd6124c301545f8a,
		0xdd77bae6bf7da064,
		0xde6caf190dd671a4,
		0xdf6a3f4de866ea46,
		0xdfdd3852b87451ee,
		0xe2ddb73031c5cfa8,
		0xec66b586e9b30696,
		0xed463b2d9fbf779e,
		0xf5445595caf11a6b,
		0xf6c06e60c9f8ba9d,
		0xfa27d6ab30deafd8,
		0xfb8dbe4d0597d4d2,
		0xfdc9b13568f8b176,
		0xfec0fff1bb69900e)
}
