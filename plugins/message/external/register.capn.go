// Copyright (C) 2020 Finogeeks Co., Ltd
//
// This program is free software: you can redistribute it and/or  modify
// it under the terms of the GNU Affero General Public License, version 3,
// as published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// Code generated by capnpc-go. DO NOT EDIT.

package external

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type AuthDataCapn struct{ capnp.Struct }

// AuthDataCapn_TypeID is the unique identifier for the type AuthDataCapn.
const AuthDataCapn_TypeID = 0xcfbff7df7450a508

func NewAuthDataCapn(s *capnp.Segment) (AuthDataCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return AuthDataCapn{st}, err
}

func NewRootAuthDataCapn(s *capnp.Segment) (AuthDataCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return AuthDataCapn{st}, err
}

func ReadRootAuthDataCapn(msg *capnp.Message) (AuthDataCapn, error) {
	root, err := msg.RootPtr()
	return AuthDataCapn{root.Struct()}, err
}

func (s AuthDataCapn) String() string {
	str, _ := text.Marshal(0xcfbff7df7450a508, s.Struct)
	return str
}

func (s AuthDataCapn) Type() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s AuthDataCapn) HasType() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s AuthDataCapn) TypeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s AuthDataCapn) SetType(v string) error {
	return s.Struct.SetText(0, v)
}

func (s AuthDataCapn) Session() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s AuthDataCapn) HasSession() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s AuthDataCapn) SessionBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s AuthDataCapn) SetSession(v string) error {
	return s.Struct.SetText(1, v)
}

// AuthDataCapn_List is a list of AuthDataCapn.
type AuthDataCapn_List struct{ capnp.List }

// NewAuthDataCapn creates a new list of AuthDataCapn.
func NewAuthDataCapn_List(s *capnp.Segment, sz int32) (AuthDataCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return AuthDataCapn_List{l}, err
}

func (s AuthDataCapn_List) At(i int) AuthDataCapn { return AuthDataCapn{s.List.Struct(i)} }

func (s AuthDataCapn_List) Set(i int, v AuthDataCapn) error { return s.List.SetStruct(i, v.Struct) }

func (s AuthDataCapn_List) String() string {
	str, _ := text.MarshalList(0xcfbff7df7450a508, s.List)
	return str
}

// AuthDataCapn_Promise is a wrapper for a AuthDataCapn promised by a client call.
type AuthDataCapn_Promise struct{ *capnp.Pipeline }

func (p AuthDataCapn_Promise) Struct() (AuthDataCapn, error) {
	s, err := p.Pipeline.Struct()
	return AuthDataCapn{s}, err
}

type AuthDictCapn struct{ capnp.Struct }

// AuthDictCapn_TypeID is the unique identifier for the type AuthDictCapn.
const AuthDictCapn_TypeID = 0xeee54a14f2c8c4f3

func NewAuthDictCapn(s *capnp.Segment) (AuthDictCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return AuthDictCapn{st}, err
}

func NewRootAuthDictCapn(s *capnp.Segment) (AuthDictCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return AuthDictCapn{st}, err
}

func ReadRootAuthDictCapn(msg *capnp.Message) (AuthDictCapn, error) {
	root, err := msg.RootPtr()
	return AuthDictCapn{root.Struct()}, err
}

func (s AuthDictCapn) String() string {
	str, _ := text.Marshal(0xeee54a14f2c8c4f3, s.Struct)
	return str
}

func (s AuthDictCapn) Type() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s AuthDictCapn) HasType() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s AuthDictCapn) TypeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s AuthDictCapn) SetType(v string) error {
	return s.Struct.SetText(0, v)
}

func (s AuthDictCapn) Session() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s AuthDictCapn) HasSession() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s AuthDictCapn) SessionBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s AuthDictCapn) SetSession(v string) error {
	return s.Struct.SetText(1, v)
}

func (s AuthDictCapn) Mac() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return []byte(p.Data()), err
}

func (s AuthDictCapn) HasMac() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s AuthDictCapn) SetMac(v []byte) error {
	return s.Struct.SetData(2, v)
}

func (s AuthDictCapn) Response() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s AuthDictCapn) HasResponse() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s AuthDictCapn) ResponseBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s AuthDictCapn) SetResponse(v string) error {
	return s.Struct.SetText(3, v)
}

// AuthDictCapn_List is a list of AuthDictCapn.
type AuthDictCapn_List struct{ capnp.List }

// NewAuthDictCapn creates a new list of AuthDictCapn.
func NewAuthDictCapn_List(s *capnp.Segment, sz int32) (AuthDictCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return AuthDictCapn_List{l}, err
}

func (s AuthDictCapn_List) At(i int) AuthDictCapn { return AuthDictCapn{s.List.Struct(i)} }

func (s AuthDictCapn_List) Set(i int, v AuthDictCapn) error { return s.List.SetStruct(i, v.Struct) }

func (s AuthDictCapn_List) String() string {
	str, _ := text.MarshalList(0xeee54a14f2c8c4f3, s.List)
	return str
}

// AuthDictCapn_Promise is a wrapper for a AuthDictCapn promised by a client call.
type AuthDictCapn_Promise struct{ *capnp.Pipeline }

func (p AuthDictCapn_Promise) Struct() (AuthDictCapn, error) {
	s, err := p.Pipeline.Struct()
	return AuthDictCapn{s}, err
}

type AuthFlowCapn struct{ capnp.Struct }

// AuthFlowCapn_TypeID is the unique identifier for the type AuthFlowCapn.
const AuthFlowCapn_TypeID = 0xa57da608a1e656cd

func NewAuthFlowCapn(s *capnp.Segment) (AuthFlowCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return AuthFlowCapn{st}, err
}

func NewRootAuthFlowCapn(s *capnp.Segment) (AuthFlowCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return AuthFlowCapn{st}, err
}

func ReadRootAuthFlowCapn(msg *capnp.Message) (AuthFlowCapn, error) {
	root, err := msg.RootPtr()
	return AuthFlowCapn{root.Struct()}, err
}

func (s AuthFlowCapn) String() string {
	str, _ := text.Marshal(0xa57da608a1e656cd, s.Struct)
	return str
}

func (s AuthFlowCapn) Stages() (capnp.TextList, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.TextList{List: p.List()}, err
}

func (s AuthFlowCapn) HasStages() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s AuthFlowCapn) SetStages(v capnp.TextList) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewStages sets the stages field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s AuthFlowCapn) NewStages(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// AuthFlowCapn_List is a list of AuthFlowCapn.
type AuthFlowCapn_List struct{ capnp.List }

// NewAuthFlowCapn creates a new list of AuthFlowCapn.
func NewAuthFlowCapn_List(s *capnp.Segment, sz int32) (AuthFlowCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return AuthFlowCapn_List{l}, err
}

func (s AuthFlowCapn_List) At(i int) AuthFlowCapn { return AuthFlowCapn{s.List.Struct(i)} }

func (s AuthFlowCapn_List) Set(i int, v AuthFlowCapn) error { return s.List.SetStruct(i, v.Struct) }

func (s AuthFlowCapn_List) String() string {
	str, _ := text.MarshalList(0xa57da608a1e656cd, s.List)
	return str
}

// AuthFlowCapn_Promise is a wrapper for a AuthFlowCapn promised by a client call.
type AuthFlowCapn_Promise struct{ *capnp.Pipeline }

func (p AuthFlowCapn_Promise) Struct() (AuthFlowCapn, error) {
	s, err := p.Pipeline.Struct()
	return AuthFlowCapn{s}, err
}

type GetRegisterAvailCapn struct{ capnp.Struct }

// GetRegisterAvailCapn_TypeID is the unique identifier for the type GetRegisterAvailCapn.
const GetRegisterAvailCapn_TypeID = 0xcf61d6ea9e767aec

func NewGetRegisterAvailCapn(s *capnp.Segment) (GetRegisterAvailCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetRegisterAvailCapn{st}, err
}

func NewRootGetRegisterAvailCapn(s *capnp.Segment) (GetRegisterAvailCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GetRegisterAvailCapn{st}, err
}

func ReadRootGetRegisterAvailCapn(msg *capnp.Message) (GetRegisterAvailCapn, error) {
	root, err := msg.RootPtr()
	return GetRegisterAvailCapn{root.Struct()}, err
}

func (s GetRegisterAvailCapn) String() string {
	str, _ := text.Marshal(0xcf61d6ea9e767aec, s.Struct)
	return str
}

func (s GetRegisterAvailCapn) UserName() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GetRegisterAvailCapn) HasUserName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GetRegisterAvailCapn) UserNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GetRegisterAvailCapn) SetUserName(v string) error {
	return s.Struct.SetText(0, v)
}

// GetRegisterAvailCapn_List is a list of GetRegisterAvailCapn.
type GetRegisterAvailCapn_List struct{ capnp.List }

// NewGetRegisterAvailCapn creates a new list of GetRegisterAvailCapn.
func NewGetRegisterAvailCapn_List(s *capnp.Segment, sz int32) (GetRegisterAvailCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return GetRegisterAvailCapn_List{l}, err
}

func (s GetRegisterAvailCapn_List) At(i int) GetRegisterAvailCapn {
	return GetRegisterAvailCapn{s.List.Struct(i)}
}

func (s GetRegisterAvailCapn_List) Set(i int, v GetRegisterAvailCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetRegisterAvailCapn_List) String() string {
	str, _ := text.MarshalList(0xcf61d6ea9e767aec, s.List)
	return str
}

// GetRegisterAvailCapn_Promise is a wrapper for a GetRegisterAvailCapn promised by a client call.
type GetRegisterAvailCapn_Promise struct{ *capnp.Pipeline }

func (p GetRegisterAvailCapn_Promise) Struct() (GetRegisterAvailCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetRegisterAvailCapn{s}, err
}

type GetRegisterAvailResponseCapn struct{ capnp.Struct }

// GetRegisterAvailResponseCapn_TypeID is the unique identifier for the type GetRegisterAvailResponseCapn.
const GetRegisterAvailResponseCapn_TypeID = 0xb1b696634fdb6440

func NewGetRegisterAvailResponseCapn(s *capnp.Segment) (GetRegisterAvailResponseCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return GetRegisterAvailResponseCapn{st}, err
}

func NewRootGetRegisterAvailResponseCapn(s *capnp.Segment) (GetRegisterAvailResponseCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return GetRegisterAvailResponseCapn{st}, err
}

func ReadRootGetRegisterAvailResponseCapn(msg *capnp.Message) (GetRegisterAvailResponseCapn, error) {
	root, err := msg.RootPtr()
	return GetRegisterAvailResponseCapn{root.Struct()}, err
}

func (s GetRegisterAvailResponseCapn) String() string {
	str, _ := text.Marshal(0xb1b696634fdb6440, s.Struct)
	return str
}

func (s GetRegisterAvailResponseCapn) Available() bool {
	return s.Struct.Bit(0)
}

func (s GetRegisterAvailResponseCapn) SetAvailable(v bool) {
	s.Struct.SetBit(0, v)
}

// GetRegisterAvailResponseCapn_List is a list of GetRegisterAvailResponseCapn.
type GetRegisterAvailResponseCapn_List struct{ capnp.List }

// NewGetRegisterAvailResponseCapn creates a new list of GetRegisterAvailResponseCapn.
func NewGetRegisterAvailResponseCapn_List(s *capnp.Segment, sz int32) (GetRegisterAvailResponseCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return GetRegisterAvailResponseCapn_List{l}, err
}

func (s GetRegisterAvailResponseCapn_List) At(i int) GetRegisterAvailResponseCapn {
	return GetRegisterAvailResponseCapn{s.List.Struct(i)}
}

func (s GetRegisterAvailResponseCapn_List) Set(i int, v GetRegisterAvailResponseCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GetRegisterAvailResponseCapn_List) String() string {
	str, _ := text.MarshalList(0xb1b696634fdb6440, s.List)
	return str
}

// GetRegisterAvailResponseCapn_Promise is a wrapper for a GetRegisterAvailResponseCapn promised by a client call.
type GetRegisterAvailResponseCapn_Promise struct{ *capnp.Pipeline }

func (p GetRegisterAvailResponseCapn_Promise) Struct() (GetRegisterAvailResponseCapn, error) {
	s, err := p.Pipeline.Struct()
	return GetRegisterAvailResponseCapn{s}, err
}

type LegacyRegisterRequestCapn struct{ capnp.Struct }

// LegacyRegisterRequestCapn_TypeID is the unique identifier for the type LegacyRegisterRequestCapn.
const LegacyRegisterRequestCapn_TypeID = 0xbc488e8c2c6feb49

func NewLegacyRegisterRequestCapn(s *capnp.Segment) (LegacyRegisterRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return LegacyRegisterRequestCapn{st}, err
}

func NewRootLegacyRegisterRequestCapn(s *capnp.Segment) (LegacyRegisterRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return LegacyRegisterRequestCapn{st}, err
}

func ReadRootLegacyRegisterRequestCapn(msg *capnp.Message) (LegacyRegisterRequestCapn, error) {
	root, err := msg.RootPtr()
	return LegacyRegisterRequestCapn{root.Struct()}, err
}

func (s LegacyRegisterRequestCapn) String() string {
	str, _ := text.Marshal(0xbc488e8c2c6feb49, s.Struct)
	return str
}

func (s LegacyRegisterRequestCapn) Password() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s LegacyRegisterRequestCapn) HasPassword() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s LegacyRegisterRequestCapn) PasswordBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s LegacyRegisterRequestCapn) SetPassword(v string) error {
	return s.Struct.SetText(0, v)
}

func (s LegacyRegisterRequestCapn) Username() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s LegacyRegisterRequestCapn) HasUsername() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s LegacyRegisterRequestCapn) UsernameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s LegacyRegisterRequestCapn) SetUsername(v string) error {
	return s.Struct.SetText(1, v)
}

func (s LegacyRegisterRequestCapn) Admin() bool {
	return s.Struct.Bit(0)
}

func (s LegacyRegisterRequestCapn) SetAdmin(v bool) {
	s.Struct.SetBit(0, v)
}

func (s LegacyRegisterRequestCapn) Type() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s LegacyRegisterRequestCapn) HasType() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s LegacyRegisterRequestCapn) TypeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s LegacyRegisterRequestCapn) SetType(v string) error {
	return s.Struct.SetText(2, v)
}

func (s LegacyRegisterRequestCapn) Mac() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return []byte(p.Data()), err
}

func (s LegacyRegisterRequestCapn) HasMac() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s LegacyRegisterRequestCapn) SetMac(v []byte) error {
	return s.Struct.SetData(3, v)
}

// LegacyRegisterRequestCapn_List is a list of LegacyRegisterRequestCapn.
type LegacyRegisterRequestCapn_List struct{ capnp.List }

// NewLegacyRegisterRequestCapn creates a new list of LegacyRegisterRequestCapn.
func NewLegacyRegisterRequestCapn_List(s *capnp.Segment, sz int32) (LegacyRegisterRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4}, sz)
	return LegacyRegisterRequestCapn_List{l}, err
}

func (s LegacyRegisterRequestCapn_List) At(i int) LegacyRegisterRequestCapn {
	return LegacyRegisterRequestCapn{s.List.Struct(i)}
}

func (s LegacyRegisterRequestCapn_List) Set(i int, v LegacyRegisterRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s LegacyRegisterRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xbc488e8c2c6feb49, s.List)
	return str
}

// LegacyRegisterRequestCapn_Promise is a wrapper for a LegacyRegisterRequestCapn promised by a client call.
type LegacyRegisterRequestCapn_Promise struct{ *capnp.Pipeline }

func (p LegacyRegisterRequestCapn_Promise) Struct() (LegacyRegisterRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return LegacyRegisterRequestCapn{s}, err
}

type PostAccountDeactivateRequestCapn struct{ capnp.Struct }

// PostAccountDeactivateRequestCapn_TypeID is the unique identifier for the type PostAccountDeactivateRequestCapn.
const PostAccountDeactivateRequestCapn_TypeID = 0xa21771bc6cc61e96

func NewPostAccountDeactivateRequestCapn(s *capnp.Segment) (PostAccountDeactivateRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PostAccountDeactivateRequestCapn{st}, err
}

func NewRootPostAccountDeactivateRequestCapn(s *capnp.Segment) (PostAccountDeactivateRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PostAccountDeactivateRequestCapn{st}, err
}

func ReadRootPostAccountDeactivateRequestCapn(msg *capnp.Message) (PostAccountDeactivateRequestCapn, error) {
	root, err := msg.RootPtr()
	return PostAccountDeactivateRequestCapn{root.Struct()}, err
}

func (s PostAccountDeactivateRequestCapn) String() string {
	str, _ := text.Marshal(0xa21771bc6cc61e96, s.Struct)
	return str
}

func (s PostAccountDeactivateRequestCapn) Auth() (AuthDataCapn, error) {
	p, err := s.Struct.Ptr(0)
	return AuthDataCapn{Struct: p.Struct()}, err
}

func (s PostAccountDeactivateRequestCapn) HasAuth() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PostAccountDeactivateRequestCapn) SetAuth(v AuthDataCapn) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewAuth sets the auth field to a newly
// allocated AuthDataCapn struct, preferring placement in s's segment.
func (s PostAccountDeactivateRequestCapn) NewAuth() (AuthDataCapn, error) {
	ss, err := NewAuthDataCapn(s.Struct.Segment())
	if err != nil {
		return AuthDataCapn{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// PostAccountDeactivateRequestCapn_List is a list of PostAccountDeactivateRequestCapn.
type PostAccountDeactivateRequestCapn_List struct{ capnp.List }

// NewPostAccountDeactivateRequestCapn creates a new list of PostAccountDeactivateRequestCapn.
func NewPostAccountDeactivateRequestCapn_List(s *capnp.Segment, sz int32) (PostAccountDeactivateRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return PostAccountDeactivateRequestCapn_List{l}, err
}

func (s PostAccountDeactivateRequestCapn_List) At(i int) PostAccountDeactivateRequestCapn {
	return PostAccountDeactivateRequestCapn{s.List.Struct(i)}
}

func (s PostAccountDeactivateRequestCapn_List) Set(i int, v PostAccountDeactivateRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PostAccountDeactivateRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xa21771bc6cc61e96, s.List)
	return str
}

// PostAccountDeactivateRequestCapn_Promise is a wrapper for a PostAccountDeactivateRequestCapn promised by a client call.
type PostAccountDeactivateRequestCapn_Promise struct{ *capnp.Pipeline }

func (p PostAccountDeactivateRequestCapn_Promise) Struct() (PostAccountDeactivateRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return PostAccountDeactivateRequestCapn{s}, err
}

func (p PostAccountDeactivateRequestCapn_Promise) Auth() AuthDataCapn_Promise {
	return AuthDataCapn_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type PostAccountPasswordEmailRequestCapn struct{ capnp.Struct }

// PostAccountPasswordEmailRequestCapn_TypeID is the unique identifier for the type PostAccountPasswordEmailRequestCapn.
const PostAccountPasswordEmailRequestCapn_TypeID = 0xf09a324b6bda508f

func NewPostAccountPasswordEmailRequestCapn(s *capnp.Segment) (PostAccountPasswordEmailRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return PostAccountPasswordEmailRequestCapn{st}, err
}

func NewRootPostAccountPasswordEmailRequestCapn(s *capnp.Segment) (PostAccountPasswordEmailRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return PostAccountPasswordEmailRequestCapn{st}, err
}

func ReadRootPostAccountPasswordEmailRequestCapn(msg *capnp.Message) (PostAccountPasswordEmailRequestCapn, error) {
	root, err := msg.RootPtr()
	return PostAccountPasswordEmailRequestCapn{root.Struct()}, err
}

func (s PostAccountPasswordEmailRequestCapn) String() string {
	str, _ := text.Marshal(0xf09a324b6bda508f, s.Struct)
	return str
}

func (s PostAccountPasswordEmailRequestCapn) ClientSecret() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PostAccountPasswordEmailRequestCapn) HasClientSecret() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PostAccountPasswordEmailRequestCapn) ClientSecretBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PostAccountPasswordEmailRequestCapn) SetClientSecret(v string) error {
	return s.Struct.SetText(0, v)
}

func (s PostAccountPasswordEmailRequestCapn) Email() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s PostAccountPasswordEmailRequestCapn) HasEmail() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s PostAccountPasswordEmailRequestCapn) EmailBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s PostAccountPasswordEmailRequestCapn) SetEmail(v string) error {
	return s.Struct.SetText(1, v)
}

func (s PostAccountPasswordEmailRequestCapn) SendAttempt() int64 {
	return int64(s.Struct.Uint64(0))
}

func (s PostAccountPasswordEmailRequestCapn) SetSendAttempt(v int64) {
	s.Struct.SetUint64(0, uint64(v))
}

func (s PostAccountPasswordEmailRequestCapn) NextLink() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s PostAccountPasswordEmailRequestCapn) HasNextLink() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s PostAccountPasswordEmailRequestCapn) NextLinkBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s PostAccountPasswordEmailRequestCapn) SetNextLink(v string) error {
	return s.Struct.SetText(2, v)
}

func (s PostAccountPasswordEmailRequestCapn) IDServer() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s PostAccountPasswordEmailRequestCapn) HasIDServer() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s PostAccountPasswordEmailRequestCapn) IDServerBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s PostAccountPasswordEmailRequestCapn) SetIDServer(v string) error {
	return s.Struct.SetText(3, v)
}

// PostAccountPasswordEmailRequestCapn_List is a list of PostAccountPasswordEmailRequestCapn.
type PostAccountPasswordEmailRequestCapn_List struct{ capnp.List }

// NewPostAccountPasswordEmailRequestCapn creates a new list of PostAccountPasswordEmailRequestCapn.
func NewPostAccountPasswordEmailRequestCapn_List(s *capnp.Segment, sz int32) (PostAccountPasswordEmailRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4}, sz)
	return PostAccountPasswordEmailRequestCapn_List{l}, err
}

func (s PostAccountPasswordEmailRequestCapn_List) At(i int) PostAccountPasswordEmailRequestCapn {
	return PostAccountPasswordEmailRequestCapn{s.List.Struct(i)}
}

func (s PostAccountPasswordEmailRequestCapn_List) Set(i int, v PostAccountPasswordEmailRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PostAccountPasswordEmailRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xf09a324b6bda508f, s.List)
	return str
}

// PostAccountPasswordEmailRequestCapn_Promise is a wrapper for a PostAccountPasswordEmailRequestCapn promised by a client call.
type PostAccountPasswordEmailRequestCapn_Promise struct{ *capnp.Pipeline }

func (p PostAccountPasswordEmailRequestCapn_Promise) Struct() (PostAccountPasswordEmailRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return PostAccountPasswordEmailRequestCapn{s}, err
}

type PostAccountPasswordEmailResponseCapn struct{ capnp.Struct }

// PostAccountPasswordEmailResponseCapn_TypeID is the unique identifier for the type PostAccountPasswordEmailResponseCapn.
const PostAccountPasswordEmailResponseCapn_TypeID = 0xc7c6444c378939c5

func NewPostAccountPasswordEmailResponseCapn(s *capnp.Segment) (PostAccountPasswordEmailResponseCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PostAccountPasswordEmailResponseCapn{st}, err
}

func NewRootPostAccountPasswordEmailResponseCapn(s *capnp.Segment) (PostAccountPasswordEmailResponseCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PostAccountPasswordEmailResponseCapn{st}, err
}

func ReadRootPostAccountPasswordEmailResponseCapn(msg *capnp.Message) (PostAccountPasswordEmailResponseCapn, error) {
	root, err := msg.RootPtr()
	return PostAccountPasswordEmailResponseCapn{root.Struct()}, err
}

func (s PostAccountPasswordEmailResponseCapn) String() string {
	str, _ := text.Marshal(0xc7c6444c378939c5, s.Struct)
	return str
}

func (s PostAccountPasswordEmailResponseCapn) SID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PostAccountPasswordEmailResponseCapn) HasSID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PostAccountPasswordEmailResponseCapn) SIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PostAccountPasswordEmailResponseCapn) SetSID(v string) error {
	return s.Struct.SetText(0, v)
}

// PostAccountPasswordEmailResponseCapn_List is a list of PostAccountPasswordEmailResponseCapn.
type PostAccountPasswordEmailResponseCapn_List struct{ capnp.List }

// NewPostAccountPasswordEmailResponseCapn creates a new list of PostAccountPasswordEmailResponseCapn.
func NewPostAccountPasswordEmailResponseCapn_List(s *capnp.Segment, sz int32) (PostAccountPasswordEmailResponseCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return PostAccountPasswordEmailResponseCapn_List{l}, err
}

func (s PostAccountPasswordEmailResponseCapn_List) At(i int) PostAccountPasswordEmailResponseCapn {
	return PostAccountPasswordEmailResponseCapn{s.List.Struct(i)}
}

func (s PostAccountPasswordEmailResponseCapn_List) Set(i int, v PostAccountPasswordEmailResponseCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PostAccountPasswordEmailResponseCapn_List) String() string {
	str, _ := text.MarshalList(0xc7c6444c378939c5, s.List)
	return str
}

// PostAccountPasswordEmailResponseCapn_Promise is a wrapper for a PostAccountPasswordEmailResponseCapn promised by a client call.
type PostAccountPasswordEmailResponseCapn_Promise struct{ *capnp.Pipeline }

func (p PostAccountPasswordEmailResponseCapn_Promise) Struct() (PostAccountPasswordEmailResponseCapn, error) {
	s, err := p.Pipeline.Struct()
	return PostAccountPasswordEmailResponseCapn{s}, err
}

type PostAccountPasswordMsisdResponseCapn struct{ capnp.Struct }

// PostAccountPasswordMsisdResponseCapn_TypeID is the unique identifier for the type PostAccountPasswordMsisdResponseCapn.
const PostAccountPasswordMsisdResponseCapn_TypeID = 0xb640c6d52e6203d6

func NewPostAccountPasswordMsisdResponseCapn(s *capnp.Segment) (PostAccountPasswordMsisdResponseCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PostAccountPasswordMsisdResponseCapn{st}, err
}

func NewRootPostAccountPasswordMsisdResponseCapn(s *capnp.Segment) (PostAccountPasswordMsisdResponseCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PostAccountPasswordMsisdResponseCapn{st}, err
}

func ReadRootPostAccountPasswordMsisdResponseCapn(msg *capnp.Message) (PostAccountPasswordMsisdResponseCapn, error) {
	root, err := msg.RootPtr()
	return PostAccountPasswordMsisdResponseCapn{root.Struct()}, err
}

func (s PostAccountPasswordMsisdResponseCapn) String() string {
	str, _ := text.Marshal(0xb640c6d52e6203d6, s.Struct)
	return str
}

func (s PostAccountPasswordMsisdResponseCapn) SID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PostAccountPasswordMsisdResponseCapn) HasSID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PostAccountPasswordMsisdResponseCapn) SIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PostAccountPasswordMsisdResponseCapn) SetSID(v string) error {
	return s.Struct.SetText(0, v)
}

// PostAccountPasswordMsisdResponseCapn_List is a list of PostAccountPasswordMsisdResponseCapn.
type PostAccountPasswordMsisdResponseCapn_List struct{ capnp.List }

// NewPostAccountPasswordMsisdResponseCapn creates a new list of PostAccountPasswordMsisdResponseCapn.
func NewPostAccountPasswordMsisdResponseCapn_List(s *capnp.Segment, sz int32) (PostAccountPasswordMsisdResponseCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return PostAccountPasswordMsisdResponseCapn_List{l}, err
}

func (s PostAccountPasswordMsisdResponseCapn_List) At(i int) PostAccountPasswordMsisdResponseCapn {
	return PostAccountPasswordMsisdResponseCapn{s.List.Struct(i)}
}

func (s PostAccountPasswordMsisdResponseCapn_List) Set(i int, v PostAccountPasswordMsisdResponseCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PostAccountPasswordMsisdResponseCapn_List) String() string {
	str, _ := text.MarshalList(0xb640c6d52e6203d6, s.List)
	return str
}

// PostAccountPasswordMsisdResponseCapn_Promise is a wrapper for a PostAccountPasswordMsisdResponseCapn promised by a client call.
type PostAccountPasswordMsisdResponseCapn_Promise struct{ *capnp.Pipeline }

func (p PostAccountPasswordMsisdResponseCapn_Promise) Struct() (PostAccountPasswordMsisdResponseCapn, error) {
	s, err := p.Pipeline.Struct()
	return PostAccountPasswordMsisdResponseCapn{s}, err
}

type PostAccountPasswordMsisdnRequestCapn struct{ capnp.Struct }

// PostAccountPasswordMsisdnRequestCapn_TypeID is the unique identifier for the type PostAccountPasswordMsisdnRequestCapn.
const PostAccountPasswordMsisdnRequestCapn_TypeID = 0xcd4ca44e7984ba13

func NewPostAccountPasswordMsisdnRequestCapn(s *capnp.Segment) (PostAccountPasswordMsisdnRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 5})
	return PostAccountPasswordMsisdnRequestCapn{st}, err
}

func NewRootPostAccountPasswordMsisdnRequestCapn(s *capnp.Segment) (PostAccountPasswordMsisdnRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 5})
	return PostAccountPasswordMsisdnRequestCapn{st}, err
}

func ReadRootPostAccountPasswordMsisdnRequestCapn(msg *capnp.Message) (PostAccountPasswordMsisdnRequestCapn, error) {
	root, err := msg.RootPtr()
	return PostAccountPasswordMsisdnRequestCapn{root.Struct()}, err
}

func (s PostAccountPasswordMsisdnRequestCapn) String() string {
	str, _ := text.Marshal(0xcd4ca44e7984ba13, s.Struct)
	return str
}

func (s PostAccountPasswordMsisdnRequestCapn) ClientSecret() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PostAccountPasswordMsisdnRequestCapn) HasClientSecret() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PostAccountPasswordMsisdnRequestCapn) ClientSecretBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PostAccountPasswordMsisdnRequestCapn) SetClientSecret(v string) error {
	return s.Struct.SetText(0, v)
}

func (s PostAccountPasswordMsisdnRequestCapn) Country() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s PostAccountPasswordMsisdnRequestCapn) HasCountry() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s PostAccountPasswordMsisdnRequestCapn) CountryBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s PostAccountPasswordMsisdnRequestCapn) SetCountry(v string) error {
	return s.Struct.SetText(1, v)
}

func (s PostAccountPasswordMsisdnRequestCapn) PhoneNumber() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s PostAccountPasswordMsisdnRequestCapn) HasPhoneNumber() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s PostAccountPasswordMsisdnRequestCapn) PhoneNumberBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s PostAccountPasswordMsisdnRequestCapn) SetPhoneNumber(v string) error {
	return s.Struct.SetText(2, v)
}

func (s PostAccountPasswordMsisdnRequestCapn) SendAttempt() int64 {
	return int64(s.Struct.Uint64(0))
}

func (s PostAccountPasswordMsisdnRequestCapn) SetSendAttempt(v int64) {
	s.Struct.SetUint64(0, uint64(v))
}

func (s PostAccountPasswordMsisdnRequestCapn) NextLink() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s PostAccountPasswordMsisdnRequestCapn) HasNextLink() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s PostAccountPasswordMsisdnRequestCapn) NextLinkBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s PostAccountPasswordMsisdnRequestCapn) SetNextLink(v string) error {
	return s.Struct.SetText(3, v)
}

func (s PostAccountPasswordMsisdnRequestCapn) IDServer() (string, error) {
	p, err := s.Struct.Ptr(4)
	return p.Text(), err
}

func (s PostAccountPasswordMsisdnRequestCapn) HasIDServer() bool {
	p, err := s.Struct.Ptr(4)
	return p.IsValid() || err != nil
}

func (s PostAccountPasswordMsisdnRequestCapn) IDServerBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(4)
	return p.TextBytes(), err
}

func (s PostAccountPasswordMsisdnRequestCapn) SetIDServer(v string) error {
	return s.Struct.SetText(4, v)
}

// PostAccountPasswordMsisdnRequestCapn_List is a list of PostAccountPasswordMsisdnRequestCapn.
type PostAccountPasswordMsisdnRequestCapn_List struct{ capnp.List }

// NewPostAccountPasswordMsisdnRequestCapn creates a new list of PostAccountPasswordMsisdnRequestCapn.
func NewPostAccountPasswordMsisdnRequestCapn_List(s *capnp.Segment, sz int32) (PostAccountPasswordMsisdnRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 5}, sz)
	return PostAccountPasswordMsisdnRequestCapn_List{l}, err
}

func (s PostAccountPasswordMsisdnRequestCapn_List) At(i int) PostAccountPasswordMsisdnRequestCapn {
	return PostAccountPasswordMsisdnRequestCapn{s.List.Struct(i)}
}

func (s PostAccountPasswordMsisdnRequestCapn_List) Set(i int, v PostAccountPasswordMsisdnRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PostAccountPasswordMsisdnRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xcd4ca44e7984ba13, s.List)
	return str
}

// PostAccountPasswordMsisdnRequestCapn_Promise is a wrapper for a PostAccountPasswordMsisdnRequestCapn promised by a client call.
type PostAccountPasswordMsisdnRequestCapn_Promise struct{ *capnp.Pipeline }

func (p PostAccountPasswordMsisdnRequestCapn_Promise) Struct() (PostAccountPasswordMsisdnRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return PostAccountPasswordMsisdnRequestCapn{s}, err
}

type PostAccountPasswordRequestCapn struct{ capnp.Struct }

// PostAccountPasswordRequestCapn_TypeID is the unique identifier for the type PostAccountPasswordRequestCapn.
const PostAccountPasswordRequestCapn_TypeID = 0x879fbb16e05a3c03

func NewPostAccountPasswordRequestCapn(s *capnp.Segment) (PostAccountPasswordRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return PostAccountPasswordRequestCapn{st}, err
}

func NewRootPostAccountPasswordRequestCapn(s *capnp.Segment) (PostAccountPasswordRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return PostAccountPasswordRequestCapn{st}, err
}

func ReadRootPostAccountPasswordRequestCapn(msg *capnp.Message) (PostAccountPasswordRequestCapn, error) {
	root, err := msg.RootPtr()
	return PostAccountPasswordRequestCapn{root.Struct()}, err
}

func (s PostAccountPasswordRequestCapn) String() string {
	str, _ := text.Marshal(0x879fbb16e05a3c03, s.Struct)
	return str
}

func (s PostAccountPasswordRequestCapn) NewPassword() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PostAccountPasswordRequestCapn) HasNewPassword() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PostAccountPasswordRequestCapn) NewPasswordBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PostAccountPasswordRequestCapn) SetNewPassword(v string) error {
	return s.Struct.SetText(0, v)
}

func (s PostAccountPasswordRequestCapn) Auth() (AuthDataCapn, error) {
	p, err := s.Struct.Ptr(1)
	return AuthDataCapn{Struct: p.Struct()}, err
}

func (s PostAccountPasswordRequestCapn) HasAuth() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s PostAccountPasswordRequestCapn) SetAuth(v AuthDataCapn) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewAuth sets the auth field to a newly
// allocated AuthDataCapn struct, preferring placement in s's segment.
func (s PostAccountPasswordRequestCapn) NewAuth() (AuthDataCapn, error) {
	ss, err := NewAuthDataCapn(s.Struct.Segment())
	if err != nil {
		return AuthDataCapn{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// PostAccountPasswordRequestCapn_List is a list of PostAccountPasswordRequestCapn.
type PostAccountPasswordRequestCapn_List struct{ capnp.List }

// NewPostAccountPasswordRequestCapn creates a new list of PostAccountPasswordRequestCapn.
func NewPostAccountPasswordRequestCapn_List(s *capnp.Segment, sz int32) (PostAccountPasswordRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return PostAccountPasswordRequestCapn_List{l}, err
}

func (s PostAccountPasswordRequestCapn_List) At(i int) PostAccountPasswordRequestCapn {
	return PostAccountPasswordRequestCapn{s.List.Struct(i)}
}

func (s PostAccountPasswordRequestCapn_List) Set(i int, v PostAccountPasswordRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PostAccountPasswordRequestCapn_List) String() string {
	str, _ := text.MarshalList(0x879fbb16e05a3c03, s.List)
	return str
}

// PostAccountPasswordRequestCapn_Promise is a wrapper for a PostAccountPasswordRequestCapn promised by a client call.
type PostAccountPasswordRequestCapn_Promise struct{ *capnp.Pipeline }

func (p PostAccountPasswordRequestCapn_Promise) Struct() (PostAccountPasswordRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return PostAccountPasswordRequestCapn{s}, err
}

func (p PostAccountPasswordRequestCapn_Promise) Auth() AuthDataCapn_Promise {
	return AuthDataCapn_Promise{Pipeline: p.Pipeline.GetPipeline(1)}
}

type PostRegisterEmailRequestCapn struct{ capnp.Struct }

// PostRegisterEmailRequestCapn_TypeID is the unique identifier for the type PostRegisterEmailRequestCapn.
const PostRegisterEmailRequestCapn_TypeID = 0xc092d29cb93f86dc

func NewPostRegisterEmailRequestCapn(s *capnp.Segment) (PostRegisterEmailRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return PostRegisterEmailRequestCapn{st}, err
}

func NewRootPostRegisterEmailRequestCapn(s *capnp.Segment) (PostRegisterEmailRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return PostRegisterEmailRequestCapn{st}, err
}

func ReadRootPostRegisterEmailRequestCapn(msg *capnp.Message) (PostRegisterEmailRequestCapn, error) {
	root, err := msg.RootPtr()
	return PostRegisterEmailRequestCapn{root.Struct()}, err
}

func (s PostRegisterEmailRequestCapn) String() string {
	str, _ := text.Marshal(0xc092d29cb93f86dc, s.Struct)
	return str
}

func (s PostRegisterEmailRequestCapn) ClientSecret() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PostRegisterEmailRequestCapn) HasClientSecret() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PostRegisterEmailRequestCapn) ClientSecretBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PostRegisterEmailRequestCapn) SetClientSecret(v string) error {
	return s.Struct.SetText(0, v)
}

func (s PostRegisterEmailRequestCapn) Email() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s PostRegisterEmailRequestCapn) HasEmail() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s PostRegisterEmailRequestCapn) EmailBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s PostRegisterEmailRequestCapn) SetEmail(v string) error {
	return s.Struct.SetText(1, v)
}

func (s PostRegisterEmailRequestCapn) SendAttempt() int64 {
	return int64(s.Struct.Uint64(0))
}

func (s PostRegisterEmailRequestCapn) SetSendAttempt(v int64) {
	s.Struct.SetUint64(0, uint64(v))
}

func (s PostRegisterEmailRequestCapn) NextLink() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s PostRegisterEmailRequestCapn) HasNextLink() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s PostRegisterEmailRequestCapn) NextLinkBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s PostRegisterEmailRequestCapn) SetNextLink(v string) error {
	return s.Struct.SetText(2, v)
}

func (s PostRegisterEmailRequestCapn) IDServer() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s PostRegisterEmailRequestCapn) HasIDServer() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s PostRegisterEmailRequestCapn) IDServerBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s PostRegisterEmailRequestCapn) SetIDServer(v string) error {
	return s.Struct.SetText(3, v)
}

// PostRegisterEmailRequestCapn_List is a list of PostRegisterEmailRequestCapn.
type PostRegisterEmailRequestCapn_List struct{ capnp.List }

// NewPostRegisterEmailRequestCapn creates a new list of PostRegisterEmailRequestCapn.
func NewPostRegisterEmailRequestCapn_List(s *capnp.Segment, sz int32) (PostRegisterEmailRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4}, sz)
	return PostRegisterEmailRequestCapn_List{l}, err
}

func (s PostRegisterEmailRequestCapn_List) At(i int) PostRegisterEmailRequestCapn {
	return PostRegisterEmailRequestCapn{s.List.Struct(i)}
}

func (s PostRegisterEmailRequestCapn_List) Set(i int, v PostRegisterEmailRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PostRegisterEmailRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xc092d29cb93f86dc, s.List)
	return str
}

// PostRegisterEmailRequestCapn_Promise is a wrapper for a PostRegisterEmailRequestCapn promised by a client call.
type PostRegisterEmailRequestCapn_Promise struct{ *capnp.Pipeline }

func (p PostRegisterEmailRequestCapn_Promise) Struct() (PostRegisterEmailRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return PostRegisterEmailRequestCapn{s}, err
}

type PostRegisterEmailResponseCapn struct{ capnp.Struct }

// PostRegisterEmailResponseCapn_TypeID is the unique identifier for the type PostRegisterEmailResponseCapn.
const PostRegisterEmailResponseCapn_TypeID = 0xa5508c34544c0f89

func NewPostRegisterEmailResponseCapn(s *capnp.Segment) (PostRegisterEmailResponseCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PostRegisterEmailResponseCapn{st}, err
}

func NewRootPostRegisterEmailResponseCapn(s *capnp.Segment) (PostRegisterEmailResponseCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PostRegisterEmailResponseCapn{st}, err
}

func ReadRootPostRegisterEmailResponseCapn(msg *capnp.Message) (PostRegisterEmailResponseCapn, error) {
	root, err := msg.RootPtr()
	return PostRegisterEmailResponseCapn{root.Struct()}, err
}

func (s PostRegisterEmailResponseCapn) String() string {
	str, _ := text.Marshal(0xa5508c34544c0f89, s.Struct)
	return str
}

func (s PostRegisterEmailResponseCapn) SID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PostRegisterEmailResponseCapn) HasSID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PostRegisterEmailResponseCapn) SIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PostRegisterEmailResponseCapn) SetSID(v string) error {
	return s.Struct.SetText(0, v)
}

// PostRegisterEmailResponseCapn_List is a list of PostRegisterEmailResponseCapn.
type PostRegisterEmailResponseCapn_List struct{ capnp.List }

// NewPostRegisterEmailResponseCapn creates a new list of PostRegisterEmailResponseCapn.
func NewPostRegisterEmailResponseCapn_List(s *capnp.Segment, sz int32) (PostRegisterEmailResponseCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return PostRegisterEmailResponseCapn_List{l}, err
}

func (s PostRegisterEmailResponseCapn_List) At(i int) PostRegisterEmailResponseCapn {
	return PostRegisterEmailResponseCapn{s.List.Struct(i)}
}

func (s PostRegisterEmailResponseCapn_List) Set(i int, v PostRegisterEmailResponseCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PostRegisterEmailResponseCapn_List) String() string {
	str, _ := text.MarshalList(0xa5508c34544c0f89, s.List)
	return str
}

// PostRegisterEmailResponseCapn_Promise is a wrapper for a PostRegisterEmailResponseCapn promised by a client call.
type PostRegisterEmailResponseCapn_Promise struct{ *capnp.Pipeline }

func (p PostRegisterEmailResponseCapn_Promise) Struct() (PostRegisterEmailResponseCapn, error) {
	s, err := p.Pipeline.Struct()
	return PostRegisterEmailResponseCapn{s}, err
}

type PostRegisterMsisdResponseCapn struct{ capnp.Struct }

// PostRegisterMsisdResponseCapn_TypeID is the unique identifier for the type PostRegisterMsisdResponseCapn.
const PostRegisterMsisdResponseCapn_TypeID = 0x9b22e2590a4c4fb9

func NewPostRegisterMsisdResponseCapn(s *capnp.Segment) (PostRegisterMsisdResponseCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PostRegisterMsisdResponseCapn{st}, err
}

func NewRootPostRegisterMsisdResponseCapn(s *capnp.Segment) (PostRegisterMsisdResponseCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return PostRegisterMsisdResponseCapn{st}, err
}

func ReadRootPostRegisterMsisdResponseCapn(msg *capnp.Message) (PostRegisterMsisdResponseCapn, error) {
	root, err := msg.RootPtr()
	return PostRegisterMsisdResponseCapn{root.Struct()}, err
}

func (s PostRegisterMsisdResponseCapn) String() string {
	str, _ := text.Marshal(0x9b22e2590a4c4fb9, s.Struct)
	return str
}

func (s PostRegisterMsisdResponseCapn) SID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PostRegisterMsisdResponseCapn) HasSID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PostRegisterMsisdResponseCapn) SIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PostRegisterMsisdResponseCapn) SetSID(v string) error {
	return s.Struct.SetText(0, v)
}

// PostRegisterMsisdResponseCapn_List is a list of PostRegisterMsisdResponseCapn.
type PostRegisterMsisdResponseCapn_List struct{ capnp.List }

// NewPostRegisterMsisdResponseCapn creates a new list of PostRegisterMsisdResponseCapn.
func NewPostRegisterMsisdResponseCapn_List(s *capnp.Segment, sz int32) (PostRegisterMsisdResponseCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return PostRegisterMsisdResponseCapn_List{l}, err
}

func (s PostRegisterMsisdResponseCapn_List) At(i int) PostRegisterMsisdResponseCapn {
	return PostRegisterMsisdResponseCapn{s.List.Struct(i)}
}

func (s PostRegisterMsisdResponseCapn_List) Set(i int, v PostRegisterMsisdResponseCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PostRegisterMsisdResponseCapn_List) String() string {
	str, _ := text.MarshalList(0x9b22e2590a4c4fb9, s.List)
	return str
}

// PostRegisterMsisdResponseCapn_Promise is a wrapper for a PostRegisterMsisdResponseCapn promised by a client call.
type PostRegisterMsisdResponseCapn_Promise struct{ *capnp.Pipeline }

func (p PostRegisterMsisdResponseCapn_Promise) Struct() (PostRegisterMsisdResponseCapn, error) {
	s, err := p.Pipeline.Struct()
	return PostRegisterMsisdResponseCapn{s}, err
}

type PostRegisterMsisdnRequestCapn struct{ capnp.Struct }

// PostRegisterMsisdnRequestCapn_TypeID is the unique identifier for the type PostRegisterMsisdnRequestCapn.
const PostRegisterMsisdnRequestCapn_TypeID = 0xdaab6ace151da989

func NewPostRegisterMsisdnRequestCapn(s *capnp.Segment) (PostRegisterMsisdnRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 5})
	return PostRegisterMsisdnRequestCapn{st}, err
}

func NewRootPostRegisterMsisdnRequestCapn(s *capnp.Segment) (PostRegisterMsisdnRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 5})
	return PostRegisterMsisdnRequestCapn{st}, err
}

func ReadRootPostRegisterMsisdnRequestCapn(msg *capnp.Message) (PostRegisterMsisdnRequestCapn, error) {
	root, err := msg.RootPtr()
	return PostRegisterMsisdnRequestCapn{root.Struct()}, err
}

func (s PostRegisterMsisdnRequestCapn) String() string {
	str, _ := text.Marshal(0xdaab6ace151da989, s.Struct)
	return str
}

func (s PostRegisterMsisdnRequestCapn) ClientSecret() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s PostRegisterMsisdnRequestCapn) HasClientSecret() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PostRegisterMsisdnRequestCapn) ClientSecretBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s PostRegisterMsisdnRequestCapn) SetClientSecret(v string) error {
	return s.Struct.SetText(0, v)
}

func (s PostRegisterMsisdnRequestCapn) Country() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s PostRegisterMsisdnRequestCapn) HasCountry() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s PostRegisterMsisdnRequestCapn) CountryBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s PostRegisterMsisdnRequestCapn) SetCountry(v string) error {
	return s.Struct.SetText(1, v)
}

func (s PostRegisterMsisdnRequestCapn) PhoneNumber() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s PostRegisterMsisdnRequestCapn) HasPhoneNumber() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s PostRegisterMsisdnRequestCapn) PhoneNumberBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s PostRegisterMsisdnRequestCapn) SetPhoneNumber(v string) error {
	return s.Struct.SetText(2, v)
}

func (s PostRegisterMsisdnRequestCapn) SendAttempt() int64 {
	return int64(s.Struct.Uint64(0))
}

func (s PostRegisterMsisdnRequestCapn) SetSendAttempt(v int64) {
	s.Struct.SetUint64(0, uint64(v))
}

func (s PostRegisterMsisdnRequestCapn) NextLink() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s PostRegisterMsisdnRequestCapn) HasNextLink() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s PostRegisterMsisdnRequestCapn) NextLinkBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s PostRegisterMsisdnRequestCapn) SetNextLink(v string) error {
	return s.Struct.SetText(3, v)
}

func (s PostRegisterMsisdnRequestCapn) IDServer() (string, error) {
	p, err := s.Struct.Ptr(4)
	return p.Text(), err
}

func (s PostRegisterMsisdnRequestCapn) HasIDServer() bool {
	p, err := s.Struct.Ptr(4)
	return p.IsValid() || err != nil
}

func (s PostRegisterMsisdnRequestCapn) IDServerBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(4)
	return p.TextBytes(), err
}

func (s PostRegisterMsisdnRequestCapn) SetIDServer(v string) error {
	return s.Struct.SetText(4, v)
}

// PostRegisterMsisdnRequestCapn_List is a list of PostRegisterMsisdnRequestCapn.
type PostRegisterMsisdnRequestCapn_List struct{ capnp.List }

// NewPostRegisterMsisdnRequestCapn creates a new list of PostRegisterMsisdnRequestCapn.
func NewPostRegisterMsisdnRequestCapn_List(s *capnp.Segment, sz int32) (PostRegisterMsisdnRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 5}, sz)
	return PostRegisterMsisdnRequestCapn_List{l}, err
}

func (s PostRegisterMsisdnRequestCapn_List) At(i int) PostRegisterMsisdnRequestCapn {
	return PostRegisterMsisdnRequestCapn{s.List.Struct(i)}
}

func (s PostRegisterMsisdnRequestCapn_List) Set(i int, v PostRegisterMsisdnRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PostRegisterMsisdnRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xdaab6ace151da989, s.List)
	return str
}

// PostRegisterMsisdnRequestCapn_Promise is a wrapper for a PostRegisterMsisdnRequestCapn promised by a client call.
type PostRegisterMsisdnRequestCapn_Promise struct{ *capnp.Pipeline }

func (p PostRegisterMsisdnRequestCapn_Promise) Struct() (PostRegisterMsisdnRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return PostRegisterMsisdnRequestCapn{s}, err
}

type PostRegisterRequestCapn struct{ capnp.Struct }

// PostRegisterRequestCapn_TypeID is the unique identifier for the type PostRegisterRequestCapn.
const PostRegisterRequestCapn_TypeID = 0xf8d8657dfb7a1b21

func NewPostRegisterRequestCapn(s *capnp.Segment) (PostRegisterRequestCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 9})
	return PostRegisterRequestCapn{st}, err
}

func NewRootPostRegisterRequestCapn(s *capnp.Segment) (PostRegisterRequestCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 9})
	return PostRegisterRequestCapn{st}, err
}

func ReadRootPostRegisterRequestCapn(msg *capnp.Message) (PostRegisterRequestCapn, error) {
	root, err := msg.RootPtr()
	return PostRegisterRequestCapn{root.Struct()}, err
}

func (s PostRegisterRequestCapn) String() string {
	str, _ := text.Marshal(0xf8d8657dfb7a1b21, s.Struct)
	return str
}

func (s PostRegisterRequestCapn) Auth() (AuthDictCapn, error) {
	p, err := s.Struct.Ptr(0)
	return AuthDictCapn{Struct: p.Struct()}, err
}

func (s PostRegisterRequestCapn) HasAuth() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s PostRegisterRequestCapn) SetAuth(v AuthDictCapn) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewAuth sets the auth field to a newly
// allocated AuthDictCapn struct, preferring placement in s's segment.
func (s PostRegisterRequestCapn) NewAuth() (AuthDictCapn, error) {
	ss, err := NewAuthDictCapn(s.Struct.Segment())
	if err != nil {
		return AuthDictCapn{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s PostRegisterRequestCapn) BindEmail() bool {
	return s.Struct.Bit(0)
}

func (s PostRegisterRequestCapn) SetBindEmail(v bool) {
	s.Struct.SetBit(0, v)
}

func (s PostRegisterRequestCapn) Username() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s PostRegisterRequestCapn) HasUsername() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s PostRegisterRequestCapn) UsernameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s PostRegisterRequestCapn) SetUsername(v string) error {
	return s.Struct.SetText(1, v)
}

func (s PostRegisterRequestCapn) Password() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s PostRegisterRequestCapn) HasPassword() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s PostRegisterRequestCapn) PasswordBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s PostRegisterRequestCapn) SetPassword(v string) error {
	return s.Struct.SetText(2, v)
}

func (s PostRegisterRequestCapn) DeviceID() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s PostRegisterRequestCapn) HasDeviceID() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s PostRegisterRequestCapn) DeviceIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s PostRegisterRequestCapn) SetDeviceID(v string) error {
	return s.Struct.SetText(3, v)
}

func (s PostRegisterRequestCapn) InitialDisplayName() (string, error) {
	p, err := s.Struct.Ptr(4)
	return p.Text(), err
}

func (s PostRegisterRequestCapn) HasInitialDisplayName() bool {
	p, err := s.Struct.Ptr(4)
	return p.IsValid() || err != nil
}

func (s PostRegisterRequestCapn) InitialDisplayNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(4)
	return p.TextBytes(), err
}

func (s PostRegisterRequestCapn) SetInitialDisplayName(v string) error {
	return s.Struct.SetText(4, v)
}

func (s PostRegisterRequestCapn) InhibitLogin() bool {
	return s.Struct.Bit(1)
}

func (s PostRegisterRequestCapn) SetInhibitLogin(v bool) {
	s.Struct.SetBit(1, v)
}

func (s PostRegisterRequestCapn) Kind() (string, error) {
	p, err := s.Struct.Ptr(5)
	return p.Text(), err
}

func (s PostRegisterRequestCapn) HasKind() bool {
	p, err := s.Struct.Ptr(5)
	return p.IsValid() || err != nil
}

func (s PostRegisterRequestCapn) KindBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(5)
	return p.TextBytes(), err
}

func (s PostRegisterRequestCapn) SetKind(v string) error {
	return s.Struct.SetText(5, v)
}

func (s PostRegisterRequestCapn) Domain() (string, error) {
	p, err := s.Struct.Ptr(6)
	return p.Text(), err
}

func (s PostRegisterRequestCapn) HasDomain() bool {
	p, err := s.Struct.Ptr(6)
	return p.IsValid() || err != nil
}

func (s PostRegisterRequestCapn) DomainBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(6)
	return p.TextBytes(), err
}

func (s PostRegisterRequestCapn) SetDomain(v string) error {
	return s.Struct.SetText(6, v)
}

func (s PostRegisterRequestCapn) AccessToken() (string, error) {
	p, err := s.Struct.Ptr(7)
	return p.Text(), err
}

func (s PostRegisterRequestCapn) HasAccessToken() bool {
	p, err := s.Struct.Ptr(7)
	return p.IsValid() || err != nil
}

func (s PostRegisterRequestCapn) AccessTokenBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(7)
	return p.TextBytes(), err
}

func (s PostRegisterRequestCapn) SetAccessToken(v string) error {
	return s.Struct.SetText(7, v)
}

func (s PostRegisterRequestCapn) RemoteAddr() (string, error) {
	p, err := s.Struct.Ptr(8)
	return p.Text(), err
}

func (s PostRegisterRequestCapn) HasRemoteAddr() bool {
	p, err := s.Struct.Ptr(8)
	return p.IsValid() || err != nil
}

func (s PostRegisterRequestCapn) RemoteAddrBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(8)
	return p.TextBytes(), err
}

func (s PostRegisterRequestCapn) SetRemoteAddr(v string) error {
	return s.Struct.SetText(8, v)
}

func (s PostRegisterRequestCapn) Admin() bool {
	return s.Struct.Bit(2)
}

func (s PostRegisterRequestCapn) SetAdmin(v bool) {
	s.Struct.SetBit(2, v)
}

// PostRegisterRequestCapn_List is a list of PostRegisterRequestCapn.
type PostRegisterRequestCapn_List struct{ capnp.List }

// NewPostRegisterRequestCapn creates a new list of PostRegisterRequestCapn.
func NewPostRegisterRequestCapn_List(s *capnp.Segment, sz int32) (PostRegisterRequestCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 9}, sz)
	return PostRegisterRequestCapn_List{l}, err
}

func (s PostRegisterRequestCapn_List) At(i int) PostRegisterRequestCapn {
	return PostRegisterRequestCapn{s.List.Struct(i)}
}

func (s PostRegisterRequestCapn_List) Set(i int, v PostRegisterRequestCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s PostRegisterRequestCapn_List) String() string {
	str, _ := text.MarshalList(0xf8d8657dfb7a1b21, s.List)
	return str
}

// PostRegisterRequestCapn_Promise is a wrapper for a PostRegisterRequestCapn promised by a client call.
type PostRegisterRequestCapn_Promise struct{ *capnp.Pipeline }

func (p PostRegisterRequestCapn_Promise) Struct() (PostRegisterRequestCapn, error) {
	s, err := p.Pipeline.Struct()
	return PostRegisterRequestCapn{s}, err
}

func (p PostRegisterRequestCapn_Promise) Auth() AuthDictCapn_Promise {
	return AuthDictCapn_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type RegisterResponseCapn struct{ capnp.Struct }

// RegisterResponseCapn_TypeID is the unique identifier for the type RegisterResponseCapn.
const RegisterResponseCapn_TypeID = 0xc235bc5c20ec749c

func NewRegisterResponseCapn(s *capnp.Segment) (RegisterResponseCapn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return RegisterResponseCapn{st}, err
}

func NewRootRegisterResponseCapn(s *capnp.Segment) (RegisterResponseCapn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return RegisterResponseCapn{st}, err
}

func ReadRootRegisterResponseCapn(msg *capnp.Message) (RegisterResponseCapn, error) {
	root, err := msg.RootPtr()
	return RegisterResponseCapn{root.Struct()}, err
}

func (s RegisterResponseCapn) String() string {
	str, _ := text.Marshal(0xc235bc5c20ec749c, s.Struct)
	return str
}

func (s RegisterResponseCapn) UserID() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s RegisterResponseCapn) HasUserID() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s RegisterResponseCapn) UserIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s RegisterResponseCapn) SetUserID(v string) error {
	return s.Struct.SetText(0, v)
}

func (s RegisterResponseCapn) AccessToken() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s RegisterResponseCapn) HasAccessToken() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s RegisterResponseCapn) AccessTokenBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s RegisterResponseCapn) SetAccessToken(v string) error {
	return s.Struct.SetText(1, v)
}

func (s RegisterResponseCapn) HomeServer() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s RegisterResponseCapn) HasHomeServer() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s RegisterResponseCapn) HomeServerBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s RegisterResponseCapn) SetHomeServer(v string) error {
	return s.Struct.SetText(2, v)
}

func (s RegisterResponseCapn) DeviceID() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s RegisterResponseCapn) HasDeviceID() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s RegisterResponseCapn) DeviceIDBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s RegisterResponseCapn) SetDeviceID(v string) error {
	return s.Struct.SetText(3, v)
}

// RegisterResponseCapn_List is a list of RegisterResponseCapn.
type RegisterResponseCapn_List struct{ capnp.List }

// NewRegisterResponseCapn creates a new list of RegisterResponseCapn.
func NewRegisterResponseCapn_List(s *capnp.Segment, sz int32) (RegisterResponseCapn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return RegisterResponseCapn_List{l}, err
}

func (s RegisterResponseCapn_List) At(i int) RegisterResponseCapn {
	return RegisterResponseCapn{s.List.Struct(i)}
}

func (s RegisterResponseCapn_List) Set(i int, v RegisterResponseCapn) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RegisterResponseCapn_List) String() string {
	str, _ := text.MarshalList(0xc235bc5c20ec749c, s.List)
	return str
}

// RegisterResponseCapn_Promise is a wrapper for a RegisterResponseCapn promised by a client call.
type RegisterResponseCapn_Promise struct{ *capnp.Pipeline }

func (p RegisterResponseCapn_Promise) Struct() (RegisterResponseCapn, error) {
	s, err := p.Pipeline.Struct()
	return RegisterResponseCapn{s}, err
}

const schema_e5137205f57b43a9 = "x\xda\xecW\x7fhTW\x16>\xe7\xdd\x99L\xa2\xf9" +
	"\xe1pgw\xd5\xc55\x13\x93\x98\x04\x15\x8d.\xbb\x8a" +
	"K\x123\xee\x9a\xec$\xce\xcd\xe8\xfe\x08.\xf8f\xe6" +
	"\x92y\xc9\xcc\x9b\xc9\xbc\x97\xc4\xb8\x06\xb3\xa0\xbb\x06\xb2" +
	"\xbb*V4\x0d-\x16S+m\xa1\x85V\x9a6\xa1" +
	"\xb6T\xeb?V,TjZh)\xd8bk\x8bm" +
	")m)2\xe5\xbe\xcc\xbcy\x19\x9f?\xb0\xfd\xab\x94" +
	"\xfc3|\xf98\xf3}\xdf9\xf7\xdc;\xab\x1b\x8a\x1b" +
	"\xa55\xceS\x8d\x00\xc1\x9b\x92\xb3 M6v\xbe\xff" +
	"\xcb\x97\x1e\xfd\x0f\xb8K1}\xba\xf9\x9f_9S\xf4" +
	"\x1a8%\x17\xc0\xda\xf5\xe5\xddH\xdb\xca]\x00\xb4\xa5" +
	"|\x000=\xb9\xd5?\xef\xef\x1fT<\x9cGFA" +
	">]\x1eB:m\x90'\xcb\x1b\x00\xd3G\x7fs>" +
	"6\xd5\xfb\xab\xc7\xec\xc8W\xcbw#\xfd\xd4 _7" +
	"\xc8#e\xfem\xebF\x03\x13v\xe4\"o\x08\xe9\x12" +
	"\xaf /\xf2\x0a\xf2\xc5\xbf|x\xa2\xf0\xf1!;2" +
	"]\xef\x9d\xa1\x9b\x0dn\x93\xc1m\x8c\xbc\xb35|\xf4" +
	"\xcc\xb3\xc0J\xd1Bv\x88\xc2\xbd\xdeN\xa4\xfb\x0d\xf2" +
	"\xbf\x0c\xf2\x15\x12Z\xf5\xd6\xf9\xc63v*&\xbcc" +
	"H\xa7\x0d\xf2\xa4An\xf9$\xb1b\xf4\x7f[\xa6\xf2" +
	"*;\x8d\xd2W\xbd\x9b\x90^\x17\xec\xb5\xd7\xbcK\x11" +
	"0\xfd\xee\xbf\x1b&\xc7\xdf<|\xd6\x96~\xab\xa2\x13" +
	"\xa9{\x99\xf8X\xb2\xcc\xa0\x8f\xeb7\xcawL\xfd\xf6" +
	"\xd5<)\x06{e\xe5b\xa4\x7f\xa84\xecV~\x04" +
	"\x98>\xb7~\xe4w~\xdf\xf9\xd7\xedt/\xaa\x1aC" +
	"\xba\xa6J\x90WV\x09\xdd\xf4\xc5}\x83\xed'\xfd\x17" +
	"\xf3\x858\x05\xbbM\xb0\xb9`\xaf\x95\xab\xfe*\x84\xdc" +
	"\xd8\xdd\xff\xc8\xc7W\xe4Kv\xb5_\xa9^\x8c\xf4r" +
	"\xb5\xa8}\xb1Z\xd4.\x9c\x08\xe8\xef}\xfd\xf2%\x9b" +
	"i\xa2\x9fW\xcf\xd0[\x06\xf7\xdbj1L#\xa7\x97" +
	"\xfc\xe2\x8d\xee'glul_\x1eB\xaa,\x17\x1f" +
	"\xf9rC\xc7\x97\xaf]\xf8\xc2\xd3z\xed3\x9b@\xe8" +
	"\xb9\x9a\x19z\xb9\xc6\x90Q#\xf2\xf8\x7f`\xa6\xe7\xcf" +
	"\xf5c7m\xb3\x9e\xa8=\x8ct\xbaV|\x9c\xac5" +
	"\xb2\xf6\xfez\xf7wC\xfc\xedo\xf2\xe9EF'\xeb" +
	"\xea\x91^\xaf3:YwJ\x82\xf4\x9c\xbf\xad\xe9\x14" +
	"\xefR4\x9d\xa7\x1c\xab\xc2rR\xdd\x10HhzS" +
	"8\x9c\xe8S\xf5\x80\xaci\x03\x89T\xa4\x83\xf7\xf6q" +
	"M/k\x96\x93j\x00\x91\x15\x12\x07\x80\x03\x01\xdc\xb5" +
	"!\x00VC\x90\xad\x93\xd0\x8d\xe8A\x01\xae\xa9\x03`" +
	"+\x08\xb2\xdfK\x98V\xf9\x80Q\x06\\\x89T\x04\x8b" +
	"A\xc2b\xc02\xb9O\x8f\xe2\x82\\\xda\x80\xb8\x00\xd0" +
	"NJG\x06j\xd3\x14-\xd2\xc1\xb5dB\xd5x\xb3" +
	"+\xa3\xc4a*)\xa9\x00`\x85\x04\x99GB\x97\xd6" +
	"\xe2\xcb~\xd5]\xec\xf9\xb8\x1c\xd6\x95~Y\xe7\x86\xc1" +
	"\x06Mo\xbe\xbdl]\xae\xec\x03\xa8\xde\x1c\x97\x95\xd8" +
	"\x0fQ-\xcd\xd6l\xea\xd3\xa3\x7f\x8c%\x06\x9aer" +
	"[\x89\x0d\x99\x12\x95\x126h\xba\xdc\xc55,\x05\x0c" +
	"\x104\x8a\x95\xde.\xf0O\xdc\xd4\xd7\xd4o\xd5gS" +
	"\xbc\x03\x80\x15\x13d\x0b%L\xcb\x82,\x87b\x80\x1c" +
	"\x11$DKi\xe7\x1d\x87gn\xe3l\xbe\xe2>\x1b" +
	"\xe7\xe7]rx0+<3\x92\xa2a \xeay\xcc" +
	"zC\xad\x00l\x0fAv\xc02\x92\xfb\x05\xb8\x8f " +
	";(!J\x1e\x94\x00\xdc\xff\xad\x07`\x07\x08\xb2#" +
	"\x12\xba\x89\xe4A\x02\xe0>$\xfa=J\x90\x1d\x93\xd0" +
	"\xed \x1et\x00\xb8\x1f\x12\x12\x0f\x12d\xe3\x12\xa6\x93" +
	"\x19_\x00`J\xed\xd3xJ\x95\xe3\xdc\x82-\x95#" +
	"qE\xcd\xe6T\xa6\x0f&y\xf6_\xae\xb8\x1c\xc6\x12" +
	"\x90\xb0\xe4\xbe\x86'c4\x13\x9c\xc5h\xb7\x9dQa" +
	"j\x98 \x1b\xcd\x19\x1d\x09\xd9\x19m\xcdy2\x8d\x1e" +
	"\x17\xe01\x82\xec\xa4\x84\xe9pL\xe1\xaa\x1e\xe4P\x16" +
	"Nq\xdd\xf4\xc5\x85*\xd3\xb9\xc6\xd5H\x93\xaesp" +
	"\xc5\x93::AB'\x88C\xbfK\xf7+j\x8f5" +
	"#\xc5\x17\xe4\xa9~\x9e\xb2bY\xf3d\xd6|\xae\xb9" +
	"y\xd3\xb2\xc04-\x8bi\xdfA\x90E-\xa6\xb90" +
	"\x18!\xc8\x92\x12\xba\xa5\x8c\xebx'\x00\x8b\x11d\xbb" +
	"\x84k2\xeb\xbaO\x18\xd4\x09\xb2a\x09\x1bD\xd7," +
	"\xf3&\x87\xc3\\\xd3\xb6%\xc0\xd5\xc3U\x13\x8d&\xe2" +
	"\\\x08\x07\xc2S&\x18\xe1\xfdJ\x98\xb7\xf8\xec\xbc\xdc" +
	"\xf9$\xcc]\x06\x0fp\x12\xeeq\xc8\xd4\xfcYYh" +
	"\x96>\xde\x9dk\xac\x19\xdb\x89M\x00l\x9c {\xc2" +
	"\x12\xdb\x84\xc8\xf2$A\xf6\x8c\x84\x98I\xedi\x81=" +
	"E\x90\xbd`\x99\x95\xe7E\x94\xcf\x11dg%t;" +
	"\x1d\x1et\x02\xb8\xa7\x058E\x90]\xb8\xe3\x00\xed5" +
	"\x84\xa7\x06Mw\xc9hB\xe5\xed}qp\x85,\x11" +
	"\xff\xa8\x83\x95\xbf\xf1\xec\xc2o\xb5l:1\x19\xeds" +
	"\xcf\xb3\xddF\xf6\xc9\xbal\x96\xb2\\\x8ab\x87T\x12" +
	"d\xab-a\xaf\xdc\x94\xbb)\xe7l\x83\xbd\x1a\xd74" +
	"%\xa1\xde\xed\xc2\x9as\x09\x9am\xce^'?\xb7\xd9" +
	"\xda\x13%\xac\xdb\xed\x8d:\xbb\xbd!\x92\xd9I\x90\xc5" +
	",\xc9(\x15\x96e\x92\xdd\x1b\xf1\xd6\xdc2\xb9k\xf7" +
	"\xf2v\xfb\xecY\x7f\xa05\x91\xbd\xdf\xf0'\xbf\xf6\xad" +
	"\x13>\xeb{\xa9\xf9\x12[\x9d\xf5M\x9b\xb0\x0e \xb8" +
	"\x11\x09\x06\xb7\xa0\x84\x19\xe7t3v\x00\x04}\x02\x0e" +
	"\xa0h#\x1a\xeei\x1b\xb6\x02\x04\xfd\x02\xff\x1b\xe6\x02" +
	"\xa0\xdb\x0d|\x9b\xc0wb.\x03\xfa\x0f\x03\xdf!\xf0" +
	"(\xe6F\x9dr\x1c\x03\x08F\x05\xae\x0b\xbc\x00=X" +
	"\x00@{\xb1\x1b \x98\x14\xf8\x1e\x81\xbb\x9c\x1e\xe3\xe7" +
	"\xdb\xa0!S\x17\xf8\xb0\xc0\x0b\x0b<X\x08@\x87p" +
	"\x03@p\x97\xc0\xf7\x09\xbc\xc8\xe5\xc1\"\xf1\xbb\x0dC" +
	"\x00\xc1a\x81\x8f\x0a|^\xa1\x07\xe7\x01\xd0\x11\xec\x04" +
	"\x08\x1e\x10\xf8\x11\x81\xcf\x97<8\x1f\x80\x1e\xc2z\x80" +
	"\xe0\xa8\xc0\x8fa\xeeMj\xfe\xb8\xc8\xbcIC\x8aj" +
	"\x0c\x12`\xcc|\xab\xd9\xbcRl_3v\xb7\x9b\xa2" +
	"*\xba\"\xc7|\xa8h\xc9\x98<\xd8.\x938\xb7\xfc" +
	"3\xaa\x84\x14\xdd\x0fe\x89.\xcb\x9b\xa7GQ\xcd\x17" +
	"\x7fC$\x11\x97\x15\xf5\x1e\x97m\x8a\xc7\x13:o\x8a" +
	"\x00\x89\xa4\xec\x1fR\xdf\x07\x00\x00\xff\xff\xf9\x0f\xc8\x7f"

func init() {
	schemas.Register(schema_e5137205f57b43a9,
		0x879fbb16e05a3c03,
		0x9b22e2590a4c4fb9,
		0xa21771bc6cc61e96,
		0xa5508c34544c0f89,
		0xa57da608a1e656cd,
		0xb1b696634fdb6440,
		0xb640c6d52e6203d6,
		0xbc488e8c2c6feb49,
		0xc092d29cb93f86dc,
		0xc235bc5c20ec749c,
		0xc7c6444c378939c5,
		0xcd4ca44e7984ba13,
		0xcf61d6ea9e767aec,
		0xcfbff7df7450a508,
		0xdaab6ace151da989,
		0xeee54a14f2c8c4f3,
		0xf09a324b6bda508f,
		0xf8d8657dfb7a1b21)
}
