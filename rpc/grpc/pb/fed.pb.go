// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: fed.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SendEDUReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Origin      string `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
	Destination string `protobuf:"bytes,3,opt,name=destination,proto3" json:"destination,omitempty"`
	Content     []byte `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *SendEDUReq) Reset() {
	*x = SendEDUReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fed_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendEDUReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEDUReq) ProtoMessage() {}

func (x *SendEDUReq) ProtoReflect() protoreflect.Message {
	mi := &file_fed_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEDUReq.ProtoReflect.Descriptor instead.
func (*SendEDUReq) Descriptor() ([]byte, []int) {
	return file_fed_proto_rawDescGZIP(), []int{0}
}

func (x *SendEDUReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SendEDUReq) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *SendEDUReq) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *SendEDUReq) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type GetFedAliasRoomIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetDomain string `protobuf:"bytes,1,opt,name=targetDomain,proto3" json:"targetDomain,omitempty"`
	RoomAlias    string `protobuf:"bytes,2,opt,name=roomAlias,proto3" json:"roomAlias,omitempty"`
}

func (x *GetFedAliasRoomIDReq) Reset() {
	*x = GetFedAliasRoomIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fed_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFedAliasRoomIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFedAliasRoomIDReq) ProtoMessage() {}

func (x *GetFedAliasRoomIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_fed_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFedAliasRoomIDReq.ProtoReflect.Descriptor instead.
func (*GetFedAliasRoomIDReq) Descriptor() ([]byte, []int) {
	return file_fed_proto_rawDescGZIP(), []int{1}
}

func (x *GetFedAliasRoomIDReq) GetTargetDomain() string {
	if x != nil {
		return x.TargetDomain
	}
	return ""
}

func (x *GetFedAliasRoomIDReq) GetRoomAlias() string {
	if x != nil {
		return x.RoomAlias
	}
	return ""
}

type GetFddAliasRoomIDRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomID  string   `protobuf:"bytes,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	Servers []string `protobuf:"bytes,2,rep,name=servers,proto3" json:"servers,omitempty"`
}

func (x *GetFddAliasRoomIDRsp) Reset() {
	*x = GetFddAliasRoomIDRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fed_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFddAliasRoomIDRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFddAliasRoomIDRsp) ProtoMessage() {}

func (x *GetFddAliasRoomIDRsp) ProtoReflect() protoreflect.Message {
	mi := &file_fed_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFddAliasRoomIDRsp.ProtoReflect.Descriptor instead.
func (*GetFddAliasRoomIDRsp) Descriptor() ([]byte, []int) {
	return file_fed_proto_rawDescGZIP(), []int{2}
}

func (x *GetFddAliasRoomIDRsp) GetRoomID() string {
	if x != nil {
		return x.RoomID
	}
	return ""
}

func (x *GetFddAliasRoomIDRsp) GetServers() []string {
	if x != nil {
		return x.Servers
	}
	return nil
}

type GetProfileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetDomain string `protobuf:"bytes,1,opt,name=targetDomain,proto3" json:"targetDomain,omitempty"`
	UserID       string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *GetProfileReq) Reset() {
	*x = GetProfileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fed_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileReq) ProtoMessage() {}

func (x *GetProfileReq) ProtoReflect() protoreflect.Message {
	mi := &file_fed_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileReq.ProtoReflect.Descriptor instead.
func (*GetProfileReq) Descriptor() ([]byte, []int) {
	return file_fed_proto_rawDescGZIP(), []int{3}
}

func (x *GetProfileReq) GetTargetDomain() string {
	if x != nil {
		return x.TargetDomain
	}
	return ""
}

func (x *GetProfileReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetProfileRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarURL    string `protobuf:"bytes,1,opt,name=avatarURL,proto3" json:"avatarURL,omitempty"`
	DisplayName  string `protobuf:"bytes,2,opt,name=displayName,proto3" json:"displayName,omitempty"`
	Status       string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	StatusMsg    string `protobuf:"bytes,4,opt,name=statusMsg,proto3" json:"statusMsg,omitempty"`
	ExtStatusMsg string `protobuf:"bytes,5,opt,name=extStatusMsg,proto3" json:"extStatusMsg,omitempty"`
}

func (x *GetProfileRsp) Reset() {
	*x = GetProfileRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fed_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileRsp) ProtoMessage() {}

func (x *GetProfileRsp) ProtoReflect() protoreflect.Message {
	mi := &file_fed_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileRsp.ProtoReflect.Descriptor instead.
func (*GetProfileRsp) Descriptor() ([]byte, []int) {
	return file_fed_proto_rawDescGZIP(), []int{4}
}

func (x *GetProfileRsp) GetAvatarURL() string {
	if x != nil {
		return x.AvatarURL
	}
	return ""
}

func (x *GetProfileRsp) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *GetProfileRsp) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetProfileRsp) GetStatusMsg() string {
	if x != nil {
		return x.StatusMsg
	}
	return ""
}

func (x *GetProfileRsp) GetExtStatusMsg() string {
	if x != nil {
		return x.ExtStatusMsg
	}
	return ""
}

type GetAvatarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetDomain string `protobuf:"bytes,1,opt,name=targetDomain,proto3" json:"targetDomain,omitempty"`
	UserID       string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *GetAvatarReq) Reset() {
	*x = GetAvatarReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fed_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvatarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvatarReq) ProtoMessage() {}

func (x *GetAvatarReq) ProtoReflect() protoreflect.Message {
	mi := &file_fed_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvatarReq.ProtoReflect.Descriptor instead.
func (*GetAvatarReq) Descriptor() ([]byte, []int) {
	return file_fed_proto_rawDescGZIP(), []int{5}
}

func (x *GetAvatarReq) GetTargetDomain() string {
	if x != nil {
		return x.TargetDomain
	}
	return ""
}

func (x *GetAvatarReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetAvatarRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarURL string `protobuf:"bytes,1,opt,name=avatarURL,proto3" json:"avatarURL,omitempty"`
}

func (x *GetAvatarRsp) Reset() {
	*x = GetAvatarRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fed_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvatarRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvatarRsp) ProtoMessage() {}

func (x *GetAvatarRsp) ProtoReflect() protoreflect.Message {
	mi := &file_fed_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvatarRsp.ProtoReflect.Descriptor instead.
func (*GetAvatarRsp) Descriptor() ([]byte, []int) {
	return file_fed_proto_rawDescGZIP(), []int{6}
}

func (x *GetAvatarRsp) GetAvatarURL() string {
	if x != nil {
		return x.AvatarURL
	}
	return ""
}

type GetDisplayNameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetDomain string `protobuf:"bytes,1,opt,name=targetDomain,proto3" json:"targetDomain,omitempty"`
	UserID       string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *GetDisplayNameReq) Reset() {
	*x = GetDisplayNameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fed_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDisplayNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDisplayNameReq) ProtoMessage() {}

func (x *GetDisplayNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_fed_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDisplayNameReq.ProtoReflect.Descriptor instead.
func (*GetDisplayNameReq) Descriptor() ([]byte, []int) {
	return file_fed_proto_rawDescGZIP(), []int{7}
}

func (x *GetDisplayNameReq) GetTargetDomain() string {
	if x != nil {
		return x.TargetDomain
	}
	return ""
}

func (x *GetDisplayNameReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetDisplayNameRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayName string `protobuf:"bytes,1,opt,name=displayName,proto3" json:"displayName,omitempty"`
}

func (x *GetDisplayNameRsp) Reset() {
	*x = GetDisplayNameRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fed_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDisplayNameRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDisplayNameRsp) ProtoMessage() {}

func (x *GetDisplayNameRsp) ProtoReflect() protoreflect.Message {
	mi := &file_fed_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDisplayNameRsp.ProtoReflect.Descriptor instead.
func (*GetDisplayNameRsp) Descriptor() ([]byte, []int) {
	return file_fed_proto_rawDescGZIP(), []int{8}
}

func (x *GetDisplayNameRsp) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

type GetRoomStateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetDomain string `protobuf:"bytes,1,opt,name=targetDomain,proto3" json:"targetDomain,omitempty"`
	RoomID       string `protobuf:"bytes,2,opt,name=roomID,proto3" json:"roomID,omitempty"`
	EventID      string `protobuf:"bytes,3,opt,name=eventID,proto3" json:"eventID,omitempty"`
}

func (x *GetRoomStateReq) Reset() {
	*x = GetRoomStateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fed_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomStateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomStateReq) ProtoMessage() {}

func (x *GetRoomStateReq) ProtoReflect() protoreflect.Message {
	mi := &file_fed_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomStateReq.ProtoReflect.Descriptor instead.
func (*GetRoomStateReq) Descriptor() ([]byte, []int) {
	return file_fed_proto_rawDescGZIP(), []int{9}
}

func (x *GetRoomStateReq) GetTargetDomain() string {
	if x != nil {
		return x.TargetDomain
	}
	return ""
}

func (x *GetRoomStateReq) GetRoomID() string {
	if x != nil {
		return x.RoomID
	}
	return ""
}

func (x *GetRoomStateReq) GetEventID() string {
	if x != nil {
		return x.EventID
	}
	return ""
}

type GetRoomStateRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateEvents []*Event `protobuf:"bytes,1,rep,name=stateEvents,proto3" json:"stateEvents,omitempty"`
	AuthEvents  []*Event `protobuf:"bytes,2,rep,name=authEvents,proto3" json:"authEvents,omitempty"`
}

func (x *GetRoomStateRsp) Reset() {
	*x = GetRoomStateRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fed_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomStateRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomStateRsp) ProtoMessage() {}

func (x *GetRoomStateRsp) ProtoReflect() protoreflect.Message {
	mi := &file_fed_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomStateRsp.ProtoReflect.Descriptor instead.
func (*GetRoomStateRsp) Descriptor() ([]byte, []int) {
	return file_fed_proto_rawDescGZIP(), []int{10}
}

func (x *GetRoomStateRsp) GetStateEvents() []*Event {
	if x != nil {
		return x.StateEvents
	}
	return nil
}

func (x *GetRoomStateRsp) GetAuthEvents() []*Event {
	if x != nil {
		return x.AuthEvents
	}
	return nil
}

type DownloadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetDomain string `protobuf:"bytes,1,opt,name=targetDomain,proto3" json:"targetDomain,omitempty"`
	Id           string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	FileType     string `protobuf:"bytes,3,opt,name=fileType,proto3" json:"fileType,omitempty"`
	MediaID      string `protobuf:"bytes,4,opt,name=mediaID,proto3" json:"mediaID,omitempty"`
	Width        string `protobuf:"bytes,5,opt,name=width,proto3" json:"width,omitempty"`
	Method       string `protobuf:"bytes,6,opt,name=method,proto3" json:"method,omitempty"`
}

func (x *DownloadReq) Reset() {
	*x = DownloadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fed_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadReq) ProtoMessage() {}

func (x *DownloadReq) ProtoReflect() protoreflect.Message {
	mi := &file_fed_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadReq.ProtoReflect.Descriptor instead.
func (*DownloadReq) Descriptor() ([]byte, []int) {
	return file_fed_proto_rawDescGZIP(), []int{11}
}

func (x *DownloadReq) GetTargetDomain() string {
	if x != nil {
		return x.TargetDomain
	}
	return ""
}

func (x *DownloadReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DownloadReq) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *DownloadReq) GetMediaID() string {
	if x != nil {
		return x.MediaID
	}
	return ""
}

func (x *DownloadReq) GetWidth() string {
	if x != nil {
		return x.Width
	}
	return ""
}

func (x *DownloadReq) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

type DownloadRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seq  int64  `protobuf:"varint,1,opt,name=seq,proto3" json:"seq,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DownloadRsp) Reset() {
	*x = DownloadRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fed_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadRsp) ProtoMessage() {}

func (x *DownloadRsp) ProtoReflect() protoreflect.Message {
	mi := &file_fed_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadRsp.ProtoReflect.Descriptor instead.
func (*DownloadRsp) Descriptor() ([]byte, []int) {
	return file_fed_proto_rawDescGZIP(), []int{12}
}

func (x *DownloadRsp) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *DownloadRsp) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetDomain string `protobuf:"bytes,1,opt,name=targetDomain,proto3" json:"targetDomain,omitempty"`
	UserID       string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *GetUserInfoReq) Reset() {
	*x = GetUserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fed_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoReq) ProtoMessage() {}

func (x *GetUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_fed_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoReq.ProtoReflect.Descriptor instead.
func (*GetUserInfoReq) Descriptor() ([]byte, []int) {
	return file_fed_proto_rawDescGZIP(), []int{13}
}

func (x *GetUserInfoReq) GetTargetDomain() string {
	if x != nil {
		return x.TargetDomain
	}
	return ""
}

func (x *GetUserInfoReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetUserInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName  string `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
	JobNumber string `protobuf:"bytes,2,opt,name=jobNumber,proto3" json:"jobNumber,omitempty"`
	Mobile    string `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Landline  string `protobuf:"bytes,4,opt,name=landline,proto3" json:"landline,omitempty"`
	Email     string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	State     int32  `protobuf:"varint,6,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *GetUserInfoRsp) Reset() {
	*x = GetUserInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fed_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoRsp) ProtoMessage() {}

func (x *GetUserInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_fed_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoRsp.ProtoReflect.Descriptor instead.
func (*GetUserInfoRsp) Descriptor() ([]byte, []int) {
	return file_fed_proto_rawDescGZIP(), []int{14}
}

func (x *GetUserInfoRsp) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *GetUserInfoRsp) GetJobNumber() string {
	if x != nil {
		return x.JobNumber
	}
	return ""
}

func (x *GetUserInfoRsp) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *GetUserInfoRsp) GetLandline() string {
	if x != nil {
		return x.Landline
	}
	return ""
}

func (x *GetUserInfoRsp) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetUserInfoRsp) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

type MakeJoinReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetDomain string   `protobuf:"bytes,1,opt,name=targetDomain,proto3" json:"targetDomain,omitempty"`
	RoomID       string   `protobuf:"bytes,2,opt,name=roomID,proto3" json:"roomID,omitempty"`
	UserID       string   `protobuf:"bytes,3,opt,name=userID,proto3" json:"userID,omitempty"`
	Ver          []string `protobuf:"bytes,4,rep,name=ver,proto3" json:"ver,omitempty"`
}

func (x *MakeJoinReq) Reset() {
	*x = MakeJoinReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fed_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeJoinReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeJoinReq) ProtoMessage() {}

func (x *MakeJoinReq) ProtoReflect() protoreflect.Message {
	mi := &file_fed_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeJoinReq.ProtoReflect.Descriptor instead.
func (*MakeJoinReq) Descriptor() ([]byte, []int) {
	return file_fed_proto_rawDescGZIP(), []int{15}
}

func (x *MakeJoinReq) GetTargetDomain() string {
	if x != nil {
		return x.TargetDomain
	}
	return ""
}

func (x *MakeJoinReq) GetRoomID() string {
	if x != nil {
		return x.RoomID
	}
	return ""
}

func (x *MakeJoinReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *MakeJoinReq) GetVer() []string {
	if x != nil {
		return x.Ver
	}
	return nil
}

type MakeJoinRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JoinEvent *EventBuilder `protobuf:"bytes,1,opt,name=joinEvent,proto3" json:"joinEvent,omitempty"`
}

func (x *MakeJoinRsp) Reset() {
	*x = MakeJoinRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fed_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeJoinRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeJoinRsp) ProtoMessage() {}

func (x *MakeJoinRsp) ProtoReflect() protoreflect.Message {
	mi := &file_fed_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeJoinRsp.ProtoReflect.Descriptor instead.
func (*MakeJoinRsp) Descriptor() ([]byte, []int) {
	return file_fed_proto_rawDescGZIP(), []int{16}
}

func (x *MakeJoinRsp) GetJoinEvent() *EventBuilder {
	if x != nil {
		return x.JoinEvent
	}
	return nil
}

type SendJoinReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetDomain string `protobuf:"bytes,1,opt,name=targetDomain,proto3" json:"targetDomain,omitempty"`
	RoomID       string `protobuf:"bytes,2,opt,name=roomID,proto3" json:"roomID,omitempty"`
	EventID      string `protobuf:"bytes,3,opt,name=eventID,proto3" json:"eventID,omitempty"`
	Event        *Event `protobuf:"bytes,4,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *SendJoinReq) Reset() {
	*x = SendJoinReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fed_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendJoinReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendJoinReq) ProtoMessage() {}

func (x *SendJoinReq) ProtoReflect() protoreflect.Message {
	mi := &file_fed_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendJoinReq.ProtoReflect.Descriptor instead.
func (*SendJoinReq) Descriptor() ([]byte, []int) {
	return file_fed_proto_rawDescGZIP(), []int{17}
}

func (x *SendJoinReq) GetTargetDomain() string {
	if x != nil {
		return x.TargetDomain
	}
	return ""
}

func (x *SendJoinReq) GetRoomID() string {
	if x != nil {
		return x.RoomID
	}
	return ""
}

func (x *SendJoinReq) GetEventID() string {
	if x != nil {
		return x.EventID
	}
	return ""
}

func (x *SendJoinReq) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type SendJoinRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateEvents []*Event `protobuf:"bytes,1,rep,name=stateEvents,proto3" json:"stateEvents,omitempty"`
	AuthEvents  []*Event `protobuf:"bytes,2,rep,name=authEvents,proto3" json:"authEvents,omitempty"`
}

func (x *SendJoinRsp) Reset() {
	*x = SendJoinRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fed_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendJoinRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendJoinRsp) ProtoMessage() {}

func (x *SendJoinRsp) ProtoReflect() protoreflect.Message {
	mi := &file_fed_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendJoinRsp.ProtoReflect.Descriptor instead.
func (*SendJoinRsp) Descriptor() ([]byte, []int) {
	return file_fed_proto_rawDescGZIP(), []int{18}
}

func (x *SendJoinRsp) GetStateEvents() []*Event {
	if x != nil {
		return x.StateEvents
	}
	return nil
}

func (x *SendJoinRsp) GetAuthEvents() []*Event {
	if x != nil {
		return x.AuthEvents
	}
	return nil
}

type MakeLeaveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetDomain string `protobuf:"bytes,1,opt,name=targetDomain,proto3" json:"targetDomain,omitempty"`
	RoomID       string `protobuf:"bytes,2,opt,name=roomID,proto3" json:"roomID,omitempty"`
	UserID       string `protobuf:"bytes,3,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *MakeLeaveReq) Reset() {
	*x = MakeLeaveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fed_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeLeaveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeLeaveReq) ProtoMessage() {}

func (x *MakeLeaveReq) ProtoReflect() protoreflect.Message {
	mi := &file_fed_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeLeaveReq.ProtoReflect.Descriptor instead.
func (*MakeLeaveReq) Descriptor() ([]byte, []int) {
	return file_fed_proto_rawDescGZIP(), []int{19}
}

func (x *MakeLeaveReq) GetTargetDomain() string {
	if x != nil {
		return x.TargetDomain
	}
	return ""
}

func (x *MakeLeaveReq) GetRoomID() string {
	if x != nil {
		return x.RoomID
	}
	return ""
}

func (x *MakeLeaveReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type MakeLeaveRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *EventBuilder `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *MakeLeaveRsp) Reset() {
	*x = MakeLeaveRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fed_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeLeaveRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeLeaveRsp) ProtoMessage() {}

func (x *MakeLeaveRsp) ProtoReflect() protoreflect.Message {
	mi := &file_fed_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeLeaveRsp.ProtoReflect.Descriptor instead.
func (*MakeLeaveRsp) Descriptor() ([]byte, []int) {
	return file_fed_proto_rawDescGZIP(), []int{20}
}

func (x *MakeLeaveRsp) GetEvent() *EventBuilder {
	if x != nil {
		return x.Event
	}
	return nil
}

type SendLeaveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetDomain string `protobuf:"bytes,1,opt,name=targetDomain,proto3" json:"targetDomain,omitempty"`
	RoomID       string `protobuf:"bytes,2,opt,name=roomID,proto3" json:"roomID,omitempty"`
	EventID      string `protobuf:"bytes,3,opt,name=eventID,proto3" json:"eventID,omitempty"`
	Event        *Event `protobuf:"bytes,4,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *SendLeaveReq) Reset() {
	*x = SendLeaveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fed_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendLeaveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendLeaveReq) ProtoMessage() {}

func (x *SendLeaveReq) ProtoReflect() protoreflect.Message {
	mi := &file_fed_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendLeaveReq.ProtoReflect.Descriptor instead.
func (*SendLeaveReq) Descriptor() ([]byte, []int) {
	return file_fed_proto_rawDescGZIP(), []int{21}
}

func (x *SendLeaveReq) GetTargetDomain() string {
	if x != nil {
		return x.TargetDomain
	}
	return ""
}

func (x *SendLeaveReq) GetRoomID() string {
	if x != nil {
		return x.RoomID
	}
	return ""
}

func (x *SendLeaveReq) GetEventID() string {
	if x != nil {
		return x.EventID
	}
	return ""
}

func (x *SendLeaveReq) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type SendLeaveRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32 `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
}

func (x *SendLeaveRsp) Reset() {
	*x = SendLeaveRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fed_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendLeaveRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendLeaveRsp) ProtoMessage() {}

func (x *SendLeaveRsp) ProtoReflect() protoreflect.Message {
	mi := &file_fed_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendLeaveRsp.ProtoReflect.Descriptor instead.
func (*SendLeaveRsp) Descriptor() ([]byte, []int) {
	return file_fed_proto_rawDescGZIP(), []int{22}
}

func (x *SendLeaveRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type SendInviteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetDomain string `protobuf:"bytes,1,opt,name=targetDomain,proto3" json:"targetDomain,omitempty"`
	Event        *Event `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *SendInviteReq) Reset() {
	*x = SendInviteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fed_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendInviteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendInviteReq) ProtoMessage() {}

func (x *SendInviteReq) ProtoReflect() protoreflect.Message {
	mi := &file_fed_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendInviteReq.ProtoReflect.Descriptor instead.
func (*SendInviteReq) Descriptor() ([]byte, []int) {
	return file_fed_proto_rawDescGZIP(), []int{23}
}

func (x *SendInviteReq) GetTargetDomain() string {
	if x != nil {
		return x.TargetDomain
	}
	return ""
}

func (x *SendInviteReq) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type SendInviteRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Event *Event `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *SendInviteRsp) Reset() {
	*x = SendInviteRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fed_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendInviteRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendInviteRsp) ProtoMessage() {}

func (x *SendInviteRsp) ProtoReflect() protoreflect.Message {
	mi := &file_fed_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendInviteRsp.ProtoReflect.Descriptor instead.
func (*SendInviteRsp) Descriptor() ([]byte, []int) {
	return file_fed_proto_rawDescGZIP(), []int{24}
}

func (x *SendInviteRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SendInviteRsp) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

var File_fed_proto protoreflect.FileDescriptor

var file_fed_proto_rawDesc = []byte{
	0x0a, 0x09, 0x66, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a,
	0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x74, 0x0a,
	0x0a, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x44, 0x55, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0x58, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x65, 0x64, 0x41, 0x6c, 0x69,
	0x61, 0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x48, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x46, 0x64, 0x64, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x6f, 0x6f, 0x6d,
	0x49, 0x44, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x22, 0x4b, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x22, 0xa9, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x55, 0x52, 0x4c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x22, 0x0a, 0x0c,
	0x65, 0x78, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67,
	0x22, 0x4a, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x22, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x2c, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x52, 0x4c, 0x22, 0x4f, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x22, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x35, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x73, 0x70,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x67, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f,
	0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49,
	0x44, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x69, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x73, 0x70, 0x12, 0x2b,
	0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0b,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x0a, 0x61,
	0x75, 0x74, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xa5, 0x01, 0x0a, 0x0b, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x49,
	0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x33,
	0x0a, 0x0b, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x4c, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x22, 0xaa, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x6a, 0x6f, 0x62, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6a, 0x6f, 0x62, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x64, 0x6c, 0x69,
	0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x64, 0x6c, 0x69,
	0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x73,
	0x0a, 0x0b, 0x4d, 0x61, 0x6b, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a,
	0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03,
	0x76, 0x65, 0x72, 0x22, 0x3d, 0x0a, 0x0b, 0x4d, 0x61, 0x6b, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x52,
	0x73, 0x70, 0x12, 0x2e, 0x0a, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x65, 0x0a, 0x0b, 0x53, 0x65, 0x6e,
	0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x70, 0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0x62, 0x0a, 0x0c, 0x4d, 0x61, 0x6b, 0x65, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x22, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x22, 0x36, 0x0a, 0x0c, 0x4d, 0x61, 0x6b, 0x65, 0x4c, 0x65, 0x61, 0x76,
	0x65, 0x52, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x85, 0x01, 0x0a,
	0x0c, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a,
	0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x22, 0x22, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x65, 0x61, 0x76,
	0x65, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x54, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1f, 0x0a,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70,
	0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x44,
	0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x32, 0xca, 0x05, 0x0a, 0x0a, 0x46, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x07, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x44, 0x55, 0x12, 0x0e,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x44, 0x55, 0x52, 0x65, 0x71, 0x1a, 0x09,
	0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x18, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x64, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x6f,
	0x6f, 0x6d, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x46, 0x64, 0x64, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x52, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x09, 0x47, 0x65, 0x74,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3a,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x13,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x08, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x73, 0x70, 0x22, 0x00, 0x30, 0x01, 0x12, 0x37, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a,
	0x12, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x08, 0x4d, 0x61, 0x6b, 0x65, 0x4a, 0x6f, 0x69,
	0x6e, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x4a, 0x6f, 0x69, 0x6e,
	0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x4a, 0x6f, 0x69,
	0x6e, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4a, 0x6f, 0x69, 0x6e,
	0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x09, 0x4d, 0x61, 0x6b, 0x65, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x4c, 0x65, 0x61, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x4c, 0x65,
	0x61, 0x76, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64,
	0x4c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4c,
	0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0a, 0x53,
	0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x73, 0x70, 0x22,
	0x00, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_fed_proto_rawDescOnce sync.Once
	file_fed_proto_rawDescData = file_fed_proto_rawDesc
)

func file_fed_proto_rawDescGZIP() []byte {
	file_fed_proto_rawDescOnce.Do(func() {
		file_fed_proto_rawDescData = protoimpl.X.CompressGZIP(file_fed_proto_rawDescData)
	})
	return file_fed_proto_rawDescData
}

var file_fed_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_fed_proto_goTypes = []interface{}{
	(*SendEDUReq)(nil),           // 0: pb.SendEDUReq
	(*GetFedAliasRoomIDReq)(nil), // 1: pb.GetFedAliasRoomIDReq
	(*GetFddAliasRoomIDRsp)(nil), // 2: pb.GetFddAliasRoomIDRsp
	(*GetProfileReq)(nil),        // 3: pb.GetProfileReq
	(*GetProfileRsp)(nil),        // 4: pb.GetProfileRsp
	(*GetAvatarReq)(nil),         // 5: pb.GetAvatarReq
	(*GetAvatarRsp)(nil),         // 6: pb.GetAvatarRsp
	(*GetDisplayNameReq)(nil),    // 7: pb.GetDisplayNameReq
	(*GetDisplayNameRsp)(nil),    // 8: pb.GetDisplayNameRsp
	(*GetRoomStateReq)(nil),      // 9: pb.GetRoomStateReq
	(*GetRoomStateRsp)(nil),      // 10: pb.GetRoomStateRsp
	(*DownloadReq)(nil),          // 11: pb.DownloadReq
	(*DownloadRsp)(nil),          // 12: pb.DownloadRsp
	(*GetUserInfoReq)(nil),       // 13: pb.GetUserInfoReq
	(*GetUserInfoRsp)(nil),       // 14: pb.GetUserInfoRsp
	(*MakeJoinReq)(nil),          // 15: pb.MakeJoinReq
	(*MakeJoinRsp)(nil),          // 16: pb.MakeJoinRsp
	(*SendJoinReq)(nil),          // 17: pb.SendJoinReq
	(*SendJoinRsp)(nil),          // 18: pb.SendJoinRsp
	(*MakeLeaveReq)(nil),         // 19: pb.MakeLeaveReq
	(*MakeLeaveRsp)(nil),         // 20: pb.MakeLeaveRsp
	(*SendLeaveReq)(nil),         // 21: pb.SendLeaveReq
	(*SendLeaveRsp)(nil),         // 22: pb.SendLeaveRsp
	(*SendInviteReq)(nil),        // 23: pb.SendInviteReq
	(*SendInviteRsp)(nil),        // 24: pb.SendInviteRsp
	(*Event)(nil),                // 25: pb.Event
	(*EventBuilder)(nil),         // 26: pb.EventBuilder
	(*Empty)(nil),                // 27: pb.Empty
}
var file_fed_proto_depIdxs = []int32{
	25, // 0: pb.GetRoomStateRsp.stateEvents:type_name -> pb.Event
	25, // 1: pb.GetRoomStateRsp.authEvents:type_name -> pb.Event
	26, // 2: pb.MakeJoinRsp.joinEvent:type_name -> pb.EventBuilder
	25, // 3: pb.SendJoinReq.event:type_name -> pb.Event
	25, // 4: pb.SendJoinRsp.stateEvents:type_name -> pb.Event
	25, // 5: pb.SendJoinRsp.authEvents:type_name -> pb.Event
	26, // 6: pb.MakeLeaveRsp.event:type_name -> pb.EventBuilder
	25, // 7: pb.SendLeaveReq.event:type_name -> pb.Event
	25, // 8: pb.SendInviteReq.event:type_name -> pb.Event
	25, // 9: pb.SendInviteRsp.event:type_name -> pb.Event
	0,  // 10: pb.Federation.SendEDU:input_type -> pb.SendEDUReq
	1,  // 11: pb.Federation.GetAliasRoomID:input_type -> pb.GetFedAliasRoomIDReq
	3,  // 12: pb.Federation.GetProfile:input_type -> pb.GetProfileReq
	5,  // 13: pb.Federation.GetAvatar:input_type -> pb.GetAvatarReq
	7,  // 14: pb.Federation.GetDisplayName:input_type -> pb.GetDisplayNameReq
	9,  // 15: pb.Federation.GetRoomState:input_type -> pb.GetRoomStateReq
	11, // 16: pb.Federation.Download:input_type -> pb.DownloadReq
	13, // 17: pb.Federation.GetUserInfo:input_type -> pb.GetUserInfoReq
	15, // 18: pb.Federation.MakeJoin:input_type -> pb.MakeJoinReq
	17, // 19: pb.Federation.SendJoin:input_type -> pb.SendJoinReq
	19, // 20: pb.Federation.MakeLeave:input_type -> pb.MakeLeaveReq
	21, // 21: pb.Federation.SendLeave:input_type -> pb.SendLeaveReq
	23, // 22: pb.Federation.SendInvite:input_type -> pb.SendInviteReq
	27, // 23: pb.Federation.SendEDU:output_type -> pb.Empty
	2,  // 24: pb.Federation.GetAliasRoomID:output_type -> pb.GetFddAliasRoomIDRsp
	4,  // 25: pb.Federation.GetProfile:output_type -> pb.GetProfileRsp
	6,  // 26: pb.Federation.GetAvatar:output_type -> pb.GetAvatarRsp
	8,  // 27: pb.Federation.GetDisplayName:output_type -> pb.GetDisplayNameRsp
	10, // 28: pb.Federation.GetRoomState:output_type -> pb.GetRoomStateRsp
	12, // 29: pb.Federation.Download:output_type -> pb.DownloadRsp
	14, // 30: pb.Federation.GetUserInfo:output_type -> pb.GetUserInfoRsp
	16, // 31: pb.Federation.MakeJoin:output_type -> pb.MakeJoinRsp
	18, // 32: pb.Federation.SendJoin:output_type -> pb.SendJoinRsp
	20, // 33: pb.Federation.MakeLeave:output_type -> pb.MakeLeaveRsp
	22, // 34: pb.Federation.SendLeave:output_type -> pb.SendLeaveRsp
	24, // 35: pb.Federation.SendInvite:output_type -> pb.SendInviteRsp
	23, // [23:36] is the sub-list for method output_type
	10, // [10:23] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_fed_proto_init() }
func file_fed_proto_init() {
	if File_fed_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_fed_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendEDUReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fed_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFedAliasRoomIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fed_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFddAliasRoomIDRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fed_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fed_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fed_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvatarReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fed_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvatarRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fed_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDisplayNameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fed_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDisplayNameRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fed_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomStateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fed_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomStateRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fed_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fed_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fed_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fed_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fed_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeJoinReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fed_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeJoinRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fed_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendJoinReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fed_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendJoinRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fed_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeLeaveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fed_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeLeaveRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fed_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendLeaveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fed_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendLeaveRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fed_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendInviteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fed_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendInviteRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fed_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fed_proto_goTypes,
		DependencyIndexes: file_fed_proto_depIdxs,
		MessageInfos:      file_fed_proto_msgTypes,
	}.Build()
	File_fed_proto = out.File
	file_fed_proto_rawDesc = nil
	file_fed_proto_goTypes = nil
	file_fed_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FederationClient is the client API for Federation service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FederationClient interface {
	SendEDU(ctx context.Context, in *SendEDUReq, opts ...grpc.CallOption) (*Empty, error)
	GetAliasRoomID(ctx context.Context, in *GetFedAliasRoomIDReq, opts ...grpc.CallOption) (*GetFddAliasRoomIDRsp, error)
	GetProfile(ctx context.Context, in *GetProfileReq, opts ...grpc.CallOption) (*GetProfileRsp, error)
	GetAvatar(ctx context.Context, in *GetAvatarReq, opts ...grpc.CallOption) (*GetAvatarRsp, error)
	GetDisplayName(ctx context.Context, in *GetDisplayNameReq, opts ...grpc.CallOption) (*GetDisplayNameRsp, error)
	GetRoomState(ctx context.Context, in *GetRoomStateReq, opts ...grpc.CallOption) (*GetRoomStateRsp, error)
	Download(ctx context.Context, in *DownloadReq, opts ...grpc.CallOption) (Federation_DownloadClient, error)
	GetUserInfo(ctx context.Context, in *GetUserInfoReq, opts ...grpc.CallOption) (*GetUserInfoRsp, error)
	MakeJoin(ctx context.Context, in *MakeJoinReq, opts ...grpc.CallOption) (*MakeJoinRsp, error)
	SendJoin(ctx context.Context, in *SendJoinReq, opts ...grpc.CallOption) (*SendJoinRsp, error)
	MakeLeave(ctx context.Context, in *MakeLeaveReq, opts ...grpc.CallOption) (*MakeLeaveRsp, error)
	SendLeave(ctx context.Context, in *SendLeaveReq, opts ...grpc.CallOption) (*SendLeaveRsp, error)
	SendInvite(ctx context.Context, in *SendInviteReq, opts ...grpc.CallOption) (*SendInviteRsp, error)
}

type federationClient struct {
	cc grpc.ClientConnInterface
}

func NewFederationClient(cc grpc.ClientConnInterface) FederationClient {
	return &federationClient{cc}
}

func (c *federationClient) SendEDU(ctx context.Context, in *SendEDUReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.Federation/SendEDU", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *federationClient) GetAliasRoomID(ctx context.Context, in *GetFedAliasRoomIDReq, opts ...grpc.CallOption) (*GetFddAliasRoomIDRsp, error) {
	out := new(GetFddAliasRoomIDRsp)
	err := c.cc.Invoke(ctx, "/pb.Federation/GetAliasRoomID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *federationClient) GetProfile(ctx context.Context, in *GetProfileReq, opts ...grpc.CallOption) (*GetProfileRsp, error) {
	out := new(GetProfileRsp)
	err := c.cc.Invoke(ctx, "/pb.Federation/GetProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *federationClient) GetAvatar(ctx context.Context, in *GetAvatarReq, opts ...grpc.CallOption) (*GetAvatarRsp, error) {
	out := new(GetAvatarRsp)
	err := c.cc.Invoke(ctx, "/pb.Federation/GetAvatar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *federationClient) GetDisplayName(ctx context.Context, in *GetDisplayNameReq, opts ...grpc.CallOption) (*GetDisplayNameRsp, error) {
	out := new(GetDisplayNameRsp)
	err := c.cc.Invoke(ctx, "/pb.Federation/GetDisplayName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *federationClient) GetRoomState(ctx context.Context, in *GetRoomStateReq, opts ...grpc.CallOption) (*GetRoomStateRsp, error) {
	out := new(GetRoomStateRsp)
	err := c.cc.Invoke(ctx, "/pb.Federation/GetRoomState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *federationClient) Download(ctx context.Context, in *DownloadReq, opts ...grpc.CallOption) (Federation_DownloadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Federation_serviceDesc.Streams[0], "/pb.Federation/Download", opts...)
	if err != nil {
		return nil, err
	}
	x := &federationDownloadClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Federation_DownloadClient interface {
	Recv() (*DownloadRsp, error)
	grpc.ClientStream
}

type federationDownloadClient struct {
	grpc.ClientStream
}

func (x *federationDownloadClient) Recv() (*DownloadRsp, error) {
	m := new(DownloadRsp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *federationClient) GetUserInfo(ctx context.Context, in *GetUserInfoReq, opts ...grpc.CallOption) (*GetUserInfoRsp, error) {
	out := new(GetUserInfoRsp)
	err := c.cc.Invoke(ctx, "/pb.Federation/GetUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *federationClient) MakeJoin(ctx context.Context, in *MakeJoinReq, opts ...grpc.CallOption) (*MakeJoinRsp, error) {
	out := new(MakeJoinRsp)
	err := c.cc.Invoke(ctx, "/pb.Federation/MakeJoin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *federationClient) SendJoin(ctx context.Context, in *SendJoinReq, opts ...grpc.CallOption) (*SendJoinRsp, error) {
	out := new(SendJoinRsp)
	err := c.cc.Invoke(ctx, "/pb.Federation/SendJoin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *federationClient) MakeLeave(ctx context.Context, in *MakeLeaveReq, opts ...grpc.CallOption) (*MakeLeaveRsp, error) {
	out := new(MakeLeaveRsp)
	err := c.cc.Invoke(ctx, "/pb.Federation/MakeLeave", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *federationClient) SendLeave(ctx context.Context, in *SendLeaveReq, opts ...grpc.CallOption) (*SendLeaveRsp, error) {
	out := new(SendLeaveRsp)
	err := c.cc.Invoke(ctx, "/pb.Federation/SendLeave", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *federationClient) SendInvite(ctx context.Context, in *SendInviteReq, opts ...grpc.CallOption) (*SendInviteRsp, error) {
	out := new(SendInviteRsp)
	err := c.cc.Invoke(ctx, "/pb.Federation/SendInvite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FederationServer is the server API for Federation service.
type FederationServer interface {
	SendEDU(context.Context, *SendEDUReq) (*Empty, error)
	GetAliasRoomID(context.Context, *GetFedAliasRoomIDReq) (*GetFddAliasRoomIDRsp, error)
	GetProfile(context.Context, *GetProfileReq) (*GetProfileRsp, error)
	GetAvatar(context.Context, *GetAvatarReq) (*GetAvatarRsp, error)
	GetDisplayName(context.Context, *GetDisplayNameReq) (*GetDisplayNameRsp, error)
	GetRoomState(context.Context, *GetRoomStateReq) (*GetRoomStateRsp, error)
	Download(*DownloadReq, Federation_DownloadServer) error
	GetUserInfo(context.Context, *GetUserInfoReq) (*GetUserInfoRsp, error)
	MakeJoin(context.Context, *MakeJoinReq) (*MakeJoinRsp, error)
	SendJoin(context.Context, *SendJoinReq) (*SendJoinRsp, error)
	MakeLeave(context.Context, *MakeLeaveReq) (*MakeLeaveRsp, error)
	SendLeave(context.Context, *SendLeaveReq) (*SendLeaveRsp, error)
	SendInvite(context.Context, *SendInviteReq) (*SendInviteRsp, error)
}

// UnimplementedFederationServer can be embedded to have forward compatible implementations.
type UnimplementedFederationServer struct {
}

func (*UnimplementedFederationServer) SendEDU(context.Context, *SendEDUReq) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendEDU not implemented")
}
func (*UnimplementedFederationServer) GetAliasRoomID(context.Context, *GetFedAliasRoomIDReq) (*GetFddAliasRoomIDRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAliasRoomID not implemented")
}
func (*UnimplementedFederationServer) GetProfile(context.Context, *GetProfileReq) (*GetProfileRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProfile not implemented")
}
func (*UnimplementedFederationServer) GetAvatar(context.Context, *GetAvatarReq) (*GetAvatarRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAvatar not implemented")
}
func (*UnimplementedFederationServer) GetDisplayName(context.Context, *GetDisplayNameReq) (*GetDisplayNameRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDisplayName not implemented")
}
func (*UnimplementedFederationServer) GetRoomState(context.Context, *GetRoomStateReq) (*GetRoomStateRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRoomState not implemented")
}
func (*UnimplementedFederationServer) Download(*DownloadReq, Federation_DownloadServer) error {
	return status.Errorf(codes.Unimplemented, "method Download not implemented")
}
func (*UnimplementedFederationServer) GetUserInfo(context.Context, *GetUserInfoReq) (*GetUserInfoRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserInfo not implemented")
}
func (*UnimplementedFederationServer) MakeJoin(context.Context, *MakeJoinReq) (*MakeJoinRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MakeJoin not implemented")
}
func (*UnimplementedFederationServer) SendJoin(context.Context, *SendJoinReq) (*SendJoinRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendJoin not implemented")
}
func (*UnimplementedFederationServer) MakeLeave(context.Context, *MakeLeaveReq) (*MakeLeaveRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MakeLeave not implemented")
}
func (*UnimplementedFederationServer) SendLeave(context.Context, *SendLeaveReq) (*SendLeaveRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendLeave not implemented")
}
func (*UnimplementedFederationServer) SendInvite(context.Context, *SendInviteReq) (*SendInviteRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendInvite not implemented")
}

func RegisterFederationServer(s *grpc.Server, srv FederationServer) {
	s.RegisterService(&_Federation_serviceDesc, srv)
}

func _Federation_SendEDU_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendEDUReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FederationServer).SendEDU(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Federation/SendEDU",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FederationServer).SendEDU(ctx, req.(*SendEDUReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Federation_GetAliasRoomID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFedAliasRoomIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FederationServer).GetAliasRoomID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Federation/GetAliasRoomID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FederationServer).GetAliasRoomID(ctx, req.(*GetFedAliasRoomIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Federation_GetProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProfileReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FederationServer).GetProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Federation/GetProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FederationServer).GetProfile(ctx, req.(*GetProfileReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Federation_GetAvatar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAvatarReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FederationServer).GetAvatar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Federation/GetAvatar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FederationServer).GetAvatar(ctx, req.(*GetAvatarReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Federation_GetDisplayName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDisplayNameReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FederationServer).GetDisplayName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Federation/GetDisplayName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FederationServer).GetDisplayName(ctx, req.(*GetDisplayNameReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Federation_GetRoomState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRoomStateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FederationServer).GetRoomState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Federation/GetRoomState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FederationServer).GetRoomState(ctx, req.(*GetRoomStateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Federation_Download_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DownloadReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FederationServer).Download(m, &federationDownloadServer{stream})
}

type Federation_DownloadServer interface {
	Send(*DownloadRsp) error
	grpc.ServerStream
}

type federationDownloadServer struct {
	grpc.ServerStream
}

func (x *federationDownloadServer) Send(m *DownloadRsp) error {
	return x.ServerStream.SendMsg(m)
}

func _Federation_GetUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FederationServer).GetUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Federation/GetUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FederationServer).GetUserInfo(ctx, req.(*GetUserInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Federation_MakeJoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MakeJoinReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FederationServer).MakeJoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Federation/MakeJoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FederationServer).MakeJoin(ctx, req.(*MakeJoinReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Federation_SendJoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendJoinReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FederationServer).SendJoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Federation/SendJoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FederationServer).SendJoin(ctx, req.(*SendJoinReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Federation_MakeLeave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MakeLeaveReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FederationServer).MakeLeave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Federation/MakeLeave",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FederationServer).MakeLeave(ctx, req.(*MakeLeaveReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Federation_SendLeave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendLeaveReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FederationServer).SendLeave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Federation/SendLeave",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FederationServer).SendLeave(ctx, req.(*SendLeaveReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Federation_SendInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendInviteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FederationServer).SendInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Federation/SendInvite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FederationServer).SendInvite(ctx, req.(*SendInviteReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Federation_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Federation",
	HandlerType: (*FederationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendEDU",
			Handler:    _Federation_SendEDU_Handler,
		},
		{
			MethodName: "GetAliasRoomID",
			Handler:    _Federation_GetAliasRoomID_Handler,
		},
		{
			MethodName: "GetProfile",
			Handler:    _Federation_GetProfile_Handler,
		},
		{
			MethodName: "GetAvatar",
			Handler:    _Federation_GetAvatar_Handler,
		},
		{
			MethodName: "GetDisplayName",
			Handler:    _Federation_GetDisplayName_Handler,
		},
		{
			MethodName: "GetRoomState",
			Handler:    _Federation_GetRoomState_Handler,
		},
		{
			MethodName: "GetUserInfo",
			Handler:    _Federation_GetUserInfo_Handler,
		},
		{
			MethodName: "MakeJoin",
			Handler:    _Federation_MakeJoin_Handler,
		},
		{
			MethodName: "SendJoin",
			Handler:    _Federation_SendJoin_Handler,
		},
		{
			MethodName: "MakeLeave",
			Handler:    _Federation_MakeLeave_Handler,
		},
		{
			MethodName: "SendLeave",
			Handler:    _Federation_SendLeave_Handler,
		},
		{
			MethodName: "SendInvite",
			Handler:    _Federation_SendInvite_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Download",
			Handler:       _Federation_Download_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "fed.proto",
}
