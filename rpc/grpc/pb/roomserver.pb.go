// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: roomserver.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryEventsByIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventIDs []string `protobuf:"bytes,1,rep,name=eventIDs,proto3" json:"eventIDs,omitempty"`
}

func (x *QueryEventsByIDReq) Reset() {
	*x = QueryEventsByIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomserver_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryEventsByIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryEventsByIDReq) ProtoMessage() {}

func (x *QueryEventsByIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_roomserver_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryEventsByIDReq.ProtoReflect.Descriptor instead.
func (*QueryEventsByIDReq) Descriptor() ([]byte, []int) {
	return file_roomserver_proto_rawDescGZIP(), []int{0}
}

func (x *QueryEventsByIDReq) GetEventIDs() []string {
	if x != nil {
		return x.EventIDs
	}
	return nil
}

type QueryEventsByIDRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventIDs []string `protobuf:"bytes,1,rep,name=eventIDs,proto3" json:"eventIDs,omitempty"`
	Events   []*Event `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *QueryEventsByIDRsp) Reset() {
	*x = QueryEventsByIDRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomserver_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryEventsByIDRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryEventsByIDRsp) ProtoMessage() {}

func (x *QueryEventsByIDRsp) ProtoReflect() protoreflect.Message {
	mi := &file_roomserver_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryEventsByIDRsp.ProtoReflect.Descriptor instead.
func (*QueryEventsByIDRsp) Descriptor() ([]byte, []int) {
	return file_roomserver_proto_rawDescGZIP(), []int{1}
}

func (x *QueryEventsByIDRsp) GetEventIDs() []string {
	if x != nil {
		return x.EventIDs
	}
	return nil
}

func (x *QueryEventsByIDRsp) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type QueryRoomEventByIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventID string `protobuf:"bytes,1,opt,name=eventID,proto3" json:"eventID,omitempty"`
	RoomID  string `protobuf:"bytes,2,opt,name=roomID,proto3" json:"roomID,omitempty"`
}

func (x *QueryRoomEventByIDReq) Reset() {
	*x = QueryRoomEventByIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomserver_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRoomEventByIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRoomEventByIDReq) ProtoMessage() {}

func (x *QueryRoomEventByIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_roomserver_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRoomEventByIDReq.ProtoReflect.Descriptor instead.
func (*QueryRoomEventByIDReq) Descriptor() ([]byte, []int) {
	return file_roomserver_proto_rawDescGZIP(), []int{2}
}

func (x *QueryRoomEventByIDReq) GetEventID() string {
	if x != nil {
		return x.EventID
	}
	return ""
}

func (x *QueryRoomEventByIDReq) GetRoomID() string {
	if x != nil {
		return x.RoomID
	}
	return ""
}

type QueryRoomEventByIDRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventID string `protobuf:"bytes,1,opt,name=eventID,proto3" json:"eventID,omitempty"`
	RoomID  string `protobuf:"bytes,2,opt,name=roomID,proto3" json:"roomID,omitempty"`
	Event   *Event `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *QueryRoomEventByIDRsp) Reset() {
	*x = QueryRoomEventByIDRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomserver_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRoomEventByIDRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRoomEventByIDRsp) ProtoMessage() {}

func (x *QueryRoomEventByIDRsp) ProtoReflect() protoreflect.Message {
	mi := &file_roomserver_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRoomEventByIDRsp.ProtoReflect.Descriptor instead.
func (*QueryRoomEventByIDRsp) Descriptor() ([]byte, []int) {
	return file_roomserver_proto_rawDescGZIP(), []int{3}
}

func (x *QueryRoomEventByIDRsp) GetEventID() string {
	if x != nil {
		return x.EventID
	}
	return ""
}

func (x *QueryRoomEventByIDRsp) GetRoomID() string {
	if x != nil {
		return x.RoomID
	}
	return ""
}

func (x *QueryRoomEventByIDRsp) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type QueryJoinRoomsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *QueryJoinRoomsReq) Reset() {
	*x = QueryJoinRoomsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomserver_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryJoinRoomsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryJoinRoomsReq) ProtoMessage() {}

func (x *QueryJoinRoomsReq) ProtoReflect() protoreflect.Message {
	mi := &file_roomserver_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryJoinRoomsReq.ProtoReflect.Descriptor instead.
func (*QueryJoinRoomsReq) Descriptor() ([]byte, []int) {
	return file_roomserver_proto_rawDescGZIP(), []int{4}
}

func (x *QueryJoinRoomsReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type QueryJoinRoomsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Rooms  []string `protobuf:"bytes,2,rep,name=rooms,proto3" json:"rooms,omitempty"`
}

func (x *QueryJoinRoomsRsp) Reset() {
	*x = QueryJoinRoomsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomserver_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryJoinRoomsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryJoinRoomsRsp) ProtoMessage() {}

func (x *QueryJoinRoomsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_roomserver_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryJoinRoomsRsp.ProtoReflect.Descriptor instead.
func (*QueryJoinRoomsRsp) Descriptor() ([]byte, []int) {
	return file_roomserver_proto_rawDescGZIP(), []int{5}
}

func (x *QueryJoinRoomsRsp) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *QueryJoinRoomsRsp) GetRooms() []string {
	if x != nil {
		return x.Rooms
	}
	return nil
}

type QueryRoomStateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomID string `protobuf:"bytes,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
}

func (x *QueryRoomStateReq) Reset() {
	*x = QueryRoomStateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomserver_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRoomStateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRoomStateReq) ProtoMessage() {}

func (x *QueryRoomStateReq) ProtoReflect() protoreflect.Message {
	mi := &file_roomserver_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRoomStateReq.ProtoReflect.Descriptor instead.
func (*QueryRoomStateReq) Descriptor() ([]byte, []int) {
	return file_roomserver_proto_rawDescGZIP(), []int{6}
}

func (x *QueryRoomStateReq) GetRoomID() string {
	if x != nil {
		return x.RoomID
	}
	return ""
}

type QueryRoomStateRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomID            string            `protobuf:"bytes,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	RoomExists        bool              `protobuf:"varint,2,opt,name=roomExists,proto3" json:"roomExists,omitempty"`
	Creator           *Event            `protobuf:"bytes,3,opt,name=creator,proto3" json:"creator,omitempty"`
	JoinRule          *Event            `protobuf:"bytes,4,opt,name=joinRule,proto3" json:"joinRule,omitempty"`
	HistoryVisibility *Event            `protobuf:"bytes,5,opt,name=historyVisibility,proto3" json:"historyVisibility,omitempty"`
	Visibility        *Event            `protobuf:"bytes,6,opt,name=visibility,proto3" json:"visibility,omitempty"`
	Name              *Event            `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Topic             *Event            `protobuf:"bytes,8,opt,name=topic,proto3" json:"topic,omitempty"`
	Desc              *Event            `protobuf:"bytes,9,opt,name=desc,proto3" json:"desc,omitempty"`
	CanonicalAlias    *Event            `protobuf:"bytes,10,opt,name=canonicalAlias,proto3" json:"canonicalAlias,omitempty"`
	Power             *Event            `protobuf:"bytes,11,opt,name=power,proto3" json:"power,omitempty"`
	Alias             *Event            `protobuf:"bytes,12,opt,name=alias,proto3" json:"alias,omitempty"`
	Join              map[string]*Event `protobuf:"bytes,13,rep,name=join,proto3" json:"join,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Leave             map[string]*Event `protobuf:"bytes,14,rep,name=leave,proto3" json:"leave,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Invite            map[string]*Event `protobuf:"bytes,15,rep,name=invite,proto3" json:"invite,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ThirdInvite       map[string]*Event `protobuf:"bytes,16,rep,name=thirdInvite,proto3" json:"thirdInvite,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Avatar            *Event            `protobuf:"bytes,17,opt,name=avatar,proto3" json:"avatar,omitempty"`
	GuestAccess       *Event            `protobuf:"bytes,18,opt,name=guestAccess,proto3" json:"guestAccess,omitempty"`
}

func (x *QueryRoomStateRsp) Reset() {
	*x = QueryRoomStateRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomserver_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRoomStateRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRoomStateRsp) ProtoMessage() {}

func (x *QueryRoomStateRsp) ProtoReflect() protoreflect.Message {
	mi := &file_roomserver_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRoomStateRsp.ProtoReflect.Descriptor instead.
func (*QueryRoomStateRsp) Descriptor() ([]byte, []int) {
	return file_roomserver_proto_rawDescGZIP(), []int{7}
}

func (x *QueryRoomStateRsp) GetRoomID() string {
	if x != nil {
		return x.RoomID
	}
	return ""
}

func (x *QueryRoomStateRsp) GetRoomExists() bool {
	if x != nil {
		return x.RoomExists
	}
	return false
}

func (x *QueryRoomStateRsp) GetCreator() *Event {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *QueryRoomStateRsp) GetJoinRule() *Event {
	if x != nil {
		return x.JoinRule
	}
	return nil
}

func (x *QueryRoomStateRsp) GetHistoryVisibility() *Event {
	if x != nil {
		return x.HistoryVisibility
	}
	return nil
}

func (x *QueryRoomStateRsp) GetVisibility() *Event {
	if x != nil {
		return x.Visibility
	}
	return nil
}

func (x *QueryRoomStateRsp) GetName() *Event {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *QueryRoomStateRsp) GetTopic() *Event {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *QueryRoomStateRsp) GetDesc() *Event {
	if x != nil {
		return x.Desc
	}
	return nil
}

func (x *QueryRoomStateRsp) GetCanonicalAlias() *Event {
	if x != nil {
		return x.CanonicalAlias
	}
	return nil
}

func (x *QueryRoomStateRsp) GetPower() *Event {
	if x != nil {
		return x.Power
	}
	return nil
}

func (x *QueryRoomStateRsp) GetAlias() *Event {
	if x != nil {
		return x.Alias
	}
	return nil
}

func (x *QueryRoomStateRsp) GetJoin() map[string]*Event {
	if x != nil {
		return x.Join
	}
	return nil
}

func (x *QueryRoomStateRsp) GetLeave() map[string]*Event {
	if x != nil {
		return x.Leave
	}
	return nil
}

func (x *QueryRoomStateRsp) GetInvite() map[string]*Event {
	if x != nil {
		return x.Invite
	}
	return nil
}

func (x *QueryRoomStateRsp) GetThirdInvite() map[string]*Event {
	if x != nil {
		return x.ThirdInvite
	}
	return nil
}

func (x *QueryRoomStateRsp) GetAvatar() *Event {
	if x != nil {
		return x.Avatar
	}
	return nil
}

func (x *QueryRoomStateRsp) GetGuestAccess() *Event {
	if x != nil {
		return x.GuestAccess
	}
	return nil
}

type QueryBackFillEventsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventID string `protobuf:"bytes,1,opt,name=eventID,proto3" json:"eventID,omitempty"`
	Limit   int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	RoomID  string `protobuf:"bytes,3,opt,name=roomID,proto3" json:"roomID,omitempty"`
	Dir     string `protobuf:"bytes,4,opt,name=dir,proto3" json:"dir,omitempty"`
	Domain  string `protobuf:"bytes,5,opt,name=domain,proto3" json:"domain,omitempty"`
	Origin  string `protobuf:"bytes,6,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *QueryBackFillEventsReq) Reset() {
	*x = QueryBackFillEventsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomserver_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryBackFillEventsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBackFillEventsReq) ProtoMessage() {}

func (x *QueryBackFillEventsReq) ProtoReflect() protoreflect.Message {
	mi := &file_roomserver_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBackFillEventsReq.ProtoReflect.Descriptor instead.
func (*QueryBackFillEventsReq) Descriptor() ([]byte, []int) {
	return file_roomserver_proto_rawDescGZIP(), []int{8}
}

func (x *QueryBackFillEventsReq) GetEventID() string {
	if x != nil {
		return x.EventID
	}
	return ""
}

func (x *QueryBackFillEventsReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *QueryBackFillEventsReq) GetRoomID() string {
	if x != nil {
		return x.RoomID
	}
	return ""
}

func (x *QueryBackFillEventsReq) GetDir() string {
	if x != nil {
		return x.Dir
	}
	return ""
}

func (x *QueryBackFillEventsReq) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *QueryBackFillEventsReq) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

type QueryBackFillEventsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error          string   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Origin         string   `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
	OriginServerTs int64    `protobuf:"varint,3,opt,name=originServerTs,proto3" json:"originServerTs,omitempty"`
	Pdus           []*Event `protobuf:"bytes,4,rep,name=pdus,proto3" json:"pdus,omitempty"`
}

func (x *QueryBackFillEventsRsp) Reset() {
	*x = QueryBackFillEventsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomserver_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryBackFillEventsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBackFillEventsRsp) ProtoMessage() {}

func (x *QueryBackFillEventsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_roomserver_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBackFillEventsRsp.ProtoReflect.Descriptor instead.
func (*QueryBackFillEventsRsp) Descriptor() ([]byte, []int) {
	return file_roomserver_proto_rawDescGZIP(), []int{9}
}

func (x *QueryBackFillEventsRsp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *QueryBackFillEventsRsp) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *QueryBackFillEventsRsp) GetOriginServerTs() int64 {
	if x != nil {
		return x.OriginServerTs
	}
	return 0
}

func (x *QueryBackFillEventsRsp) GetPdus() []*Event {
	if x != nil {
		return x.Pdus
	}
	return nil
}

type QueryEventAuthReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventID string `protobuf:"bytes,1,opt,name=eventID,proto3" json:"eventID,omitempty"`
}

func (x *QueryEventAuthReq) Reset() {
	*x = QueryEventAuthReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomserver_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryEventAuthReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryEventAuthReq) ProtoMessage() {}

func (x *QueryEventAuthReq) ProtoReflect() protoreflect.Message {
	mi := &file_roomserver_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryEventAuthReq.ProtoReflect.Descriptor instead.
func (*QueryEventAuthReq) Descriptor() ([]byte, []int) {
	return file_roomserver_proto_rawDescGZIP(), []int{10}
}

func (x *QueryEventAuthReq) GetEventID() string {
	if x != nil {
		return x.EventID
	}
	return ""
}

type QueryEventAuthRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthEvents []*Event `protobuf:"bytes,1,rep,name=authEvents,proto3" json:"authEvents,omitempty"`
}

func (x *QueryEventAuthRsp) Reset() {
	*x = QueryEventAuthRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomserver_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryEventAuthRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryEventAuthRsp) ProtoMessage() {}

func (x *QueryEventAuthRsp) ProtoReflect() protoreflect.Message {
	mi := &file_roomserver_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryEventAuthRsp.ProtoReflect.Descriptor instead.
func (*QueryEventAuthRsp) Descriptor() ([]byte, []int) {
	return file_roomserver_proto_rawDescGZIP(), []int{11}
}

func (x *QueryEventAuthRsp) GetAuthEvents() []*Event {
	if x != nil {
		return x.AuthEvents
	}
	return nil
}

type SetRoomAliasReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Alias  string `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	RoomID string `protobuf:"bytes,3,opt,name=roomID,proto3" json:"roomID,omitempty"`
}

func (x *SetRoomAliasReq) Reset() {
	*x = SetRoomAliasReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomserver_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRoomAliasReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRoomAliasReq) ProtoMessage() {}

func (x *SetRoomAliasReq) ProtoReflect() protoreflect.Message {
	mi := &file_roomserver_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRoomAliasReq.ProtoReflect.Descriptor instead.
func (*SetRoomAliasReq) Descriptor() ([]byte, []int) {
	return file_roomserver_proto_rawDescGZIP(), []int{12}
}

func (x *SetRoomAliasReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *SetRoomAliasReq) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *SetRoomAliasReq) GetRoomID() string {
	if x != nil {
		return x.RoomID
	}
	return ""
}

type SetRoomAliasRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AliasExists bool `protobuf:"varint,1,opt,name=aliasExists,proto3" json:"aliasExists,omitempty"`
}

func (x *SetRoomAliasRsp) Reset() {
	*x = SetRoomAliasRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomserver_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRoomAliasRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRoomAliasRsp) ProtoMessage() {}

func (x *SetRoomAliasRsp) ProtoReflect() protoreflect.Message {
	mi := &file_roomserver_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRoomAliasRsp.ProtoReflect.Descriptor instead.
func (*SetRoomAliasRsp) Descriptor() ([]byte, []int) {
	return file_roomserver_proto_rawDescGZIP(), []int{13}
}

func (x *SetRoomAliasRsp) GetAliasExists() bool {
	if x != nil {
		return x.AliasExists
	}
	return false
}

type GetAliasRoomIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alias string `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (x *GetAliasRoomIDReq) Reset() {
	*x = GetAliasRoomIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomserver_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAliasRoomIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAliasRoomIDReq) ProtoMessage() {}

func (x *GetAliasRoomIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_roomserver_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAliasRoomIDReq.ProtoReflect.Descriptor instead.
func (*GetAliasRoomIDReq) Descriptor() ([]byte, []int) {
	return file_roomserver_proto_rawDescGZIP(), []int{14}
}

func (x *GetAliasRoomIDReq) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type GetAliasRoomIDRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomID string `protobuf:"bytes,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
}

func (x *GetAliasRoomIDRsp) Reset() {
	*x = GetAliasRoomIDRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomserver_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAliasRoomIDRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAliasRoomIDRsp) ProtoMessage() {}

func (x *GetAliasRoomIDRsp) ProtoReflect() protoreflect.Message {
	mi := &file_roomserver_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAliasRoomIDRsp.ProtoReflect.Descriptor instead.
func (*GetAliasRoomIDRsp) Descriptor() ([]byte, []int) {
	return file_roomserver_proto_rawDescGZIP(), []int{15}
}

func (x *GetAliasRoomIDRsp) GetRoomID() string {
	if x != nil {
		return x.RoomID
	}
	return ""
}

type RemoveRoomAliasReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Alias  string `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (x *RemoveRoomAliasReq) Reset() {
	*x = RemoveRoomAliasReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomserver_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRoomAliasReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRoomAliasReq) ProtoMessage() {}

func (x *RemoveRoomAliasReq) ProtoReflect() protoreflect.Message {
	mi := &file_roomserver_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRoomAliasReq.ProtoReflect.Descriptor instead.
func (*RemoveRoomAliasReq) Descriptor() ([]byte, []int) {
	return file_roomserver_proto_rawDescGZIP(), []int{16}
}

func (x *RemoveRoomAliasReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *RemoveRoomAliasReq) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type RemoveRoomAliasRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveRoomAliasRsp) Reset() {
	*x = RemoveRoomAliasRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomserver_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRoomAliasRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRoomAliasRsp) ProtoMessage() {}

func (x *RemoveRoomAliasRsp) ProtoReflect() protoreflect.Message {
	mi := &file_roomserver_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRoomAliasRsp.ProtoReflect.Descriptor instead.
func (*RemoveRoomAliasRsp) Descriptor() ([]byte, []int) {
	return file_roomserver_proto_rawDescGZIP(), []int{17}
}

type AllocRoomAliasReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Alias  string `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	RoomID string `protobuf:"bytes,3,opt,name=roomID,proto3" json:"roomID,omitempty"`
}

func (x *AllocRoomAliasReq) Reset() {
	*x = AllocRoomAliasReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomserver_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocRoomAliasReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocRoomAliasReq) ProtoMessage() {}

func (x *AllocRoomAliasReq) ProtoReflect() protoreflect.Message {
	mi := &file_roomserver_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocRoomAliasReq.ProtoReflect.Descriptor instead.
func (*AllocRoomAliasReq) Descriptor() ([]byte, []int) {
	return file_roomserver_proto_rawDescGZIP(), []int{18}
}

func (x *AllocRoomAliasReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *AllocRoomAliasReq) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *AllocRoomAliasReq) GetRoomID() string {
	if x != nil {
		return x.RoomID
	}
	return ""
}

type AllocRoomAliasRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AliasExists bool `protobuf:"varint,1,opt,name=aliasExists,proto3" json:"aliasExists,omitempty"`
}

func (x *AllocRoomAliasRsp) Reset() {
	*x = AllocRoomAliasRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomserver_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocRoomAliasRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocRoomAliasRsp) ProtoMessage() {}

func (x *AllocRoomAliasRsp) ProtoReflect() protoreflect.Message {
	mi := &file_roomserver_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocRoomAliasRsp.ProtoReflect.Descriptor instead.
func (*AllocRoomAliasRsp) Descriptor() ([]byte, []int) {
	return file_roomserver_proto_rawDescGZIP(), []int{19}
}

func (x *AllocRoomAliasRsp) GetAliasExists() bool {
	if x != nil {
		return x.AliasExists
	}
	return false
}

var File_roomserver_proto protoreflect.FileDescriptor

var file_roomserver_proto_rawDesc = []byte{
	0x0a, 0x10, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x30, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x22, 0x53, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x12, 0x21, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x49, 0x0a, 0x15, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x22, 0x6a, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x6f, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x73, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f,
	0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49,
	0x44, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x22, 0x2b, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x52,
	0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22,
	0x41, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d,
	0x73, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6f,
	0x6d, 0x73, 0x22, 0x2b, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x22,
	0xab, 0x08, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x23, 0x0a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x25, 0x0a, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x11, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x11, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x12, 0x29, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x05,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x1d, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x31, 0x0a, 0x0e,
	0x63, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x0e, 0x63, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12,
	0x1f, 0x0a, 0x05, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x12, 0x1f, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x12, 0x33, 0x0a, 0x04, 0x6a, 0x6f, 0x69, 0x6e, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x73, 0x70, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x04, 0x6a, 0x6f, 0x69, 0x6e, 0x12, 0x36, 0x0a, 0x05, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x18,
	0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x73, 0x70, 0x2e, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x39,
	0x0a, 0x06, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x73, 0x70, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x74, 0x68, 0x69,
	0x72, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x73, 0x70, 0x2e, 0x54, 0x68, 0x69, 0x72, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x74, 0x68, 0x69, 0x72, 0x64, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x2b, 0x0a, 0x0b, 0x67, 0x75, 0x65, 0x73, 0x74, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x67, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x1a, 0x42, 0x0a, 0x09, 0x4a, 0x6f, 0x69, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x43, 0x0a, 0x0a, 0x4c, 0x65, 0x61, 0x76, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x44, 0x0a, 0x0b,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1f, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70,
	0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x49, 0x0a, 0x10, 0x54, 0x68, 0x69, 0x72, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa2, 0x01,
	0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x6c, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44,
	0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64,
	0x69, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x22, 0x8d, 0x01, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x61, 0x63, 0x6b,
	0x46, 0x69, 0x6c, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x73, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x54, 0x73, 0x12, 0x1d, 0x0a, 0x04, 0x70, 0x64, 0x75, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x70, 0x64,
	0x75, 0x73, 0x22, 0x2d, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x22, 0x3e, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x73, 0x70, 0x12, 0x29, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0x57, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x41, 0x6c, 0x69, 0x61,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x22, 0x33, 0x0a, 0x0f, 0x53, 0x65,
	0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x73, 0x70, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x22,
	0x29, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x2b, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x52, 0x73, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x22, 0x42, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x73,
	0x70, 0x22, 0x59, 0x0a, 0x11, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x52, 0x6f, 0x6f, 0x6d, 0x41, 0x6c,
	0x69, 0x61, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x22, 0x35, 0x0a, 0x11,
	0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x52, 0x6f, 0x6f, 0x6d, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x73,
	0x70, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x73, 0x32, 0xbb, 0x05, 0x0a, 0x0a, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0x43, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x42, 0x79, 0x49, 0x44, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x6f, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x19, 0x2e,
	0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4a, 0x6f,
	0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x15,
	0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f,
	0x6d, 0x73, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x13, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x46,
	0x69, 0x6c, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70,
	0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x6c, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x12, 0x15, 0x2e, 0x70,
	0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0c,
	0x53, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x13, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x41, 0x6c,
	0x69, 0x61, 0x73, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x69, 0x61, 0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52,
	0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0f, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x16, 0x2e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x41, 0x6c, 0x69,
	0x61, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x40, 0x0a, 0x0e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x52, 0x6f, 0x6f, 0x6d, 0x41, 0x6c, 0x69, 0x61,
	0x73, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x52, 0x6f, 0x6f, 0x6d,
	0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x6c,
	0x6c, 0x6f, 0x63, 0x52, 0x6f, 0x6f, 0x6d, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x73, 0x70, 0x22,
	0x00, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_roomserver_proto_rawDescOnce sync.Once
	file_roomserver_proto_rawDescData = file_roomserver_proto_rawDesc
)

func file_roomserver_proto_rawDescGZIP() []byte {
	file_roomserver_proto_rawDescOnce.Do(func() {
		file_roomserver_proto_rawDescData = protoimpl.X.CompressGZIP(file_roomserver_proto_rawDescData)
	})
	return file_roomserver_proto_rawDescData
}

var file_roomserver_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_roomserver_proto_goTypes = []interface{}{
	(*QueryEventsByIDReq)(nil),     // 0: pb.QueryEventsByIDReq
	(*QueryEventsByIDRsp)(nil),     // 1: pb.QueryEventsByIDRsp
	(*QueryRoomEventByIDReq)(nil),  // 2: pb.QueryRoomEventByIDReq
	(*QueryRoomEventByIDRsp)(nil),  // 3: pb.QueryRoomEventByIDRsp
	(*QueryJoinRoomsReq)(nil),      // 4: pb.QueryJoinRoomsReq
	(*QueryJoinRoomsRsp)(nil),      // 5: pb.QueryJoinRoomsRsp
	(*QueryRoomStateReq)(nil),      // 6: pb.QueryRoomStateReq
	(*QueryRoomStateRsp)(nil),      // 7: pb.QueryRoomStateRsp
	(*QueryBackFillEventsReq)(nil), // 8: pb.QueryBackFillEventsReq
	(*QueryBackFillEventsRsp)(nil), // 9: pb.QueryBackFillEventsRsp
	(*QueryEventAuthReq)(nil),      // 10: pb.QueryEventAuthReq
	(*QueryEventAuthRsp)(nil),      // 11: pb.QueryEventAuthRsp
	(*SetRoomAliasReq)(nil),        // 12: pb.SetRoomAliasReq
	(*SetRoomAliasRsp)(nil),        // 13: pb.SetRoomAliasRsp
	(*GetAliasRoomIDReq)(nil),      // 14: pb.GetAliasRoomIDReq
	(*GetAliasRoomIDRsp)(nil),      // 15: pb.GetAliasRoomIDRsp
	(*RemoveRoomAliasReq)(nil),     // 16: pb.RemoveRoomAliasReq
	(*RemoveRoomAliasRsp)(nil),     // 17: pb.RemoveRoomAliasRsp
	(*AllocRoomAliasReq)(nil),      // 18: pb.AllocRoomAliasReq
	(*AllocRoomAliasRsp)(nil),      // 19: pb.AllocRoomAliasRsp
	nil,                            // 20: pb.QueryRoomStateRsp.JoinEntry
	nil,                            // 21: pb.QueryRoomStateRsp.LeaveEntry
	nil,                            // 22: pb.QueryRoomStateRsp.InviteEntry
	nil,                            // 23: pb.QueryRoomStateRsp.ThirdInviteEntry
	(*Event)(nil),                  // 24: pb.Event
}
var file_roomserver_proto_depIdxs = []int32{
	24, // 0: pb.QueryEventsByIDRsp.events:type_name -> pb.Event
	24, // 1: pb.QueryRoomEventByIDRsp.event:type_name -> pb.Event
	24, // 2: pb.QueryRoomStateRsp.creator:type_name -> pb.Event
	24, // 3: pb.QueryRoomStateRsp.joinRule:type_name -> pb.Event
	24, // 4: pb.QueryRoomStateRsp.historyVisibility:type_name -> pb.Event
	24, // 5: pb.QueryRoomStateRsp.visibility:type_name -> pb.Event
	24, // 6: pb.QueryRoomStateRsp.name:type_name -> pb.Event
	24, // 7: pb.QueryRoomStateRsp.topic:type_name -> pb.Event
	24, // 8: pb.QueryRoomStateRsp.desc:type_name -> pb.Event
	24, // 9: pb.QueryRoomStateRsp.canonicalAlias:type_name -> pb.Event
	24, // 10: pb.QueryRoomStateRsp.power:type_name -> pb.Event
	24, // 11: pb.QueryRoomStateRsp.alias:type_name -> pb.Event
	20, // 12: pb.QueryRoomStateRsp.join:type_name -> pb.QueryRoomStateRsp.JoinEntry
	21, // 13: pb.QueryRoomStateRsp.leave:type_name -> pb.QueryRoomStateRsp.LeaveEntry
	22, // 14: pb.QueryRoomStateRsp.invite:type_name -> pb.QueryRoomStateRsp.InviteEntry
	23, // 15: pb.QueryRoomStateRsp.thirdInvite:type_name -> pb.QueryRoomStateRsp.ThirdInviteEntry
	24, // 16: pb.QueryRoomStateRsp.avatar:type_name -> pb.Event
	24, // 17: pb.QueryRoomStateRsp.guestAccess:type_name -> pb.Event
	24, // 18: pb.QueryBackFillEventsRsp.pdus:type_name -> pb.Event
	24, // 19: pb.QueryEventAuthRsp.authEvents:type_name -> pb.Event
	24, // 20: pb.QueryRoomStateRsp.JoinEntry.value:type_name -> pb.Event
	24, // 21: pb.QueryRoomStateRsp.LeaveEntry.value:type_name -> pb.Event
	24, // 22: pb.QueryRoomStateRsp.InviteEntry.value:type_name -> pb.Event
	24, // 23: pb.QueryRoomStateRsp.ThirdInviteEntry.value:type_name -> pb.Event
	0,  // 24: pb.RoomServer.QueryEventsByID:input_type -> pb.QueryEventsByIDReq
	2,  // 25: pb.RoomServer.QueryRoomEventByID:input_type -> pb.QueryRoomEventByIDReq
	4,  // 26: pb.RoomServer.QueryJoinRooms:input_type -> pb.QueryJoinRoomsReq
	6,  // 27: pb.RoomServer.QueryRoomState:input_type -> pb.QueryRoomStateReq
	8,  // 28: pb.RoomServer.QueryBackFillEvents:input_type -> pb.QueryBackFillEventsReq
	10, // 29: pb.RoomServer.QueryEventAuth:input_type -> pb.QueryEventAuthReq
	12, // 30: pb.RoomServer.SetRoomAlias:input_type -> pb.SetRoomAliasReq
	14, // 31: pb.RoomServer.GetAliasRoomID:input_type -> pb.GetAliasRoomIDReq
	16, // 32: pb.RoomServer.RemoveRoomAlias:input_type -> pb.RemoveRoomAliasReq
	18, // 33: pb.RoomServer.AllocRoomAlias:input_type -> pb.AllocRoomAliasReq
	1,  // 34: pb.RoomServer.QueryEventsByID:output_type -> pb.QueryEventsByIDRsp
	3,  // 35: pb.RoomServer.QueryRoomEventByID:output_type -> pb.QueryRoomEventByIDRsp
	5,  // 36: pb.RoomServer.QueryJoinRooms:output_type -> pb.QueryJoinRoomsRsp
	7,  // 37: pb.RoomServer.QueryRoomState:output_type -> pb.QueryRoomStateRsp
	9,  // 38: pb.RoomServer.QueryBackFillEvents:output_type -> pb.QueryBackFillEventsRsp
	11, // 39: pb.RoomServer.QueryEventAuth:output_type -> pb.QueryEventAuthRsp
	13, // 40: pb.RoomServer.SetRoomAlias:output_type -> pb.SetRoomAliasRsp
	15, // 41: pb.RoomServer.GetAliasRoomID:output_type -> pb.GetAliasRoomIDRsp
	17, // 42: pb.RoomServer.RemoveRoomAlias:output_type -> pb.RemoveRoomAliasRsp
	19, // 43: pb.RoomServer.AllocRoomAlias:output_type -> pb.AllocRoomAliasRsp
	34, // [34:44] is the sub-list for method output_type
	24, // [24:34] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_roomserver_proto_init() }
func file_roomserver_proto_init() {
	if File_roomserver_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_roomserver_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryEventsByIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomserver_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryEventsByIDRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomserver_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRoomEventByIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomserver_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRoomEventByIDRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomserver_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryJoinRoomsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomserver_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryJoinRoomsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomserver_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRoomStateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomserver_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRoomStateRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomserver_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryBackFillEventsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomserver_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryBackFillEventsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomserver_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryEventAuthReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomserver_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryEventAuthRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomserver_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRoomAliasReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomserver_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRoomAliasRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomserver_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAliasRoomIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomserver_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAliasRoomIDRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomserver_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveRoomAliasReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomserver_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveRoomAliasRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomserver_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocRoomAliasReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomserver_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocRoomAliasRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_roomserver_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_roomserver_proto_goTypes,
		DependencyIndexes: file_roomserver_proto_depIdxs,
		MessageInfos:      file_roomserver_proto_msgTypes,
	}.Build()
	File_roomserver_proto = out.File
	file_roomserver_proto_rawDesc = nil
	file_roomserver_proto_goTypes = nil
	file_roomserver_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RoomServerClient is the client API for RoomServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RoomServerClient interface {
	QueryEventsByID(ctx context.Context, in *QueryEventsByIDReq, opts ...grpc.CallOption) (*QueryEventsByIDRsp, error)
	QueryRoomEventByID(ctx context.Context, in *QueryRoomEventByIDReq, opts ...grpc.CallOption) (*QueryRoomEventByIDRsp, error)
	QueryJoinRooms(ctx context.Context, in *QueryJoinRoomsReq, opts ...grpc.CallOption) (*QueryJoinRoomsRsp, error)
	QueryRoomState(ctx context.Context, in *QueryRoomStateReq, opts ...grpc.CallOption) (*QueryRoomStateRsp, error)
	QueryBackFillEvents(ctx context.Context, in *QueryBackFillEventsReq, opts ...grpc.CallOption) (*QueryBackFillEventsRsp, error)
	QueryEventAuth(ctx context.Context, in *QueryEventAuthReq, opts ...grpc.CallOption) (*QueryEventAuthRsp, error)
	SetRoomAlias(ctx context.Context, in *SetRoomAliasReq, opts ...grpc.CallOption) (*SetRoomAliasRsp, error)
	GetAliasRoomID(ctx context.Context, in *GetAliasRoomIDReq, opts ...grpc.CallOption) (*GetAliasRoomIDRsp, error)
	RemoveRoomAlias(ctx context.Context, in *RemoveRoomAliasReq, opts ...grpc.CallOption) (*RemoveRoomAliasRsp, error)
	AllocRoomAlias(ctx context.Context, in *AllocRoomAliasReq, opts ...grpc.CallOption) (*AllocRoomAliasRsp, error)
}

type roomServerClient struct {
	cc grpc.ClientConnInterface
}

func NewRoomServerClient(cc grpc.ClientConnInterface) RoomServerClient {
	return &roomServerClient{cc}
}

func (c *roomServerClient) QueryEventsByID(ctx context.Context, in *QueryEventsByIDReq, opts ...grpc.CallOption) (*QueryEventsByIDRsp, error) {
	out := new(QueryEventsByIDRsp)
	err := c.cc.Invoke(ctx, "/pb.RoomServer/QueryEventsByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServerClient) QueryRoomEventByID(ctx context.Context, in *QueryRoomEventByIDReq, opts ...grpc.CallOption) (*QueryRoomEventByIDRsp, error) {
	out := new(QueryRoomEventByIDRsp)
	err := c.cc.Invoke(ctx, "/pb.RoomServer/QueryRoomEventByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServerClient) QueryJoinRooms(ctx context.Context, in *QueryJoinRoomsReq, opts ...grpc.CallOption) (*QueryJoinRoomsRsp, error) {
	out := new(QueryJoinRoomsRsp)
	err := c.cc.Invoke(ctx, "/pb.RoomServer/QueryJoinRooms", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServerClient) QueryRoomState(ctx context.Context, in *QueryRoomStateReq, opts ...grpc.CallOption) (*QueryRoomStateRsp, error) {
	out := new(QueryRoomStateRsp)
	err := c.cc.Invoke(ctx, "/pb.RoomServer/QueryRoomState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServerClient) QueryBackFillEvents(ctx context.Context, in *QueryBackFillEventsReq, opts ...grpc.CallOption) (*QueryBackFillEventsRsp, error) {
	out := new(QueryBackFillEventsRsp)
	err := c.cc.Invoke(ctx, "/pb.RoomServer/QueryBackFillEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServerClient) QueryEventAuth(ctx context.Context, in *QueryEventAuthReq, opts ...grpc.CallOption) (*QueryEventAuthRsp, error) {
	out := new(QueryEventAuthRsp)
	err := c.cc.Invoke(ctx, "/pb.RoomServer/QueryEventAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServerClient) SetRoomAlias(ctx context.Context, in *SetRoomAliasReq, opts ...grpc.CallOption) (*SetRoomAliasRsp, error) {
	out := new(SetRoomAliasRsp)
	err := c.cc.Invoke(ctx, "/pb.RoomServer/SetRoomAlias", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServerClient) GetAliasRoomID(ctx context.Context, in *GetAliasRoomIDReq, opts ...grpc.CallOption) (*GetAliasRoomIDRsp, error) {
	out := new(GetAliasRoomIDRsp)
	err := c.cc.Invoke(ctx, "/pb.RoomServer/GetAliasRoomID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServerClient) RemoveRoomAlias(ctx context.Context, in *RemoveRoomAliasReq, opts ...grpc.CallOption) (*RemoveRoomAliasRsp, error) {
	out := new(RemoveRoomAliasRsp)
	err := c.cc.Invoke(ctx, "/pb.RoomServer/RemoveRoomAlias", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomServerClient) AllocRoomAlias(ctx context.Context, in *AllocRoomAliasReq, opts ...grpc.CallOption) (*AllocRoomAliasRsp, error) {
	out := new(AllocRoomAliasRsp)
	err := c.cc.Invoke(ctx, "/pb.RoomServer/AllocRoomAlias", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RoomServerServer is the server API for RoomServer service.
type RoomServerServer interface {
	QueryEventsByID(context.Context, *QueryEventsByIDReq) (*QueryEventsByIDRsp, error)
	QueryRoomEventByID(context.Context, *QueryRoomEventByIDReq) (*QueryRoomEventByIDRsp, error)
	QueryJoinRooms(context.Context, *QueryJoinRoomsReq) (*QueryJoinRoomsRsp, error)
	QueryRoomState(context.Context, *QueryRoomStateReq) (*QueryRoomStateRsp, error)
	QueryBackFillEvents(context.Context, *QueryBackFillEventsReq) (*QueryBackFillEventsRsp, error)
	QueryEventAuth(context.Context, *QueryEventAuthReq) (*QueryEventAuthRsp, error)
	SetRoomAlias(context.Context, *SetRoomAliasReq) (*SetRoomAliasRsp, error)
	GetAliasRoomID(context.Context, *GetAliasRoomIDReq) (*GetAliasRoomIDRsp, error)
	RemoveRoomAlias(context.Context, *RemoveRoomAliasReq) (*RemoveRoomAliasRsp, error)
	AllocRoomAlias(context.Context, *AllocRoomAliasReq) (*AllocRoomAliasRsp, error)
}

// UnimplementedRoomServerServer can be embedded to have forward compatible implementations.
type UnimplementedRoomServerServer struct {
}

func (*UnimplementedRoomServerServer) QueryEventsByID(context.Context, *QueryEventsByIDReq) (*QueryEventsByIDRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryEventsByID not implemented")
}
func (*UnimplementedRoomServerServer) QueryRoomEventByID(context.Context, *QueryRoomEventByIDReq) (*QueryRoomEventByIDRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryRoomEventByID not implemented")
}
func (*UnimplementedRoomServerServer) QueryJoinRooms(context.Context, *QueryJoinRoomsReq) (*QueryJoinRoomsRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryJoinRooms not implemented")
}
func (*UnimplementedRoomServerServer) QueryRoomState(context.Context, *QueryRoomStateReq) (*QueryRoomStateRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryRoomState not implemented")
}
func (*UnimplementedRoomServerServer) QueryBackFillEvents(context.Context, *QueryBackFillEventsReq) (*QueryBackFillEventsRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryBackFillEvents not implemented")
}
func (*UnimplementedRoomServerServer) QueryEventAuth(context.Context, *QueryEventAuthReq) (*QueryEventAuthRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryEventAuth not implemented")
}
func (*UnimplementedRoomServerServer) SetRoomAlias(context.Context, *SetRoomAliasReq) (*SetRoomAliasRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetRoomAlias not implemented")
}
func (*UnimplementedRoomServerServer) GetAliasRoomID(context.Context, *GetAliasRoomIDReq) (*GetAliasRoomIDRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAliasRoomID not implemented")
}
func (*UnimplementedRoomServerServer) RemoveRoomAlias(context.Context, *RemoveRoomAliasReq) (*RemoveRoomAliasRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveRoomAlias not implemented")
}
func (*UnimplementedRoomServerServer) AllocRoomAlias(context.Context, *AllocRoomAliasReq) (*AllocRoomAliasRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AllocRoomAlias not implemented")
}

func RegisterRoomServerServer(s *grpc.Server, srv RoomServerServer) {
	s.RegisterService(&_RoomServer_serviceDesc, srv)
}

func _RoomServer_QueryEventsByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryEventsByIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServerServer).QueryEventsByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.RoomServer/QueryEventsByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServerServer).QueryEventsByID(ctx, req.(*QueryEventsByIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomServer_QueryRoomEventByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRoomEventByIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServerServer).QueryRoomEventByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.RoomServer/QueryRoomEventByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServerServer).QueryRoomEventByID(ctx, req.(*QueryRoomEventByIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomServer_QueryJoinRooms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryJoinRoomsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServerServer).QueryJoinRooms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.RoomServer/QueryJoinRooms",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServerServer).QueryJoinRooms(ctx, req.(*QueryJoinRoomsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomServer_QueryRoomState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRoomStateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServerServer).QueryRoomState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.RoomServer/QueryRoomState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServerServer).QueryRoomState(ctx, req.(*QueryRoomStateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomServer_QueryBackFillEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryBackFillEventsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServerServer).QueryBackFillEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.RoomServer/QueryBackFillEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServerServer).QueryBackFillEvents(ctx, req.(*QueryBackFillEventsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomServer_QueryEventAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryEventAuthReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServerServer).QueryEventAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.RoomServer/QueryEventAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServerServer).QueryEventAuth(ctx, req.(*QueryEventAuthReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomServer_SetRoomAlias_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRoomAliasReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServerServer).SetRoomAlias(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.RoomServer/SetRoomAlias",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServerServer).SetRoomAlias(ctx, req.(*SetRoomAliasReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomServer_GetAliasRoomID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAliasRoomIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServerServer).GetAliasRoomID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.RoomServer/GetAliasRoomID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServerServer).GetAliasRoomID(ctx, req.(*GetAliasRoomIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomServer_RemoveRoomAlias_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveRoomAliasReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServerServer).RemoveRoomAlias(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.RoomServer/RemoveRoomAlias",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServerServer).RemoveRoomAlias(ctx, req.(*RemoveRoomAliasReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomServer_AllocRoomAlias_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AllocRoomAliasReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServerServer).AllocRoomAlias(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.RoomServer/AllocRoomAlias",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServerServer).AllocRoomAlias(ctx, req.(*AllocRoomAliasReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _RoomServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.RoomServer",
	HandlerType: (*RoomServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryEventsByID",
			Handler:    _RoomServer_QueryEventsByID_Handler,
		},
		{
			MethodName: "QueryRoomEventByID",
			Handler:    _RoomServer_QueryRoomEventByID_Handler,
		},
		{
			MethodName: "QueryJoinRooms",
			Handler:    _RoomServer_QueryJoinRooms_Handler,
		},
		{
			MethodName: "QueryRoomState",
			Handler:    _RoomServer_QueryRoomState_Handler,
		},
		{
			MethodName: "QueryBackFillEvents",
			Handler:    _RoomServer_QueryBackFillEvents_Handler,
		},
		{
			MethodName: "QueryEventAuth",
			Handler:    _RoomServer_QueryEventAuth_Handler,
		},
		{
			MethodName: "SetRoomAlias",
			Handler:    _RoomServer_SetRoomAlias_Handler,
		},
		{
			MethodName: "GetAliasRoomID",
			Handler:    _RoomServer_GetAliasRoomID_Handler,
		},
		{
			MethodName: "RemoveRoomAlias",
			Handler:    _RoomServer_RemoveRoomAlias_Handler,
		},
		{
			MethodName: "AllocRoomAlias",
			Handler:    _RoomServer_AllocRoomAlias_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "roomserver.proto",
}
